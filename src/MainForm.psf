<File version="3.2">
  <FileID>994b0401-5822-49c5-99cb-717d1f11a31a</FileID>
  <Preview>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
AMAP/H//5Gbgy7tOIQAAAABJRU5ErkJggg==</Preview>
  <Form>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
AA==</Form>
  <Code><![CDATA[# Write-Log -Level INFO -Message

#$checkedlistboxPermissionsToAssign.Items.Add($scopeDetails)

# Master list to store all items
$global:masterItems = @()

#region Control Helper Functions
function Update-ToolStripComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ToolStripComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ToolStripComboBox control.
	
	.PARAMETER ToolStripComboBox
		The ToolStripComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ToolStripComboBox's Items collection.
	
	.PARAMETER Append
		Adds the item(s) to the ToolStripComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ToolStripComboBox $toolStripComboBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ToolStripComboBox $toolStripComboBox1 "Red" -Append
		Update-ToolStripComboBox $toolStripComboBox1 "White" -Append
		Update-ToolStripComboBox $toolStripComboBox1 "Blue" -Append
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ToolStripComboBox]
		$ToolStripComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ToolStripComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ToolStripComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$ToolStripComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ToolStripComboBox.Items.Add($obj)
		}
		$ToolStripComboBox.EndUpdate()
	}
	else
	{
		$ToolStripComboBox.Items.Add($Items)
	}
}



function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$listBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}

function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ComboBox.DisplayMember = $DisplayMember
	}
	
	if ($ValueMember)
	{
		$ComboBox.ValueMember = $ValueMember
	}
}

#endregion

#region Control Theme Helper Function
<#
	.SYNOPSIS
		Applies a theme to the control and its children.
	
	.PARAMETER Control
		The control to theme. Usually the form itself.
	
	.PARAMETER Theme
		The color theme:
		Light
		Dark

	.PARAMETER CustomColor
		A hashtable that contains the color values.
		Keys:
		WindowColor
		ContainerColor
		BackColor
		ForeColor
		BorderColor
		SelectionForeColor
		SelectionBackColor
		MenuSelectionColor
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -Theme Dark
	
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -CustomColor @{ WindowColor = 'White'; ContainerBackColor = 'Gray'; BackColor... }
	.NOTES
		Created by SAPIEN Technologies, Inc.
#>
function Set-ControlTheme
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.ComponentModel.Component]$Control,
		[ValidateSet('Light', 'Dark')]
		[string]$Theme = 'Dark',
		[System.Collections.Hashtable]$CustomColor
	)
	
	$Font = [System.Drawing.Font]::New('Segoe UI', 9)
	
	#Initialize the colors
	if ($Theme -eq 'Dark')
	{
		$WindowColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ContainerColor = [System.Drawing.Color]::FromArgb(45, 45, 45)
		$BackColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ForeColor = [System.Drawing.Color]::White
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::DimGray
	}
	else
	{
		$WindowColor = [System.Drawing.Color]::White
		$ContainerColor = [System.Drawing.Color]::WhiteSmoke
		$BackColor = [System.Drawing.Color]::Gainsboro
		$ForeColor = [System.Drawing.Color]::Black
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::LightSteelBlue
	}
	
	if ($CustomColor)
	{
		#Check and Validate the custom colors:
		$Color = $CustomColor.WindowColor -as [System.Drawing.Color]
		if ($Color) { $WindowColor = $Color }
		$Color = $CustomColor.ContainerColor -as [System.Drawing.Color]
		if ($Color) { $ContainerColor = $Color }
		$Color = $CustomColor.BackColor -as [System.Drawing.Color]
		if ($Color) { $BackColor = $Color }
		$Color = $CustomColor.ForeColor -as [System.Drawing.Color]
		if ($Color) { $ForeColor = $Color }
		$Color = $CustomColor.BorderColor -as [System.Drawing.Color]
		if ($Color) { $BorderColor = $Color }
		$Color = $CustomColor.SelectionBackColor -as [System.Drawing.Color]
		if ($Color) { $SelectionBackColor = $Color }
		$Color = $CustomColor.SelectionForeColor -as [System.Drawing.Color]
		if ($Color) { $SelectionForeColor = $Color }
		$Color = $CustomColor.MenuSelectionColor -as [System.Drawing.Color]
		if ($Color) { $MenuSelectionColor = $Color }
	}
	
	#Define the custom renderer for the menus
	#region Add-Type definition
	try
	{
		[SAPIENTypes.SAPIENColorTable] | Out-Null
	}
	catch
	{
		if ($PSVersionTable.PSVersion.Major -ge 7)
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing', 'System.Drawing.Primitives'
		}
		else
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing'
		}
		Add-Type -ReferencedAssemblies $Assemblies -TypeDefinition "
using System;
using System.Windows.Forms;
using System.Drawing;
namespace SAPIENTypes
{
    public class SAPIENColorTable : ProfessionalColorTable
    {
        Color ContainerBackColor;
        Color BackColor;
        Color BorderColor;
		Color SelectBackColor;

        public SAPIENColorTable(Color containerColor, Color backColor, Color borderColor, Color selectBackColor)
        {
            ContainerBackColor = containerColor;
            BackColor = backColor;
            BorderColor = borderColor;
			SelectBackColor = selectBackColor;
        } 
		public override Color MenuStripGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuStripGradientEnd { get { return ContainerBackColor; } }
        public override Color ToolStripBorder { get { return BorderColor; } }
        public override Color MenuItemBorder { get { return SelectBackColor; } }
        public override Color MenuItemSelected { get { return SelectBackColor; } }
        public override Color SeparatorDark { get { return BorderColor; } }
        public override Color ToolStripDropDownBackground { get { return BackColor; } }
        public override Color MenuBorder { get { return BorderColor; } }
        public override Color MenuItemSelectedGradientBegin { get { return SelectBackColor; } }
        public override Color MenuItemSelectedGradientEnd { get { return SelectBackColor; } }      
        public override Color MenuItemPressedGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientEnd { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientMiddle { get { return ContainerBackColor; } }
        public override Color ImageMarginGradientBegin { get { return BackColor; } }
        public override Color ImageMarginGradientEnd { get { return BackColor; } }
        public override Color ImageMarginGradientMiddle { get { return BackColor; } }
    }
}"
	}
	#endregion
	
	$colorTable = New-Object SAPIENTypes.SAPIENColorTable -ArgumentList $ContainerColor, $BackColor, $BorderColor, $MenuSelectionColor
	$render = New-Object System.Windows.Forms.ToolStripProfessionalRenderer -ArgumentList $colorTable
	[System.Windows.Forms.ToolStripManager]::Renderer = $render
	
	#Set up our processing queue
	$Queue = New-Object System.Collections.Generic.Queue[System.ComponentModel.Component]
	$Queue.Enqueue($Control)
	
	Add-Type -AssemblyName System.Core
	
	#Only process the controls once.
	$Processed = New-Object System.Collections.Generic.HashSet[System.ComponentModel.Component]
	
	#Apply the colors to the controls
	while ($Queue.Count -gt 0)
	{
		$target = $Queue.Dequeue()
		
		#Skip controls we already processed
		if ($Processed.Contains($target)) { continue }
		$Processed.Add($target)
		
		#Set the text color
		$target.ForeColor = $ForeColor
		
		#region Handle Controls
		if ($target -is [System.Windows.Forms.Form])
		{
			#Set Font
			$target.Font = $Font
			$target.BackColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.SplitContainer])
		{
			$target.BackColor = $BorderColor
		}
		elseif ($target -is [System.Windows.Forms.PropertyGrid])
		{
			$target.BackColor = $BorderColor
			$target.ViewBackColor = $BackColor
			$target.ViewForeColor = $ForeColor
			$target.ViewBorderColor = $BorderColor
			$target.CategoryForeColor = $ForeColor
			$target.CategorySplitterColor = $ContainerColor
			$target.HelpBackColor = $BackColor
			$target.HelpForeColor = $ForeColor
			$target.HelpBorderColor = $BorderColor
			$target.CommandsBackColor = $BackColor
			$target.CommandsBorderColor = $BorderColor
			$target.CommandsForeColor = $ForeColor
			$target.LineColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.ContainerControl] -or
			$target -is [System.Windows.Forms.Panel])
		{
			#Set the BackColor for the container
			$target.BackColor = $ContainerColor
			
		}
		elseif ($target -is [System.Windows.Forms.GroupBox])
		{
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.Button])
		{
			$target.FlatStyle = 'Flat'
			$target.FlatAppearance.BorderColor = $BorderColor
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.CheckBox] -or
			$target -is [System.Windows.Forms.RadioButton] -or
			$target -is [System.Windows.Forms.Label])
		{
			#$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.ComboBox])
		{
			$target.BackColor = $BackColor
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.TextBox])
		{
			$target.BorderStyle = 'FixedSingle'
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.DataGridView])
		{
			$target.GridColor = $BorderColor
			$target.BackgroundColor = $ContainerColor
			$target.DefaultCellStyle.BackColor = $WindowColor
			$target.DefaultCellStyle.SelectionBackColor = $SelectionBackColor
			$target.DefaultCellStyle.SelectionForeColor = $SelectionForeColor
			$target.ColumnHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.ColumnHeadersDefaultCellStyle.ForeColor = $ForeColor
			$target.EnableHeadersVisualStyles = $false
			$target.ColumnHeadersBorderStyle = 'Single'
			$target.RowHeadersBorderStyle = 'Single'
			$target.RowHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.RowHeadersDefaultCellStyle.ForeColor = $ForeColor
			
		}
		elseif ($PSVersionTable.PSVersion.Major -le 5 -and $target -is [System.Windows.Forms.DataGrid])
		{
			$target.CaptionBackColor = $WindowColor
			$target.CaptionForeColor = $ForeColor
			$target.BackgroundColor = $ContainerColor
			$target.BackColor = $WindowColor
			$target.ForeColor = $ForeColor
			$target.HeaderBackColor = $ContainerColor
			$target.HeaderForeColor = $ForeColor
			$target.FlatMode = $true
			$target.BorderStyle = 'FixedSingle'
			$target.GridLineColor = $BorderColor
			$target.AlternatingBackColor = $ContainerColor
			$target.SelectionBackColor = $SelectionBackColor
			$target.SelectionForeColor = $SelectionForeColor
		}
		elseif ($target -is [System.Windows.Forms.ToolStrip])
		{
			
			$target.BackColor = $BackColor
			$target.Renderer = $render
			
			foreach ($item in $target.Items)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ToolStripMenuItem] -or
			$target -is [System.Windows.Forms.ToolStripDropDown] -or
			$target -is [System.Windows.Forms.ToolStripDropDownItem])
		{
			$target.BackColor = $BackColor
			foreach ($item in $target.DropDownItems)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ListBox] -or
			$target -is [System.Windows.Forms.ListView] -or
			$target -is [System.Windows.Forms.TreeView])
		{
			$target.BackColor = $WindowColor
		}
		else
		{
			$target.BackColor = $BackColor
		}
		#endregion
		
		if ($target -is [System.Windows.Forms.Control])
		{
			#Queue all the child controls
			foreach ($child in $target.Controls)
			{
				$Queue.Enqueue($child)
			}
		}
	}
}
#endregion

# Populate the master list initially for access scopes found
function Initialize-MasterItems
{
	$global:masterItems = @()
	foreach ($item in $checkedlistboxPermissionsToAssign.Items)
	{
		$global:masterItems += $item
	}
}

function Get-AssignableApiPermissionScopes
{
	param (
		[string]$ServiceType
	)
	
	try
	{
		# Clear list for existing ithems
		$checkedlistboxPermissionsToAssign.Items.Clear()
		
		# Determine the AppId based on the ServiceType
		switch ($ServiceType)
		{
			"Microsoft Graph" {
				$appId = '00000003-0000-0000-c000-000000000000'
			}
			"Exchange Online" {
				$appId = '00000002-0000-0ff1-ce00-000000000000'
			}
			"SharePoint" {
				$appId = '00000003-0000-0ff1-ce00-000000000000'
			}
			default {
				# Log
				Write-Log -Level INFO -Message "Invalid ServiceType specified. Valid values are 'Microsoft Graph', 'Exchange Online', 'SharePoint'."
				return
			}
		}
		
		# Get the service principal for the specified AppId
		Write-Log -Level INFO -Message "Retrieving service principal for AppId: '$appId'"
		
		# Get needed data
		$servicePrincipal = Get-MgServicePrincipal -Filter "AppId eq '$appId'" -Property "id,appId,displayName,appRoles,oauth2PermissionScopes,resourceSpecificApplicationPermissions"
		
		# Check if returned data
		if ($null -eq $servicePrincipal)
		{
			# Log
			Write-Log -Level INFO -Message "No service principal found with AppId '$appId', Service '$($servicePrincipal.DisplayName)'."
			return
		}
		
		# Log
		Write-Log -Level INFO -Message "Service principal retrieved: AppId '$appId', '$($servicePrincipal.DisplayName)'"
		
		# Extract the permission scopes (AppRoles and Oauth2PermissionScopes)
		$appRoles = $servicePrincipal.AppRoles
		$oauth2PermissionScopes = $servicePrincipal.Oauth2PermissionScopes
		
		# Check if scopes assigned
		if ($appRoles.Count -eq 0 -and $oauth2PermissionScopes.Count -eq 0)
		{
			# Log
			Write-Log -Level INFO -Message "No assignable permission scopes found for service principal with AppId '$appId' service '$($servicePrincipal.DisplayName)'."
			return
		}
		
		# Log
		Write-Log -Level INFO -Message "Assignable permission scopes retrieved for AppId '$appId' service '$($servicePrincipal.DisplayName)'."
		
		# Populate the CheckedListBox with permission scopes
		Write-Log -Level INFO -Message "Adding assignable permission scopes to permission list for AppId '$appId' service '$($servicePrincipal.DisplayName)'..."
		
		foreach ($role in $appRoles)
		{
			$roleDetails = "Role details: '$($role.DisplayName)', Role scope: '$($role.Value)', RoleId: '$($role.Id)'"
			$checkedlistboxPermissionsToAssign.Items.Add($roleDetails)
		}
		
		Write-Log -Level INFO -Message "Added all assignable permission scopes to permission list for AppId '$appId' service '$($servicePrincipal.DisplayName)' to the list for management."
		
		<#
		foreach ($scope in $oauth2PermissionScopes)
		{
			$scopeDetails = "Scope details: $($scope.AdminConsentDisplayName), ScopeValue: $($scope.Value), ScopeId: $($scope.Id)"
			$checkedlistboxPermissionsToAssign.Items.Add($scopeDetails)
		}
		#>
	}
	catch
	{
		# Log
		Write-Log -Level ERROR -Message "Error retrieving permission scopes: $_"
	}
}

<#
function Get-ManagedIdentities
{
	# Clear current data in the ComboBox to not keep old items
	$comboBox.Items.Clear()
	
	# If connected
	if ($global:ConnectedState)
	{
		# Log
		Write-Log -Level INFO -Message "Loading list of Managed Identity from tenant..."
		
		# Get all managed identities
		$global:managedIdentities = Get-MgServicePrincipal -Filter "servicePrincipalType eq 'ManagedIdentity'" -All
		
		# Log
		Write-Log -Level INFO -Message "Loaded updated the list of found Managed Identity´s from tenant."
		
		# Create a custom object with DisplayName and Id, then sort by DisplayName
		$sortedIdentities = $global:managedIdentities | Sort-Object DisplayName | ForEach-Object {
			[PSCustomObject]@{
				DisplayName = $_.DisplayName
				Id		    = $_.Id
			}
		}
		
		# Populate the ComboBox with sorted managed identities
		foreach ($identity in $sortedIdentities)
		{
			$comboBox.Items.Add($identity.DisplayName)
		}
		
		# Store the sorted identities in a global variable for later use
		$global:sortedManagedIdentities = $sortedIdentities
		
		# Log
		Write-Log -Level INFO -Message "List of Managed Identity updated with a total of '$(Get-ManagedIdentityCount)' Managed Identity´s"
	}
	# Else if not connected
	else
	{
		# Log
		Write-Log -Level INFO -Message "Not connected - can´t load list of Managed Identity´s"
	}
}
#>

function Get-ManagedIdentities
{
	# Clear current data in the CheckedListBox to not keep old items
	$checkedlistboxListOfManagedIdentity.Items.Clear()
	
	# If connected
	if ($global:ConnectedState)
	{
		# Log
		Write-Log -Level INFO -Message "Loading list of Managed Identity from tenant..."
		
		# Get all managed identities
		$global:managedIdentities = Get-MgServicePrincipal -Filter "servicePrincipalType eq 'ManagedIdentity'" -All
		
		# Log
		Write-Log -Level INFO -Message "Loaded updated the list of found Managed Identity´s from tenant."
		
		# Create a custom object with DisplayName and Id, then sort by DisplayName
		$sortedIdentities = $global:managedIdentities | Sort-Object DisplayName | ForEach-Object {
			[PSCustomObject]@{
				DisplayName = $_.DisplayName
				Id		    = $_.Id
			}
		}
		
		# Populate the CheckedListBox with sorted managed identities
		foreach ($identity in $sortedIdentities)
		{
			$checkedlistboxListOfManagedIdentity.Items.Add($identity.DisplayName)
		}
		
		# Store the sorted identities in a global variable for later use
		$global:sortedManagedIdentities = $sortedIdentities
		$global:filteredManagedIdentities = $sortedIdentities
		
		# Log
		Write-Log -Level INFO -Message "List of Managed Identity updated with a total of '$(Get-ManagedIdentityCount)' Managed Identity´s"
	}
	# Else if not connected
	else
	{
		# Log
		Write-Log -Level INFO -Message "Not connected - can´t load list of Managed Identity´s"
	}
}

function Search-ManagedIdentities
{
	param (
		[string]$searchQuery
	)
	
	# Clear
	$textboxselectedIdentityID.Text = ""
	$textboxselectedIdentityName.Text = ""
	
	# Clear current items in the CheckedListBox
	$checkedlistboxListOfManagedIdentity.Items.Clear()
	
	# Filter the managed identities based on the search query
	$global:filteredManagedIdentities = $global:sortedManagedIdentities | Where-Object { $_.DisplayName -like "*$searchQuery*" }
	
	# Populate the CheckedListBox with the filtered managed identities
	foreach ($identity in $global:filteredManagedIdentities)
	{
		$checkedlistboxListOfManagedIdentity.Items.Add($identity.DisplayName)
	}
}

function Update-SelectedIdentity
{
	param (
		[int]$selectedIndex
	)
	$selectedIdentity = $global:filteredManagedIdentities[$selectedIndex]
	$textboxselectedIdentityID.Text = "$($selectedIdentity.Id)"
	$textboxselectedIdentityName.Text = "$($selectedIdentity.DisplayName)"
}

$formManagedIdentityPermi_Load = {
	
	# Example usage:
	if (Is-Administrator)
	{
		Write-Log -Level INFO -Message "The current process is running with administrator privileges."
	}
	else
	{
		Write-Log -Level INFO -Message "The current process is NOT running with administrator privileges."
	}
	
	# Check for log path when app starts up
	CheckLogPath
	
	# Log
	Write-Log -Level INFO -Message "The application $ToolName is started"
	
	# 
	Get-CurrentExecutionFilename
	
	# Get theme mode
	$global:darkModeStateUI = Is-WindowsInDarkMode
	
	#  Set state for theme
	if ($global:darkModeStateUI)
	{
		Set-ControlTheme $formManagedIdentityPermi -Theme Dark
		
		$darkModeSateUI = $true
	}
	else
	{
		Set-ControlTheme $formManagedIdentityPermi -Theme Light
		
		$darkModeSateUI = $false
	}
	
	# Set tool state
	$ConnectedState = $false
	$clearExistingPermissions = $true
	
	# Set form text
	$formManagedIdentityPermi.Text = "$ToolName v. $FormVersion"
	$toolstripstatuslabelMain_CreatedBy.Text = "Created by: $Author"
	
	# Services to add to dropdown list (more to add soon when tested..)
	$ServiceComboBox.Items.Add("Microsoft Graph")
	$ServiceComboBox.Items.Add("Exchange Online")
	$ServiceComboBox.Items.Add("SharePoint")
}

$darkToolStripMenuItem_Click={
	
	# Set theme state
	Set-ControlTheme -Control $formManagedIdentityPermi -Theme Dark
	
	$global:darkModeStateUI = $true
}

$lightToolStripMenuItem_Click = {
	
	# Set theme state
	Set-ControlTheme -Control $formManagedIdentityPermi -Theme Light
	
	$global:darkModeStateUI = $false
}

$buttonConnectMicrosoftGraph_Click = {
	
	# If connected
	if ($labelConnectionStatus.Text -eq "Connected" -and $buttonConnectMicrosoftGraph.Text -eq "Disconnect Microsoft Graph")
	{
		try
		{
			# Disconnect
			Disconnect-MgGraph
			
			# Update states
			$global:ConnectedState = $false
			$labelConnectionStatus.Text = "Not connected"
			$labelConnectionStatus.ForeColor = 'Red'
			$buttonConnectMicrosoftGraph.Text = "Connect Microsoft Graph"
			
			# Log
			Write-Log -Level INFO -Message "Disconnected from Microsoft Graph."
			
			# Clear data
			$combobox.Items.Clear()
		}
		catch
		{
			# Log
			Write-Log -Level ERROR -Message "Error disconnecting from Microsoft Graph: $($_.Exception.Message)"
		}
	}
	else
	{
		try
		{
			# Check ExecutionPolicy
			Check-ExecutionPolicy
			
			# Check installed/loaded modules
			Check-Modules
			
			# Connect
			ConnectToGraph
			
			# If connected, set states
			if ($global:ConnectedState -eq $true)
			{
				$labelConnectionStatus.Text = "Connected"
				$labelConnectionStatus.ForeColor = 'Green'
				
				# Load managed identityes after connected
				Get-managedIdentities
				
				$buttonConnectMicrosoftGraph.Text = "Disconnect Microsoft Graph"
			}
			else
			{
				# If not connected set state
				$global:ConnectedState -eq $false
				
				$labelConnectionStatus.Text = "Not connected"
				$labelConnectionStatus.ForeColor = 'Red'
			}
		}
		catch
		{
			# Log
			Write-Log -Level ERROR -Message "Error connecting to Microsoft Graph: $($_.Exception.Message)"
		}
	}	
}

$combobox_SelectedIndexChanged = {
	
	# Get the selected identity based on ComboBox selected index
	$selectedIdentity = $global:sortedManagedIdentities[$comboBox.SelectedIndex]
	
	# Get roles assigned to the selected identity
	$roles = Get-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $selectedIdentity.Id
	
	# Extract and format role names and AppRoleIds
	$roleDetails = $roles | ForEach-Object { "$($_.ResourceDisplayName) (AppRoleId: $($_.AppRoleId))" } -join ", "
	
	# Update TextBox with selected identity details
	$textboxselectedIdentityID.Text = "$($selectedIdentity.Id)"
	$textboxAssingedRoles.Text = "$roleDetails"
}

$SubmitButton_Click = {
	
	#TODO: Place custom script here
	if ($radiobuttonAddPermissions.Checked -eq $true)
	{
		# Get data to process
		$ObjectID = $textboxselectedIdentityID.Text
		$Service = $ServiceComboBox.Text
		$Permissions = $PermissionsTextBox.Text
		
		# Debugging output
		Write-Log -Level INFO -Message "Managed Identity ObjectID: '$ObjectID'"
		Write-Log -Level INFO -Message "Service: '$Service'"
		Write-Log -Level INFO -Message "Permissions: '$Permissions'"
		
		# Validate inputs
		if (-not $ObjectID -or -not $Service -or -not $Permissions)
		{
			# Log
			Write-Log -Level INFO -Message "All fields are required."
			return
		}
		
		#Update-Log -Message "Calling Add-ServicePrincipalPermission with ManagedIdentityID: '$ObjectID', Permissions: '$Permissions', ServiceType: '$Service'"
		
		# Update permissions for managed idenityes
		if ($clearExistingPermissions)
		{
			Add-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service -clearExistingPermissions $true
		}
		else
		{
			Add-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service -clearExistingPermissions $false
		}
	}
		
	if ($radiobuttonRemovePermissions.Checked -eq $true)
	{
		# Get data to process
		$ObjectID = $textboxselectedIdentityID.Text
		$Service = $ServiceComboBox.Text
		$Permissions = $PermissionsTextBox.Text
		
		# Debugging output
		Write-Log -Level INFO -Message "Managed Identity ObjectID: '$ObjectID'"
		Write-Log -Level INFO -Message "Service: '$Service'"
		Write-Log -Level INFO -Message "Permissions: '$Permissions'"
		
		# Validate inputs
		if (-not $ObjectID -or -not $Service -or -not $Permissions)
		{
			Write-Log -Level INFO -Message "All fields are required."
			return
		}
		
		#Update-Log -Message "Calling Add-ServicePrincipalPermission with ManagedIdentityID: '$ObjectID', Permissions: '$Permissions', ServiceType: '$Service'"
		
		# Remove permissions form managed identity
		Remove-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service				
	}
}

$buttonGetCurrentAssignedPe_Click={
	
	# Get data to process
	$ObjectID = $textboxselectedIdentityID.Text
	$ObjectName = $textboxselectedIdentityName.Text
	
	# Clear the TextBox before adding new data
	$textboxAssingedRoles.Clear()
	
	# Call the function and get the result
	$result = Get-CurrentAppRoleAssignments -ManagedIdentityID $ObjectID -ManagedIdentityName $ObjectName
	
	# Set the TextBox text to the result
	$textboxAssingedRoles.Text = $result
	
	#Update-Log -Message $result
	
	#Get-CurrentAppRoleAssignments -ManagedIdentityID $ObjectID
}

$buttonReloadManagedIdentityList_Click={
	
	# Get data
	Get-managedIdentities
}

$checkboxKeepExistingPermissi_CheckedChanged={
	
	# Set state if set from user to keep existing assigned permissions or not
	if ($checkboxKeepExistingPermissi.Checked -eq $true)
	{
		# Set global state
		$global:clearExistingPermissions = $false
		
		# Log
		Write-Log -Level INFO -Message "Set to keep existing permissions (will NOT delete exisiting)"
	}
	elseif ($checkboxKeepExistingPermissi.Checked -eq $false)
	{
		# ASK IF THE USER WILL INSTALL AD Recycle Bin
		$ConfirmClearExistingPermissions = Show-MsgBox -Prompt "Will you remove existing permissions?`r`n`r`nIt can´t be reverted again!" -Title "Remove existing permissions?" -Icon Exclamation -BoxType YesNo -DefaultButton 2
		
		# Get confirmation
		If ($ConfirmClearExistingPermissions -eq "Yes")
		{
			# If confirmed set state
			$global:clearExistingPermissions = $true
			
			# Log
			Write-Log -Level INFO -Message "Set to reset existing permissions (will DELETE exisiting) - confirmed by user"
		}
		else
		{
			# If not confirmed set state
			$checkboxKeepExistingPermissi.Checked = $true
			
			# Log
			Write-Log -Level INFO -Message "Set to keep current state for reset existing permissions - confirmation to change is cancled by user"
		}		
	}
	else
	{
		# Log
		Write-Log -Level INFO -Message "No change"
	}
}

$microsoftGraphToolStripMenuItem_Click={
	
	# Start webpage
	Start-Process "https://learn.microsoft.com/en-us/graph/permissions-reference"
}

$buttonRemoveAllAssignedPermissions_Click={
	
	# Get data to process
	$ObjectID = $textboxselectedIdentityID.Text
	
	# Validate inputs
	if (-not $ObjectID)
	{
		Write-Log -Level INFO -Message "All fields are required - please select a managed identity"
		return
	}
	
	# ASK IF THE USER WILL REMOVE ALL PERMISSIONS
	$ConfirmRemoveAllExistingPermissions = Show-MsgBox -Prompt "Will you remove existing permissions?`r`n`r`nIt can´t be reverted again!" -Title "Remove all existing permissions?" -Icon Exclamation -BoxType YesNo -DefaultButton 2
	
	# If user comfirmed
	If ($ConfirmRemoveAllExistingPermissions -eq "Yes")
	{
		# Log
		Write-Log -Level INFO -Message "Will remove all existing permissions for Managed Identity with id '$ObjectID'  - confirmed by user"
		
		# Remove all assigned permissions
		Remove-AllServicePrincipalPermissions -ManagedIdentityID $ObjectID
	}
	else
	{
		# Log
		Write-Log -Level INFO -Message "Set to keep current state for reset existing permissions - confirmation to change is cancled by user"
	}	
}

$exitToolStripMenuItem_Click={
	
	# Exit application
	$formManagedIdentityPermi.Close()
}

$changelogToolStripMenuItem_Click={
	
	# Open form
	Show-ChangelogForm_psf
}

$openLogFolderToolStripMenuItem_Click = {
	
	# Open logfile for today
	$objShell = New-Object -ComObject "Shell.Application"
	$objShell.Explore($LogPath)
	
	# Log
	Write-Log -Level INFO -Message "User opened log folder: $LogPath"
}

$openLogForTodayToolStripMenuItem_Click = {
	
	#OPEN CURRENT LOG FILE IN FROM FOLDER
	Write-Log -Level INFO -Message "User opened log file for today from: $LogPath"
	
	# Conduct filename
	$logFilePath = Join-Path -Path $LogPath -ChildPath ("$($ToolName)_Log_$($env:computername)" + "_" + (Get-Date -Format "dd/MM/yyyy") + ".log")
	
	# Test if file exists
	if (Test-Path $logFilePath)
	{
		# Open file
		Start-Process $logFilePath
		
		# Log
		Write-Log -Level INFO -Message "User opened log file for today: $logFilePath"
	}
	else
	{
		Show-MsgBox -Prompt "Log file not found at $logFilePath." -Title "Can't locate and open the log for today" -Icon Exclamation -BoxType OKOnly
		
		# Log
		Write-Log -Level INFO -Message "Log file not found at $logFilePath - Can't locate and open the log for today"
	}	
}

$myWebpageToolStripMenuItem_Click = {
	
	# Open webside
	Start-Process "https://sonnes.cloud"
	Write-Log -Level INFO -Message "The user clicked on the link for more information about on the website https://sonnes.cloud"
}

$myBlogToolStripMenuItem_Click = {
	
	# Open blog
	Start-Process "https://blog.sonnes.cloud"
	Write-Log -Level INFO -Message "The user clicked on the link for more information about on the website https://blog.sonnes.cloud"
}

$button_ServiceAccounts_About_Click = {
	
	# Show about box
	$yyyy = Get-Date -Format yyyy
	Show-MsgBox -Title "About $ToolName v. $FormVersion" -Prompt "Created by: $Author`r`n`r`nCopyright $yyyy © All rights reserved`r`n`r`nWebsite: sonnes.cloud`r`nBlog: blog.sonnes.cloud" -Icon Information -BoxType OKOnly
}

$buttonGetAccessScopesForSe_Click = {
	
	#Get-AssignableApiPermissionScopes -ApiDisplayName "Microsoft Graph"
	
	# Get data and get permissions
	Get-AssignableApiPermissionScopes -ServiceType "$($ServiceComboBox.Text)"
	
	# Call this function once to initialize the master list
	Initialize-MasterItems
}

$buttonAddSelectedAccessSco_Click = {
	
	$selectedScopes = @()
	
	# Loop selected scopes - add to tool for process
	foreach ($item in $checkedlistboxPermissionsToAssign.CheckedItems)
	{
		# Extract the scope value from the selected item
		if ($item -match "Role scope: '([^']+)'")
		{
			$selectedScopes += $matches[1]
			
			Write-Log -Level INFO -Message $matches[1]
		}
		<#
		elseif ($item -match "ScopeValue: ([^,]+)")
		{
			$selectedScopes += $matches[1]
			
			Write-Log -Level INFO -Message $matches[1]
		}
		#>
	}
	
	# Log
	Write-Log -Level INFO -Message "Adding access scope selected: '$($selectedScopes -join ', ')' to the list for permissions scopes to edit"
	
	# Format data
	$PermissionsTextBox.Text = $selectedScopes -join ", "
	
	# Write-Log -Level INFO -Message "Adding: $selectedScopes"
	
	# $PermissionsTextBox
}

$textboxSccessScopeToAssignFilter_TextChanged={
	
	# Get data fo filter function
	$filterText = $textboxSccessScopeToAssignFilter.Text
	
	$filteredItems = @()
	
	# Filter elements
	if ($filterText -eq "" -or $null)
	{
		# If the filter text is empty, reset to all items
		$filteredItems = $global:masterItems
		
		#Write-Log -Level ERROR -Message "Filter of access scopes cleared (no filter)"
	}
	else
	{
		# Filter items based on the filter text
		foreach ($item in $global:masterItems)
		{
			if ($item -like "*$filterText*")
			{
				$filteredItems += $item
			}
		}
	}
	
	# Clear the CheckedListBox and add the filtered items
	$checkedlistboxPermissionsToAssign.Items.Clear()
	foreach ($filteredItem in $filteredItems)
	{
		$checkedlistboxPermissionsToAssign.Items.Add($filteredItem)
	}
}
$pictureboxSupportMe_Click={
	
	Start-Process "https://buymeacoffee.com/sonnes"
	Write-Log -Level INFO -Message "The user clicked on the link for more information about on the website https://buymeacoffee.com/sonnes"
	
}

$aboutToolStripMenuItem_Click={
	
	# Open form
	Show-AboutForm_psf
}

$textboxSearch_TextChanged={
	$searchQuery = $textboxSearch.Text
	Search-ManagedIdentities -searchQuery $searchQuery
}

$checkedlistboxListOfManagedIdentity_ItemCheck=[System.Windows.Forms.ItemCheckEventHandler]{
	param (
		[System.Object]$sender,
		[System.Windows.Forms.ItemCheckEventArgs]$e
	)
	# Uncheck all other items
	for ($i = 0; $i -lt $checkedlistboxListOfManagedIdentity.Items.Count; $i++)
	{
		if ($i -ne $e.Index)
		{
			$checkedlistboxListOfManagedIdentity.SetItemChecked($i, $false)
		}
	}
	# Update the selected identity details
	if ($e.NewValue -eq [System.Windows.Forms.CheckState]::Checked)
	{
		Update-SelectedIdentity -selectedIndex $e.Index
	}
	else
	{
		$textboxselectedIdentityID.Clear()
		$textboxselectedIdentityName.Clear()
		$textboxAssingedRoles.Clear()
	}
}

$csvToolStripMenuItem_Click={

}
]]></Code>
  <Mode>0</Mode>
  <Assemblies />
</File>