<File version="3.2">
  <FileID>994b0401-5822-49c5-99cb-717d1f11a31a</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAALVZSURBVHhe7P1nkBxZuqaJldnY7BrN9gfJH1wj
f3BJI9f4g0Yzcrg7sxzujO3cGY6893b37dvVXaJLFwpV0BpIJJACqbXWiUQKpEZqrbXWWmutVaRG
PrTjkQkkAokqVBUiEQV8j9lrEeHaPdz9e/34Od/54ANBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBeCN4/Vf/9J+W/rt/
+29LraxsSi2VLK1FIpFIJBL9hmRtbVt6/fr10v/D//6/Lf3ggw+Ufpx/8k/+ScO3Z74jp6SOtqEF
OkeX6BhZFIlEIpFI9BtS1+gSLf1ThIY/5r//v/5fMIz3L/Fv/+ZvSrOLa6nrm6OoaYCixn6KGtWn
SCQSiUSi3476KWkepm14kQc29j9tAFSRgXrqL2kepFQkEolEItFvWvV9s+QVVf60AbCxsS3tn1zT
DEBZ6/CPqvyYDMeJRCKRSGTSahmiom2E6s6xX6yqjrFncbCyfYzKjl+u8rYRbTlVHaMvrefnqKJ9
hLKW5/vZODBHVl7pTxsAVfGvb3KVstYR7cCcpPK2YarbJmhom6WhfYr69smXphGJRCKRyJRV2T5K
cUM/CTl1xGfVEp/98xSXWUtSfiPlKti2DJNR2khqYR1pRb9AxfWUNPVr25RW3EJcZs1L6/tJqX3I
qiW/pkdbztF+Ng3Ok5VX8noGoH9qjfK2UW0BJ6m2fZLCjm7udrjySbUbkY31NHRMvTSdSCQSiUSm
qqrOcWLSq8gsbiG3soPcip+nvKpOknPrSC5oJqeihdyKZsqa+iht6NGrsZfq9mFqOkep6RjRq3OU
ytbB59M09FDW2EtRTQcZJfVklncQn1FFfnXnsXW1U1TbQ0nDAIU13RTUdFPS0E9RXe/L21TRzuOU
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
iAEQBMEYiAEQBBNHDIAgCMZADIAgmDhiAARBMAZiAATBxBEDIAiCMRADIAgmjhgAQRCMgRgAQTBx
xAAIgmAMxAAIgokjBkAQBGMgBkAQTBwxAIIgGAMxAIJg4ogBEATBGIgBEAQTRwyAIAjGQAyAIJg4
YgAEQTAGYgAEwcQRAyAIgjEQAyAIJo4YAEEQjIEYAEEwccQACIJgDMQACIKJIwZAEARjIAZAEEwc
MQCCIBgDMQCCYOKIARAEwRiIARAEE0cMgCAIxkAMgCCYOGIABEEwBmIABMHEEQMgCIIxEAMgCCaO
GABBEIyBGABBMHHEAAiCYAzEAAiCiSMGQBAEYyAGQBBMHDEAgiAYAzEAgmDiiAEQBMEYiAEQBBNH
DIAgCMZADIAgmDhiAARBMAZiAATBxBEDIAiCMRADIAgmjhgAQRCMgRgAQTBxxAAIgmAMxAAIgokj
BkAQBGMgBkAQTBwxAIIgGAMxAIJg4ogBEATBGIgBEAQTRwyAIAjGQAyAIJg4YgAEQTAGYgAEwcQR
AyAIgjEQAyAIJo4YAEEQjIEYAEEwccQACIJgDMQACIKJIwZAEARjIAZAEEwcMQCCIBgDMQCCYOKI
ARAEwRiIARAEE0cMgCAIxkAMgCCYOGIABEEwBmIABMHEEQMgCIIxEAMgCCaOGABBEIyBGABBMHHE
AAiCYAzEAAiCiSMGQBAEYyAGQBBMHDEAgiAYAzEAgmDiiAEQBMEYiAEQBBNHDIAgCMZADIAgmDhi
AARBMAZiAATBxBEDIAiCMRADIAgmjhgAQRCMgRgAQTBxxAAIgmAMxAAIgokjBkAQBGMgBkAQTBwx
AIIgGAMxAIJg4ogBEATBGIgBEAQTRwyAIAjGQAyAIJg4YgAEQTAGYgAEwcQRAyAIgjEQAyAIJo4Y
AEEQjIEYAEEwccQACIJgDMQACIKJIwZAEARjIAZAEEwcMQCCIBgDMQCCYOKIARAEwRiIARAEE0cM
gCAIxkAMgCCYOGIABEEwBmIABMHEEQMgCIIxEAMgCCaOGABBEIyBGABBMHHEAAiCYAzEAAiCiSMG
QBAEYyAGQBBMHDEAgiAYAzEAgmDiiAEQBMEYiAEQBBNHDIAgCMZADIAgmDhiAARBMAZiAATBxBED
IAiCMRADIAgmjhgAQRCMgRgAQTBxxAAIgmAMxAAIgokjBkAQBGMgBkAQTBwxAIIgGAMxAIJg4ogB
EATBGIgBEAQTRwyAIAjGQAyAIJg4YgAEQTAGYgAEwcQRAyAIgjEQAyAIJo4YAEEQjIEYAEEwccQA
CIJgDMQACIKJIwZAEARjIAZAEEwcMQCCIBgDMQCCYOKIARAEwRiIARAEE0cMgCAIxkAMgCCYOGIA
BEEwBmIABMHEEQMgCIIxEAMgCCaOGABBEIyBGABBMHHEAAiCYAzEAAiCiSMGQBAEYyAGQBBMHDEA
giAYAzEAgmDiiAEQBMEYiAEQBBNHDIAgCMZADIAgmDhiAARBMAZiAATBxBEDIAiCMRADIAgmjhgA
QRCMgRgAQTBxxAAIgmAMxAAIgokjBkAQBGMgBkAQTBwxAIIgGAMxAIJg4ogBEATBGIgBEAQTRwyA
IAjGQAyAIJg4YgAEQTAGYgAEwcQRAyAIgjEQAyAIJo4YAEEQjIEYAEEwccQACIJgDMQACIKJIwZA
EARjIAZAEEwcMQCCIBgDMQCCYOKIARAEwRiIARAEE0cMgCAIxkAMgCCYOGIABEEwBmIABMHEEQMg
CIIxEAMgCCaOGABBEIyBGABBMHHEAAiCYAzEAAiCiSMGQBAEYyAGQBBMHDEAgiAYAzEAgmDiiAEQ
BMEYiAEQBBNHDIAgCMZADIAgmDhiAARBMAZiAATBxBEDIAiCMRADIAgmjhgAQRCMgRgAQTBxxAAI
gmAMxAAIgokjBkAQBGMgBkAQTBwxAIIgGAMxAIJg4ogBEATBGIgBEAQTRwyAIAjGQAyAIJg4YgAE
QTAGYgAEwcQRAyAIgjEQAyAIJo4YAEEQjIEYAEEwccQACIJgDMQACIKJIwZAEARjIAZAEEwcMQCC
IBgDMQCCYOKIARAEwRiIARAEE0cMgCAIxkAMgCCYOGIABEEwBmIABMHEEQMgCIIxEAMgCCaOGABB
EIyBGABBMHHEAAiCYAzEAAiCiSMGQBAEYyAGQBBMHDEAgiAYAzEAgmDiiAEQBMEYiAEQBBNHDIAg
CMZADIAgmDhiAARBMAZiAATBxBEDIAiCMRADIAgmjhgAQRCMgRgAQTBxxAAIgmAMxAAIgokjBkAQ
BGMgBkAQTBwxAIIgGAMxAIJg4ogBEATBGIgBEAQTRwyAIAjGQAyAIJg4YgAEQTAGYgAEwcQRAyAI
gjEQAyAIJo4YAEEQjIEYAEEwccQACIJgDMQACIKJIwZAEARjIAZAEEwcMQCCIBgDMQCCYOKIARAE
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
y1J24v9br6oAAAAASUVORK5CYII=</Preview>
  <Form>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</Form>
  <Code><![CDATA[# Write-Log -Level INFO -Message

#$checkedlistboxPermissionsToAssign.Items.Add($scopeDetails)

function Get-AssignableApiPermissionScopes
{
	param (
		[string]$ServiceType
	)
	
	try
	{
		# Clear list for existing ithems
		$checkedlistboxPermissionsToAssign.Items.Clear()
		
		# Determine the AppId based on the ServiceType
		switch ($ServiceType)
		{
			"Microsoft Graph" {
				$appId = '00000003-0000-0000-c000-000000000000'
			}
			"Exchange Online" {
				$appId = '00000002-0000-0ff1-ce00-000000000000'
			}
			"SharePoint" {
				$appId = '00000003-0000-0ff1-ce00-000000000000'
			}
			default {
				Write-Log -Level INFO -Message "Invalid ServiceType specified. Valid values are 'Microsoft Graph', 'Exchange Online', 'SharePoint'."
				return
			}
		}
		
		# Get the service principal for the specified AppId
		Write-Log -Level INFO -Message "Retrieving service principal for AppId: $appId"
		$servicePrincipal = Get-MgServicePrincipal -Filter "AppId eq '$appId'" -Property "id,appId,displayName,appRoles,oauth2PermissionScopes,resourceSpecificApplicationPermissions"
		
		if ($null -eq $servicePrincipal)
		{
			Write-Log -Level INFO -Message "No service principal found with AppId '$appId'."
			return
		}
		
		Write-Log -Level INFO -Message "Service principal retrieved: $($servicePrincipal.DisplayName)"
		
		# Extract the permission scopes (AppRoles and Oauth2PermissionScopes)
		$appRoles = $servicePrincipal.AppRoles
		$oauth2PermissionScopes = $servicePrincipal.Oauth2PermissionScopes
		
		if ($appRoles.Count -eq 0 -and $oauth2PermissionScopes.Count -eq 0)
		{
			Write-Log -Level INFO -Message "No assignable permission scopes found for service principal with AppId '$appId'."
			return
		}
		
		Write-Log -Level INFO -Message "Assignable permission scopes retrieved."
		
		# Populate the CheckedListBox with permission scopes
		foreach ($role in $appRoles)
		{
			$roleDetails = "Role details: '$($role.DisplayName)', Role scope: '$($role.Value)', RoleId: '$($role.Id)'"
			$checkedlistboxPermissionsToAssign.Items.Add($roleDetails)
		}
		
		<#
		foreach ($scope in $oauth2PermissionScopes)
		{
			$scopeDetails = "Scope details: $($scope.AdminConsentDisplayName), ScopeValue: $($scope.Value), ScopeId: $($scope.Id)"
			$checkedlistboxPermissionsToAssign.Items.Add($scopeDetails)
		}
		#>
	}
	catch
	{
		Write-Log -Level INFO -Message "Error retrieving permission scopes: $_"
	}
}




<#
function Get-AssignableApiPermissionScopes
{
	param (
		[string]$ApiDisplayName
	)
	
	try
	{
		# Step 1: Get the service principal for the specified API
		Write-Log -Level INFO -Message "Retrieving service principal for API with DisplayName: $ApiDisplayName"
		$servicePrincipal = Get-MgServicePrincipal -Filter "displayName eq '$ApiDisplayName'" -Property "id,appId,displayName,appRoles,oauth2PermissionScopes,resourceSpecificApplicationPermissions"
		
		if ($null -eq $servicePrincipal)
		{
			Write-Log -Level INFO -Message "No service principal found with DisplayName '$ApiDisplayName'."
			return
		}
		
		Write-Log -Level INFO -Message "Service principal retrieved: $($servicePrincipal.DisplayName)"
		
		# Step 2: Extract the permission scopes (AppRoles and Oauth2PermissionScopes)
		$appRoles = $servicePrincipal.AppRoles
		$oauth2PermissionScopes = $servicePrincipal.Oauth2PermissionScopes
		
		if ($appRoles.Count -eq 0 -and $oauth2PermissionScopes.Count -eq 0)
		{
			Write-Log -Level INFO -Message "No assignable permission scopes found for service principal with DisplayName '$ApiDisplayName'."
			return
		}
		
		Write-Log -Level INFO -Message "Assignable permission scopes retrieved."
		
		# Step 4: Populate the CheckedListBox with permission scopes
		foreach ($role in $appRoles)
		{
			$roleDetails = "AppRoleId: $($role.Id), AppRoleName: $($role.DisplayName), AppRoleScope: $($role.Value)"
			$checkedlistboxPermissionsToAssign.Items.Add($roleDetails)
		}
		
		foreach ($scope in $oauth2PermissionScopes)
		{
			$scopeDetails = "ScopeId: $($scope.Id), ScopeName: $($scope.AdminConsentDisplayName), ScopeValue: $($scope.Value)"
			$checkedlistboxPermissionsToAssign.Items.Add($scopeDetails)
		}		
	}
	catch
	{
		Write-Log -Level INFO -Message "Error retrieving permission scopes: $_"
	}
}
#>

function Get-ManagedIdentities
{
	# Get all managed identities
	
	$comboBox.Items.Clear()
	
	# If connected
	if ($ConnectedState = $true)
	{
		# Log
		Write-Log -Level INFO -Message "Loading list of Managed Identity from tenant..."
		
		# Get all data
		$global:managedIdentities = Get-MgServicePrincipal -Filter "servicePrincipalType eq 'ManagedIdentity'"
		
		# Log
		Write-Log -Level INFO -Message "Loaded list Managed Identity from tenant."
		
		# Populate the ComboBox with managed identities
		foreach ($identity in $managedIdentities)
		{
			$comboBox.Items.Add($identity.DisplayName)
		}
		
		# Log
		Write-Log -Level INFO -Message "List of Managed Identity updated with a total of '$(Get-ManagedIdentityCount)' Managed Identity´s"
	}
	# Else if not connected
	if ($ConnectedState = $false)
	{
		# Log
		Write-Log -Level INFO -Message "Not connected - can´t load list of Managed Identity´s"
	}
}

$formManagedIdentityPermi_Load={
	#TODO: Initialize Form Controls here
	
	CheckLogPath
	
	Write-Log -Level INFO -Message "The application $ToolName is started"
	
	$global:darkModeStateUI = Is-WindowsInDarkMode
	
	if ($global:darkModeStateUI)
	{
		Set-ControlTheme $formManagedIdentityPermi -Theme Dark
		
		$darkModeSateUI = $true
	}
	else
	{
		Set-ControlTheme $formManagedIdentityPermi -Theme Light
		
		$darkModeSateUI = $false
	}
	
	$ConnectedState = $false
	$clearExistingPermissions = $true
	#$darkModeSateUI = $true
	
	#$formServiceAccountsVXxxC.Text = "Service Accounts v. $FormVersion - Created by: $Author - Company: $AuthorCompany"
	$formManagedIdentityPermi.Text = "$ToolName v. $FormVersion"
	
	$toolstripstatuslabelMain_CreatedBy.Text = "Created by: $Author"
	#$toolstripstatuslabelMain_CreatedBy.Text = "Created by: $Author"
	
	$ServiceComboBox.Items.Add("Microsoft Graph")
	$ServiceComboBox.Items.Add("Exchange Online")
	$ServiceComboBox.Items.Add("SharePoint")
}

$darkToolStripMenuItem_Click={
	#TODO: Place custom script here
	Set-ControlTheme -Control $formManagedIdentityPermi -Theme Dark
	
	$global:darkModeStateUI = $true
}

$lightToolStripMenuItem_Click={
	Set-ControlTheme -Control $formManagedIdentityPermi -Theme Light
	
	$global:darkModeStateUI = $false
}

#region Control Theme Helper Function
<#
	.SYNOPSIS
		Applies a theme to the control and its children.
	
	.PARAMETER Control
		The control to theme. Usually the form itself.
	
	.PARAMETER Theme
		The color theme:
		Light
		Dark

	.PARAMETER CustomColor
		A hashtable that contains the color values.
		Keys:
		WindowColor
		ContainerColor
		BackColor
		ForeColor
		BorderColor
		SelectionForeColor
		SelectionBackColor
		MenuSelectionColor
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -Theme Dark
	
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -CustomColor @{ WindowColor = 'White'; ContainerBackColor = 'Gray'; BackColor... }
	.NOTES
		Created by SAPIEN Technologies, Inc.
#>
function Set-ControlTheme
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.ComponentModel.Component]$Control,
		[ValidateSet('Light', 'Dark')]
		[string]$Theme = 'Dark',
		[System.Collections.Hashtable]$CustomColor
	)
	
	$Font = [System.Drawing.Font]::New('Segoe UI', 9)
	
	#Initialize the colors
	if ($Theme -eq 'Dark')
	{
		$WindowColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ContainerColor = [System.Drawing.Color]::FromArgb(45, 45, 45)
		$BackColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ForeColor = [System.Drawing.Color]::White
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::DimGray
	}
	else
	{
		$WindowColor = [System.Drawing.Color]::White
		$ContainerColor = [System.Drawing.Color]::WhiteSmoke
		$BackColor = [System.Drawing.Color]::Gainsboro
		$ForeColor = [System.Drawing.Color]::Black
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::LightSteelBlue
	}
	
	if ($CustomColor)
	{
		#Check and Validate the custom colors:
		$Color = $CustomColor.WindowColor -as [System.Drawing.Color]
		if ($Color) { $WindowColor = $Color }
		$Color = $CustomColor.ContainerColor -as [System.Drawing.Color]
		if ($Color) { $ContainerColor = $Color }
		$Color = $CustomColor.BackColor -as [System.Drawing.Color]
		if ($Color) { $BackColor = $Color }
		$Color = $CustomColor.ForeColor -as [System.Drawing.Color]
		if ($Color) { $ForeColor = $Color }
		$Color = $CustomColor.BorderColor -as [System.Drawing.Color]
		if ($Color) { $BorderColor = $Color }
		$Color = $CustomColor.SelectionBackColor -as [System.Drawing.Color]
		if ($Color) { $SelectionBackColor = $Color }
		$Color = $CustomColor.SelectionForeColor -as [System.Drawing.Color]
		if ($Color) { $SelectionForeColor = $Color }
		$Color = $CustomColor.MenuSelectionColor -as [System.Drawing.Color]
		if ($Color) { $MenuSelectionColor = $Color }
	}
	
	#Define the custom renderer for the menus
	#region Add-Type definition
	try
	{
		[SAPIENTypes.SAPIENColorTable] | Out-Null
	}
	catch
	{
		if ($PSVersionTable.PSVersion.Major -ge 7)
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing', 'System.Drawing.Primitives'
		}
		else
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing'
		}
		Add-Type -ReferencedAssemblies $Assemblies -TypeDefinition "
using System;
using System.Windows.Forms;
using System.Drawing;
namespace SAPIENTypes
{
    public class SAPIENColorTable : ProfessionalColorTable
    {
        Color ContainerBackColor;
        Color BackColor;
        Color BorderColor;
		Color SelectBackColor;

        public SAPIENColorTable(Color containerColor, Color backColor, Color borderColor, Color selectBackColor)
        {
            ContainerBackColor = containerColor;
            BackColor = backColor;
            BorderColor = borderColor;
			SelectBackColor = selectBackColor;
        } 
		public override Color MenuStripGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuStripGradientEnd { get { return ContainerBackColor; } }
        public override Color ToolStripBorder { get { return BorderColor; } }
        public override Color MenuItemBorder { get { return SelectBackColor; } }
        public override Color MenuItemSelected { get { return SelectBackColor; } }
        public override Color SeparatorDark { get { return BorderColor; } }
        public override Color ToolStripDropDownBackground { get { return BackColor; } }
        public override Color MenuBorder { get { return BorderColor; } }
        public override Color MenuItemSelectedGradientBegin { get { return SelectBackColor; } }
        public override Color MenuItemSelectedGradientEnd { get { return SelectBackColor; } }      
        public override Color MenuItemPressedGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientEnd { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientMiddle { get { return ContainerBackColor; } }
        public override Color ImageMarginGradientBegin { get { return BackColor; } }
        public override Color ImageMarginGradientEnd { get { return BackColor; } }
        public override Color ImageMarginGradientMiddle { get { return BackColor; } }
    }
}"
	}
	#endregion
	
	$colorTable = New-Object SAPIENTypes.SAPIENColorTable -ArgumentList $ContainerColor, $BackColor, $BorderColor, $MenuSelectionColor
	$render = New-Object System.Windows.Forms.ToolStripProfessionalRenderer -ArgumentList $colorTable
	[System.Windows.Forms.ToolStripManager]::Renderer = $render
	
	#Set up our processing queue
	$Queue = New-Object System.Collections.Generic.Queue[System.ComponentModel.Component]
	$Queue.Enqueue($Control)
	
	Add-Type -AssemblyName System.Core
	
	#Only process the controls once.
	$Processed = New-Object System.Collections.Generic.HashSet[System.ComponentModel.Component]
	
	#Apply the colors to the controls
	while ($Queue.Count -gt 0)
	{
		$target = $Queue.Dequeue()
		
		#Skip controls we already processed
		if ($Processed.Contains($target)) { continue }
		$Processed.Add($target)
		
		#Set the text color
		$target.ForeColor = $ForeColor
		
		#region Handle Controls
		if ($target -is [System.Windows.Forms.Form])
		{
			#Set Font
			$target.Font = $Font
			$target.BackColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.SplitContainer])
		{
			$target.BackColor = $BorderColor
		}
		elseif ($target -is [System.Windows.Forms.PropertyGrid])
		{
			$target.BackColor = $BorderColor
			$target.ViewBackColor = $BackColor
			$target.ViewForeColor = $ForeColor
			$target.ViewBorderColor = $BorderColor
			$target.CategoryForeColor = $ForeColor
			$target.CategorySplitterColor = $ContainerColor
			$target.HelpBackColor = $BackColor
			$target.HelpForeColor = $ForeColor
			$target.HelpBorderColor = $BorderColor
			$target.CommandsBackColor = $BackColor
			$target.CommandsBorderColor = $BorderColor
			$target.CommandsForeColor = $ForeColor
			$target.LineColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.ContainerControl] -or
			$target -is [System.Windows.Forms.Panel])
		{
			#Set the BackColor for the container
			$target.BackColor = $ContainerColor
			
		}
		elseif ($target -is [System.Windows.Forms.GroupBox])
		{
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.Button])
		{
			$target.FlatStyle = 'Flat'
			$target.FlatAppearance.BorderColor = $BorderColor
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.CheckBox] -or
			$target -is [System.Windows.Forms.RadioButton] -or
			$target -is [System.Windows.Forms.Label])
		{
			#$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.ComboBox])
		{
			$target.BackColor = $BackColor
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.TextBox])
		{
			$target.BorderStyle = 'FixedSingle'
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.DataGridView])
		{
			$target.GridColor = $BorderColor
			$target.BackgroundColor = $ContainerColor
			$target.DefaultCellStyle.BackColor = $WindowColor
			$target.DefaultCellStyle.SelectionBackColor = $SelectionBackColor
			$target.DefaultCellStyle.SelectionForeColor = $SelectionForeColor
			$target.ColumnHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.ColumnHeadersDefaultCellStyle.ForeColor = $ForeColor
			$target.EnableHeadersVisualStyles = $false
			$target.ColumnHeadersBorderStyle = 'Single'
			$target.RowHeadersBorderStyle = 'Single'
			$target.RowHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.RowHeadersDefaultCellStyle.ForeColor = $ForeColor
			
		}
		elseif ($PSVersionTable.PSVersion.Major -le 5 -and $target -is [System.Windows.Forms.DataGrid])
		{
			$target.CaptionBackColor = $WindowColor
			$target.CaptionForeColor = $ForeColor
			$target.BackgroundColor = $ContainerColor
			$target.BackColor = $WindowColor
			$target.ForeColor = $ForeColor
			$target.HeaderBackColor = $ContainerColor
			$target.HeaderForeColor = $ForeColor
			$target.FlatMode = $true
			$target.BorderStyle = 'FixedSingle'
			$target.GridLineColor = $BorderColor
			$target.AlternatingBackColor = $ContainerColor
			$target.SelectionBackColor = $SelectionBackColor
			$target.SelectionForeColor = $SelectionForeColor
		}
		elseif ($target -is [System.Windows.Forms.ToolStrip])
		{
			
			$target.BackColor = $BackColor
			$target.Renderer = $render
			
			foreach ($item in $target.Items)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ToolStripMenuItem] -or
			$target -is [System.Windows.Forms.ToolStripDropDown] -or
			$target -is [System.Windows.Forms.ToolStripDropDownItem])
		{
			$target.BackColor = $BackColor
			foreach ($item in $target.DropDownItems)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ListBox] -or
			$target -is [System.Windows.Forms.ListView] -or
			$target -is [System.Windows.Forms.TreeView])
		{
			$target.BackColor = $WindowColor
		}
		else
		{
			$target.BackColor = $BackColor
		}
		#endregion
		
		if ($target -is [System.Windows.Forms.Control])
		{
			#Queue all the child controls
			foreach ($child in $target.Controls)
			{
				$Queue.Enqueue($child)
			}
		}
	}
}
#endregion

$buttonConnectMicrosoftGraph_Click = {
	
	# If connected
	if ($labelConnectionStatus.Text -eq "Connected" -and $buttonConnectMicrosoftGraph.Text -eq "Disconnect Microsoft Graph")
	{
		try
		{
			# Disconnect
			Disconnect-MgGraph
			
			# Update states
			$ConnectedState = $false
			$labelConnectionStatus.Text = "Not connected"
			$labelConnectionStatus.ForeColor = 'Red'
			$buttonConnectMicrosoftGraph.Text = "Connect Microsoft Graph"
			
			# Log
			Write-Log -Level INFO -Message "Disconnected from Microsoft Graph."
			
			# Clear data
			$combobox.Items.Clear()
		}
		catch
		{
			# Log
			Write-Log -Level ERROR -Message "Error disconnecting from Microsoft Graph: $($_.Exception.Message)"
		}
	}
	else
	{
		try
		{
			# Check installed/loaded modules
			Check-Modules
			
			# Connect
			ConnectToGraph
			
			# If connected, set states
			if ($ConnectedState = $true)
			{
				$labelConnectionStatus.Text = "Connected"
				$labelConnectionStatus.ForeColor = 'Green'
				
				# Load managed identityes after connected
				Get-managedIdentities
				
				$buttonConnectMicrosoftGraph.Text = "Disconnect Microsoft Graph"
			}
			else
			{
				# If not connected set state
				$ConnectedState = $false
				
				$labelConnectionStatus.Text = "Not connected"
				$labelConnectionStatus.ForeColor = 'Red'
			}
		}
		catch
		{
			# Log
			Write-Log -Level ERROR -Message "Error connecting to Microsoft Graph: $($_.Exception.Message)"
		}
	}	
}

$combobox_SelectedIndexChanged = {
	
	# Get the selected identity based on ComboBox selected index
	$selectedIdentity = $global:managedIdentities[$comboBox.SelectedIndex]
	
	# Get roles assigned to the selected identity
	$roles = Get-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $textboxselectedIdentityID.Text
	
	# Extract and format role names and AppRoleIds
	$roleDetails = $roles | ForEach-Object { "$($_.ResourceDisplayName) (AppRoleId: $($_.AppRoleId))" } -join ", "
	
	# Update TextBox with selected identity details
	$textboxselectedIdentityID.Text = "$($selectedIdentity.Id)"
	$textboxAssingedRoles.Text = "$roleDetails"
}

$SubmitButton_Click = {
	
	#TODO: Place custom script here
	if ($radiobuttonAddPermissions.Checked -eq $true)
	{
		$ObjectID = $textboxselectedIdentityID.Text
		$Service = $ServiceComboBox.Text
		$Permissions = $PermissionsTextBox.Text
		
		# Debugging output
		Write-Log -Level INFO -Message "Managed Identity ObjectID: '$ObjectID'"
		Write-Log -Level INFO -Message "Service: '$Service'"
		Write-Log -Level INFO -Message "Permissions: '$Permissions'"
		
		# Validate inputs
		if (-not $ObjectID -or -not $Service -or -not $Permissions)
		{
			# Log
			Write-Log -Level INFO -Message "All fields are required."
			return
		}
		
		#Update-Log -Message "Calling Add-ServicePrincipalPermission with ManagedIdentityID: '$ObjectID', Permissions: '$Permissions', ServiceType: '$Service'"
		
		# Update permissions for managed idenityes
		if ($clearExistingPermissions)
		{
			Add-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service -clearExistingPermissions $true
		}
		else
		{
			Add-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service -clearExistingPermissions $false
		}
	}
		
	if ($radiobuttonRemovePermissions.Checked -eq $true)
	{
		$ObjectID = $textboxselectedIdentityID.Text
		$Service = $ServiceComboBox.Text
		$Permissions = $PermissionsTextBox.Text
		
		# Debugging output
		Write-Log -Level INFO -Message "Managed Identity ObjectID: '$ObjectID'"
		Write-Log -Level INFO -Message "Service: '$Service'"
		Write-Log -Level INFO -Message "Permissions: '$Permissions'"
		
		# Validate inputs
		if (-not $ObjectID -or -not $Service -or -not $Permissions)
		{
			Write-Log -Level INFO -Message "All fields are required."
			return
		}
		
		#Update-Log -Message "Calling Add-ServicePrincipalPermission with ManagedIdentityID: '$ObjectID', Permissions: '$Permissions', ServiceType: '$Service'"
		
		# Remove permissions form managed identity
		Remove-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service				
	}
}

$buttonGetCurrentAssignedPe_Click={
	#TODO: Place custom script here
	$ObjectID = $textboxselectedIdentityID.Text
	
	# Clear the TextBox before adding new data
	$textboxAssingedRoles.Clear()
	
	# Call the function and get the result
	$result = Get-CurrentAppRoleAssignments -ManagedIdentityID $ObjectID
	
	# Set the TextBox text to the result
	$textboxAssingedRoles.Text = $result
	
	#Update-Log -Message $result
	
	#Get-CurrentAppRoleAssignments -ManagedIdentityID $ObjectID
}

$buttonReloadManagedIdentityList_Click={
	#TODO: Place custom script here
	Get-managedIdentities
}

$checkboxKeepExistingPermissi_CheckedChanged={
	
	# Set state if set from user to keep existing assigned permissions or not
	if ($checkboxKeepExistingPermissi.Checked -eq $true)
	{
		# Set global state
		$global:clearExistingPermissions = $false
		
		# Log
		Write-Log -Level INFO -Message "Set to keep existing permissions (will NOT delete exisiting)"
	}
	elseif ($checkboxKeepExistingPermissi.Checked -eq $false)
	{
		# ASK IF THE USER WILL INSTALL AD Recycle Bin
		$ConfirmClearExistingPermissions = Show-MsgBox -Prompt "Will you remove existing permissions?`r`n`r`nIt can´t be reverted again!" -Title "Remove existing permissions?" -Icon Exclamation -BoxType YesNo -DefaultButton 2
		
		# Get confirmation
		If ($ConfirmClearExistingPermissions -eq "Yes")
		{
			# If confirmed set state
			$global:clearExistingPermissions = $true
			
			# Log
			Write-Log -Level INFO -Message "Set to reset existing permissions (will DELETE exisiting) - confirmed by user"
		}
		else
		{
			# If not confirmed set state
			$checkboxKeepExistingPermissi.Checked = $true
			
			# Log
			Write-Log -Level INFO -Message "Set to keep current state for reset existing permissions - confirmation to change is cancled by user"
		}		
	}
	else
	{
		# Log
		Write-Log -Level INFO -Message "No change"
	}
}

$microsoftGraphToolStripMenuItem_Click={
	
	# Start webpage
	Start-Process "https://learn.microsoft.com/en-us/graph/permissions-reference"
}

$buttonRemoveAllAssignedPermissions_Click={
	
	# Get data
	$ObjectID = $textboxselectedIdentityID.Text
	
	# Validate inputs
	if (-not $ObjectID)
	{
		Write-Log -Level INFO -Message "All fields are required - please select a managed identity"
		return
	}
	
	# ASK IF THE USER WILL REMOVE ALL PERMISSIONS
	$ConfirmRemoveAllExistingPermissions = Show-MsgBox -Prompt "Will you remove existing permissions?`r`n`r`nIt can´t be reverted again!" -Title "Remove all existing permissions?" -Icon Exclamation -BoxType YesNo -DefaultButton 2
	
	# If user comfirmed
	If ($ConfirmRemoveAllExistingPermissions -eq "Yes")
	{
		# Log
		Write-Log -Level INFO -Message "Will remove all existing permissions for Managed Identity with id '$ObjectID'  - confirmed by user"
		
		# Remove all assigned permissions
		Remove-AllServicePrincipalPermissions -ManagedIdentityID $ObjectID
	}
	else
	{
		# Log
		Write-Log -Level INFO -Message "Set to keep current state for reset existing permissions - confirmation to change is cancled by user"
	}	
}

$exitToolStripMenuItem_Click={
	
	# Exit application
	$formManagedIdentityPermi.Close()
}

$changelogToolStripMenuItem_Click={
	#TODO: Place custom script here
	Show-ChangelogForm_psf
}

$aboutToolStripMenuItem_Click={

	#SHOW ABOUT

	$yyyy = Get-Date -Format yyyy
	Show-MsgBox -Title "About $ToolName v. $FormVersion" -Prompt "Created by: $Author`r`n`r`nCopyright $yyyy © All rights reserved`r`n`r`nWebsite: sonnes.cloud`r`nBlog: blog.sonnes.cloud" -Icon Information -BoxType OKOnly
}

$openLogFolderToolStripMenuItem_Click={
	# Open logfile for today
	$objShell = New-Object -ComObject "Shell.Application"
	$objShell.Explore($LogPath)
	Write-Log -Level INFO -Message "User opened log folder: $LogPath"
}

$openLogForTodayToolStripMenuItem_Click={
	#OPEN CURRENT LOG FILE IN FROM FOLDER
	Write-Log -Level INFO -Message "User opened log file for today from: $LogPath"
	
	$logFilePath = Join-Path -Path $LogPath -ChildPath ("$($ToolName)_Log_$($env:computername)" + "_" + (Get-Date -Format "dd/MM/yyyy") + ".log")
	if (Test-Path $logFilePath)
	{
		Start-Process $logFilePath
		Write-Log -Level INFO -Message "User opened log file for today: $logFilePath"
	}
	else
	{
		Show-MsgBox -Prompt "Log file not found at $logFilePath." -Title "Can't locate and open the log for today" -Icon Exclamation -BoxType OKOnly
		Write-Log -Level INFO -Message "Log file not found at $logFilePath - Can't locate and open the log for today"
	}	
}

$myWebpageToolStripMenuItem_Click={
	#OPEN WEBSITE
	Start-Process "https://sonnes.cloud"
	Write-Log -Level INFO -Message "The user clicked on the link for more information about on the website https://sonnes.cloud"	
}

$myBlogToolStripMenuItem_Click={
	#OPEN WEBSITE
	Start-Process "https://blog.sonnes.cloud"
	Write-Log -Level INFO -Message "The user clicked on the link for more information about on the website https://blog.sonnes.cloud"
}

$button_ServiceAccounts_About_Click = {
	
	#SHOW ABOUT	
	$yyyy = Get-Date -Format yyyy
	Show-MsgBox -Title "About $ToolName v. $FormVersion" -Prompt "Created by: $Author`r`n`r`nCopyright $yyyy © All rights reserved`r`n`r`nWebsite: sonnes.cloud`r`nBlog: blog.sonnes.cloud" -Icon Information -BoxType OKOnly
}

$buttonFindAccessScopes_Click = {
	#Get-AssignableApiPermissionScopes -ApiDisplayName "Microsoft Graph"
	
	Get-AssignableApiPermissionScopes -ServiceType "$($ServiceComboBox.Text)"
	
	# ServiceComboBox
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]
		$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	if ($DisplayMember) 
	{
		$listBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}

function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ComboBox.DisplayMember = $DisplayMember
	}
	
	if ($ValueMember)
	{
		$ComboBox.ValueMember = $ValueMember
	}
}

#endregion

$comboboxPermissionScopes_SelectedIndexChanged={
	#TODO: Place custom script here
	
}

$buttonAddSelectedAccessSco_Click={
	$selectedScopes = @()
	foreach ($item in $checkedlistboxPermissionsToAssign.CheckedItems)
	{
		# Extract the scope value from the selected item
		if ($item -match "Role scope: '([^']+)'")
		{
			$selectedScopes += $matches[1]
			
			Write-Log -Level INFO -Message $matches[1]
		}
		<#
		elseif ($item -match "ScopeValue: ([^,]+)")
		{
			$selectedScopes += $matches[1]
			
			Write-Log -Level INFO -Message $matches[1]
		}
		#>
	}
	
	Write-Log -Level INFO -Message "Adding: $($selectedScopes -join ', ')"
	$PermissionsTextBox.Text = $selectedScopes -join ", "
	
	# Write-Log -Level INFO -Message "Adding: $selectedScopes"
	
	# $PermissionsTextBox
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>