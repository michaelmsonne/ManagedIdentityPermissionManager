<File version="3.2">
  <FileID>994b0401-5822-49c5-99cb-717d1f11a31a</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAFTmSURBVHhe7b1XbBzbvuZ3/GYM4HfbzwOMAcOD
C3scxoDH99F+su/YwJ0xPNdz7kn3nLPP3ls7aG9JWzmLoiRKlCiRYqYYxZxzzjl1M3Y3Q7OZyQ7s
wPQZ/9VsiWqFI+0tsUrF7wf80M2qrupq9upaX61atepXvyKEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGfNT/+V//iX+RfvxGR/yD6cf69qEeUUkop/Qx99Dg+/8SJb/P/2T/7T/PDK/vX+Of//J9X
Z+SVY3hmA8O2DQxZ1yillFL6GToidbl1Fad+uoDw+v41rt+IzB+Z3UTjgAUNfVNo6J+mlFJK6Zvs
Cz42hk//RH7o+9T3TaF1dB7tA+N/PQA8ionNH7O70DRgRfPgq7YM2tA96EDX0Pxr8yillNLjZsuQ
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
P0+dLtcb960bm5uqPj6yACCJY2raqn5cE5PTlL6ipFE58jqsTJcAsLGxyQBAP6mHWwBmZ+dhHpt8
rTxS+tn5ln3r+MSUqo9lf/rJA8Di4mJYk9oGpe9hsDCGds4MAPRTKWXM4XCo/VWo7L1eHik1isFy
v7q6qurnw7+FjxYAQj8s2XlLK4A8UvqhhsoOz8vST6kEzPCyR6nRlXJ/+HfwUQNAcIXBTgiU/hLD
d9iUfkzDyxulx8VXfwcfOQBQSimlVP/+ogDgWHHC7QquhFJKKaWfjy7XzwwA5nkXJhdcsDhcagWU
Ukop/bwcs7sw+b4B4FFMbP7aNtQCkhomFg8eKaWUUvr5uOhXdbl1fR8m69JfDwDXr9+qmlncVGmB
UkoppZ+3JssSugfG/noAIIQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIfrl/wdYbtYItQzDgQAA
AABJRU5ErkJggg==</Preview>
  <Form>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</Form>
  <Code><![CDATA[
$formManagedIdentityPermi_Load={
	#TODO: Initialize Form Controls here
	Set-ControlTheme $formManagedIdentityPermi -Theme Dark
	
	$ConnectedState = $false
	$clearExistingPermissions = $true
}

$darkToolStripMenuItem_Click={
	#TODO: Place custom script here
	Set-ControlTheme -Control $formManagedIdentityPermi -Theme Dark
}

$lightToolStripMenuItem_Click={
	Set-ControlTheme -Control $formManagedIdentityPermi -Theme Light
}


#region Control Theme Helper Function
<#
	.SYNOPSIS
		Applies a theme to the control and its children.
	
	.PARAMETER Control
		The control to theme. Usually the form itself.
	
	.PARAMETER Theme
		The color theme:
		Light
		Dark

	.PARAMETER CustomColor
		A hashtable that contains the color values.
		Keys:
		WindowColor
		ContainerColor
		BackColor
		ForeColor
		BorderColor
		SelectionForeColor
		SelectionBackColor
		MenuSelectionColor
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -Theme Dark
	
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -CustomColor @{ WindowColor = 'White'; ContainerBackColor = 'Gray'; BackColor... }
	.NOTES
		Created by SAPIEN Technologies, Inc.
#>
function Set-ControlTheme
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.ComponentModel.Component]$Control,
		[ValidateSet('Light', 'Dark')]
		[string]$Theme = 'Dark',
		[System.Collections.Hashtable]$CustomColor
	)
	
	$Font = [System.Drawing.Font]::New('Segoe UI', 9)
	
	#Initialize the colors
	if ($Theme -eq 'Dark')
	{
		$WindowColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ContainerColor = [System.Drawing.Color]::FromArgb(45, 45, 45)
		$BackColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ForeColor = [System.Drawing.Color]::White
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::DimGray
	}
	else
	{
		$WindowColor = [System.Drawing.Color]::White
		$ContainerColor = [System.Drawing.Color]::WhiteSmoke
		$BackColor = [System.Drawing.Color]::Gainsboro
		$ForeColor = [System.Drawing.Color]::Black
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::LightSteelBlue
	}
	
	if ($CustomColor)
	{
		#Check and Validate the custom colors:
		$Color = $CustomColor.WindowColor -as [System.Drawing.Color]
		if ($Color) { $WindowColor = $Color }
		$Color = $CustomColor.ContainerColor -as [System.Drawing.Color]
		if ($Color) { $ContainerColor = $Color }
		$Color = $CustomColor.BackColor -as [System.Drawing.Color]
		if ($Color) { $BackColor = $Color }
		$Color = $CustomColor.ForeColor -as [System.Drawing.Color]
		if ($Color) { $ForeColor = $Color }
		$Color = $CustomColor.BorderColor -as [System.Drawing.Color]
		if ($Color) { $BorderColor = $Color }
		$Color = $CustomColor.SelectionBackColor -as [System.Drawing.Color]
		if ($Color) { $SelectionBackColor = $Color }
		$Color = $CustomColor.SelectionForeColor -as [System.Drawing.Color]
		if ($Color) { $SelectionForeColor = $Color }
		$Color = $CustomColor.MenuSelectionColor -as [System.Drawing.Color]
		if ($Color) { $MenuSelectionColor = $Color }
	}
	
	#Define the custom renderer for the menus
	#region Add-Type definition
	try
	{
		[SAPIENTypes.SAPIENColorTable] | Out-Null
	}
	catch
	{
		if ($PSVersionTable.PSVersion.Major -ge 7)
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing', 'System.Drawing.Primitives'
		}
		else
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing'
		}
		Add-Type -ReferencedAssemblies $Assemblies -TypeDefinition "
using System;
using System.Windows.Forms;
using System.Drawing;
namespace SAPIENTypes
{
    public class SAPIENColorTable : ProfessionalColorTable
    {
        Color ContainerBackColor;
        Color BackColor;
        Color BorderColor;
		Color SelectBackColor;

        public SAPIENColorTable(Color containerColor, Color backColor, Color borderColor, Color selectBackColor)
        {
            ContainerBackColor = containerColor;
            BackColor = backColor;
            BorderColor = borderColor;
			SelectBackColor = selectBackColor;
        } 
		public override Color MenuStripGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuStripGradientEnd { get { return ContainerBackColor; } }
        public override Color ToolStripBorder { get { return BorderColor; } }
        public override Color MenuItemBorder { get { return SelectBackColor; } }
        public override Color MenuItemSelected { get { return SelectBackColor; } }
        public override Color SeparatorDark { get { return BorderColor; } }
        public override Color ToolStripDropDownBackground { get { return BackColor; } }
        public override Color MenuBorder { get { return BorderColor; } }
        public override Color MenuItemSelectedGradientBegin { get { return SelectBackColor; } }
        public override Color MenuItemSelectedGradientEnd { get { return SelectBackColor; } }      
        public override Color MenuItemPressedGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientEnd { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientMiddle { get { return ContainerBackColor; } }
        public override Color ImageMarginGradientBegin { get { return BackColor; } }
        public override Color ImageMarginGradientEnd { get { return BackColor; } }
        public override Color ImageMarginGradientMiddle { get { return BackColor; } }
    }
}"
	}
	#endregion
	
	$colorTable = New-Object SAPIENTypes.SAPIENColorTable -ArgumentList $ContainerColor, $BackColor, $BorderColor, $MenuSelectionColor
	$render = New-Object System.Windows.Forms.ToolStripProfessionalRenderer -ArgumentList $colorTable
	[System.Windows.Forms.ToolStripManager]::Renderer = $render
	
	#Set up our processing queue
	$Queue = New-Object System.Collections.Generic.Queue[System.ComponentModel.Component]
	$Queue.Enqueue($Control)
	
	Add-Type -AssemblyName System.Core
	
	#Only process the controls once.
	$Processed = New-Object System.Collections.Generic.HashSet[System.ComponentModel.Component]
	
	#Apply the colors to the controls
	while ($Queue.Count -gt 0)
	{
		$target = $Queue.Dequeue()
		
		#Skip controls we already processed
		if ($Processed.Contains($target)) { continue }
		$Processed.Add($target)
		
		#Set the text color
		$target.ForeColor = $ForeColor
		
		#region Handle Controls
		if ($target -is [System.Windows.Forms.Form])
		{
			#Set Font
			$target.Font = $Font
			$target.BackColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.SplitContainer])
		{
			$target.BackColor = $BorderColor
		}
		elseif ($target -is [System.Windows.Forms.PropertyGrid])
		{
			$target.BackColor = $BorderColor
			$target.ViewBackColor = $BackColor
			$target.ViewForeColor = $ForeColor
			$target.ViewBorderColor = $BorderColor
			$target.CategoryForeColor = $ForeColor
			$target.CategorySplitterColor = $ContainerColor
			$target.HelpBackColor = $BackColor
			$target.HelpForeColor = $ForeColor
			$target.HelpBorderColor = $BorderColor
			$target.CommandsBackColor = $BackColor
			$target.CommandsBorderColor = $BorderColor
			$target.CommandsForeColor = $ForeColor
			$target.LineColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.ContainerControl] -or
			$target -is [System.Windows.Forms.Panel])
		{
			#Set the BackColor for the container
			$target.BackColor = $ContainerColor
			
		}
		elseif ($target -is [System.Windows.Forms.GroupBox])
		{
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.Button])
		{
			$target.FlatStyle = 'Flat'
			$target.FlatAppearance.BorderColor = $BorderColor
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.CheckBox] -or
			$target -is [System.Windows.Forms.RadioButton] -or
			$target -is [System.Windows.Forms.Label])
		{
			#$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.ComboBox])
		{
			$target.BackColor = $BackColor
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.TextBox])
		{
			$target.BorderStyle = 'FixedSingle'
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.DataGridView])
		{
			$target.GridColor = $BorderColor
			$target.BackgroundColor = $ContainerColor
			$target.DefaultCellStyle.BackColor = $WindowColor
			$target.DefaultCellStyle.SelectionBackColor = $SelectionBackColor
			$target.DefaultCellStyle.SelectionForeColor = $SelectionForeColor
			$target.ColumnHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.ColumnHeadersDefaultCellStyle.ForeColor = $ForeColor
			$target.EnableHeadersVisualStyles = $false
			$target.ColumnHeadersBorderStyle = 'Single'
			$target.RowHeadersBorderStyle = 'Single'
			$target.RowHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.RowHeadersDefaultCellStyle.ForeColor = $ForeColor
			
		}
		elseif ($PSVersionTable.PSVersion.Major -le 5 -and $target -is [System.Windows.Forms.DataGrid])
		{
			$target.CaptionBackColor = $WindowColor
			$target.CaptionForeColor = $ForeColor
			$target.BackgroundColor = $ContainerColor
			$target.BackColor = $WindowColor
			$target.ForeColor = $ForeColor
			$target.HeaderBackColor = $ContainerColor
			$target.HeaderForeColor = $ForeColor
			$target.FlatMode = $true
			$target.BorderStyle = 'FixedSingle'
			$target.GridLineColor = $BorderColor
			$target.AlternatingBackColor = $ContainerColor
			$target.SelectionBackColor = $SelectionBackColor
			$target.SelectionForeColor = $SelectionForeColor
		}
		elseif ($target -is [System.Windows.Forms.ToolStrip])
		{
			
			$target.BackColor = $BackColor
			$target.Renderer = $render
			
			foreach ($item in $target.Items)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ToolStripMenuItem] -or
			$target -is [System.Windows.Forms.ToolStripDropDown] -or
			$target -is [System.Windows.Forms.ToolStripDropDownItem])
		{
			$target.BackColor = $BackColor
			foreach ($item in $target.DropDownItems)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ListBox] -or
			$target -is [System.Windows.Forms.ListView] -or
			$target -is [System.Windows.Forms.TreeView])
		{
			$target.BackColor = $WindowColor
		}
		else
		{
			$target.BackColor = $BackColor
		}
		#endregion
		
		if ($target -is [System.Windows.Forms.Control])
		{
			#Queue all the child controls
			foreach ($child in $target.Controls)
			{
				$Queue.Enqueue($child)
			}
		}
	}
}
#endregion

function Get-ManagedIdentities
{
	# Get managed identities
	
	$comboBox.Items.Clear()
	
	if ($ConnectedState = $true)
	{
		Update-Log -Message "Loading list of Managed Identity from tenant..."
		
		$global:managedIdentities = Get-MgServicePrincipal -Filter "servicePrincipalType eq 'ManagedIdentity'"
		
		Update-Log -Message "Loaded list Managed Identity from tenant."
		
		# Populate the ComboBox with managed identities
		foreach ($identity in $managedIdentities)
		{
			$comboBox.Items.Add($identity.DisplayName)
		}
		Update-Log -Message "List of Managed Identity updated with a total of '$(Get-ManagedIdentityCount)' Managed Identity´s"
	}
	if ($ConnectedState = $false)
	{
		Update-Log -Message "Not connected - can´t load list of Managed Identity´s"
	}
	
}

$buttonConnectMicrosoftGraph_Click = {
	
	if ($labelConnectionStatus.Text -eq "Connected" -and $buttonConnectMicrosoftGraph.Text -eq "Disconnect Microsoft Graph")
	{
		try
		{
			Disconnect-MgGraph
			$ConnectedState = $false
			$labelConnectionStatus.Text = "Not connected"
			$labelConnectionStatus.ForeColor = 'Red'
			$buttonConnectMicrosoftGraph.Text = "Connect Microsoft Graph"
			Update-Log -Message "Disconnected from Microsoft Graph."
			
			$combobox.Items.Clear()
		}
		catch
		{
			Update-Log -Message "Error disconnecting from Microsoft Graph: $_"
		}
	}
	else
	{
		try
		{			
			Check-Modules
					
			ConnectToGraph
			
			if ($ConnectedState = $true)
			{
				$labelConnectionStatus.Text = "Connected"
				$labelConnectionStatus.ForeColor = 'Green'
				
				Get-managedIdentities
				
				$buttonConnectMicrosoftGraph.Text = "Disconnect Microsoft Graph"
			}
			else
			{
				$ConnectedState = $false
				
				$labelConnectionStatus.Text = "Not connected"
				$labelConnectionStatus.ForeColor = 'Red'
			}
		}
		catch
		{
			Update-Log -Message "Error connecting to Microsoft Graph: $_"
		}
	}	
}

$combobox_SelectedIndexChanged={
	# Get the selected identity based on ComboBox selected index
	$selectedIdentity = $global:managedIdentities[$comboBox.SelectedIndex]
	
	# Get roles assigned to the selected identity
	$roles = Get-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $textboxselectedIdentityID.Text
	
	# Extract and format role names and AppRoleIds
	$roleDetails = $roles | ForEach-Object { "$($_.ResourceDisplayName) (AppRoleId: $($_.AppRoleId))" } -join ", "
	
	# Update TextBox with selected identity details
	$textboxselectedIdentityID.Text = "$($selectedIdentity.Id)"
	$textboxAssingedRoles.Text = "$roleDetails"
}

$SubmitButton_Click = {
	
	#TODO: Place custom script here
	if ($radiobuttonAddPermissions.Checked = $true)
	{
		$ObjectID = $textboxselectedIdentityID.Text
		$Service = $ServiceComboBox.Text
		$Permissions = $PermissionsTextBox.Text
		
		# Debugging output
		Update-Log -Message "Managed Identity ObjectID: '$ObjectID'"
		Update-Log -Message "Service: '$Service'"
		Update-Log -Message "Permissions: '$Permissions'"
		
		# Validate inputs
		if (-not $ObjectID -or -not $Service -or -not $Permissions)
		{
			Update-Log -Message "All fields are required."
			return
		}
		
		#Update-Log -Message "Calling Add-ServicePrincipalPermission with ManagedIdentityID: '$ObjectID', Permissions: '$Permissions', ServiceType: '$Service'"
		
		if ($clearExistingPermissions)
		{
			Add-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service -clearExistingPermissions $true
		}
		else
		{
			Add-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service -clearExistingPermissions $false
		}
	}
}

$buttonGetCurrentPermission_Click={
	#TODO: Place custom script here
	$ObjectID = $textboxselectedIdentityID.Text
	
	# Clear the TextBox before adding new data
	$textboxAssingedRoles.Clear()
	
	# Call the function and get the result
	$result = Get-CurrentAppRoleAssignments -ManagedIdentityID $ObjectID
	
	# Set the TextBox text to the result
	$textboxAssingedRoles.Text = $result
	
	#Update-Log -Message $result
	
	#Get-CurrentAppRoleAssignments -ManagedIdentityID $ObjectID
}

$buttonReloadManagedIdentityList_Click={
	#TODO: Place custom script here
	Get-managedIdentities
}

$checkboxKeepExistingPermissi_CheckedChanged={
	
	# TODO: Place custom script here
	if ($checkboxKeepExistingPermissi.Checked -eq $true)
	{
		$global:clearExistingPermissions = $false
		Update-Log -Message "Set to keep existing permissions (will NOT delete exisiting)"
	}
	elseif ($checkboxKeepExistingPermissi.Checked -eq $false)
	{
		# ASK IF THE USER WILL INSTALL AD Recycle Bin
		$ConfirmClearExistingPermissions = Show-MsgBox -Prompt "Will you remove existing permissions?`r`n`r`nIt can´t be reverted again!" -Title "Remove existing permissions?" -Icon Exclamation -BoxType YesNo -DefaultButton 2
		
		If ($ConfirmClearExistingPermissions -eq "Yes")
		{
			$global:clearExistingPermissions = $true
			Update-Log -Message "Set to reset existing permissions (will DELETE exisiting) - confirmed by user"
		}
		else
		{
			Update-Log -Message "Set to keep current state for reset existing permissions - confirmation to change is cancled by user"
			$checkboxKeepExistingPermissi.Checked = $true
		}		
	}
	else
	{
		Update-Log -Message "No change"
	}
}
$microsoftGraphToolStripMenuItem_Click={
	#TODO: Place custom script here
	Start-Process "https://learn.microsoft.com/en-us/graph/permissions-reference"
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>