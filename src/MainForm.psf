<File version="3.2">
  <FileID>994b0401-5822-49c5-99cb-717d1f11a31a</FileID>
  <Preview>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
1SyT178gLS7Iaft0y2j+T2Yaos+zPHVw9ekfq5nWZua3m43Z76m5762NqN0hj9up6dfLx60+31vN
+Sdfa3Zu1nrnZ83zfgLN5Q8PD1vfUWGeEAQAAIQDIRwA+Es0d6z5f5sIMBu3kZER/IDmf2M0T4iV
JwMBAADhAAEQ4Zo72+wDweEwP/F9zf/G8aMnAgEAAOHAugsAc4Urr04R15O8AwAA4cS6CgDz01xx
S0u7Ort61dXdh/gb+tOPuY7OHrW1dVqP0bk5AgAAQp91FQDmyswueHv7+q1d69rtDsTfTLP76dXH
LWu3Ho8mSs0TgwAAgHBg3QXA+PiEXvQPWvOuV58H8dfU4/FYP80G3Pw0TwTz07zl73I51d3zggAA
gLCBAEAMuhIAKw/6lSeD2aATAAAQbhAAiEFXAsA89pqamlRcXGxNkzSzAAgAAAg3CADEoCYAzB7/
Xrx4obNnzyo1NVVlZWXWRwBmDAABAADhBAGAGHQlAHp7e3Xv3j1VV1dbmicCAQAA4QYBgBh05SMA
85a/2eCvaI7jIwAACDcIAMSgKwGwWgYBAkA4QgAgBiUAACCSIAAQgxIAABBJEACIQQkAAIgkCADE
oAQAAEQSBABiUAIAACIJAgAxKAEAAJEEAYAYlAAAgEiCAEAMSgAAQCRBACAGJQAAIJIgABCDEgAA
EEkQAIhBCQAAiCQIAMSgBAAARBIEAGJQAgAAIgkCADEoAQAAkQQBgBiUAACASIIAQAxKAABAJEEA
IAYlAAAgkiAAEIMSAAAQSRAAiEEJAACIJAgAxKAEAABEEgQAYlACAAAiCQIAMSgBAACRBAGAGJQA
AIBIggBADEoAAEAkQQAgBiUAACCSIAAQgxIAABBJEACIQQkAAIgkCADEoAQAAEQSBABiUAIAACIJ
AgAxKAEAAJEEAYAYlAAAgEiCAEAMSgAAQCRBACAGJQAAIJIgABCDEgAAEEkQAIhBCQAAiCQIAMSg
BAAARBIEAGJQAgAAIgkCADEoAQAAkQQBgBiUAACASIIAQAxKAABAJEEAIAYlAAAgkiAAEIMSAAAQ
SRAAiEEJAACIJAgAxKAEAABEEgQAYlACAAAiCQIAMSgBAACRBAGAGJQAAIBIggBADEoAAEAkQQAg
BiUAACCSIAAQgxIAABBJEACIQQkAAIgkCADEoAQAAEQSBABiUAIAACIJAgAxKAEAAJEEAYAYlAAA
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
D3/LewA0e/czLC0G5HaZvQaaDYbX2gi53G7rhvr8vuW9BX5gmdbSXJfb45Xf5/0FXyFsk+NjPnqw
feT55udkdzjlMTMj5uaCe0AMyOuyW/9Da2Md8MnlXP7f/ZLZD2sFwJsX9Tq4P0aXL5zVubxrully
Rht27lV67nmdiD6qIydilJRzWXXVZYqN2q28m5Uqv1yuJ48bdbHkkvKT9+nLPVFqG5m1Lu/x5XRt
3HRQmTl52n8gXq2v7Nbxldkx2rg7UTevXtL27w7o9rUqHdm9QykpJaqovKPrJfE6FBuvuFPJij12
TKfTL6ru7lVt/e4rpZTc1oPrGdq6dZOSLjVYl0cAIGK4GpIB4HS79bK9VglxsTpxIlan0vM1OGGX
FtwaHRnVvMOjgN8rm7kBdoecTqely+3S7NSIau7f0Y07dZqctcnldFmvED0e3/IrRadTPp857LUC
wu5wWTu2cTrM5Thkt3465fH6rV0Hmw3m3LzNGpioBZea6+6rvPKRxqfNP8Yur89vxYX5W7P8TrOL
YSsSfNbx3uDlOJ3megLyus0/etbacMyboPD65Pd5rN0TLy+HucyA3I45jYyMy+H2KuD3WzHjtZbb
JZvNIZ/fnMcup8ev2fFB1T1uk8PtsqY9Prx+SQ87xjTz8rkSYuOUnFuunr4Xamhsld3lsv5vq++L
j3GtAJjorlVcYoGa7pXrzOlkfffFN0pNS9He7ftVVHpNF0sv6+ql89q09agGhnp0Lu+CqiqLtfP7
KF0szNGmL77V6fh43W8Zk2fmlUqSM3R0/15t3vm99h2MV/u4W7bRHhUkpmjn7v1KTMlWQswJpSXn
KiMlXkcPHtfOXftUUFGtqf5GffvPnXrc80q11/P02b/8WccT03TyyEElnivTi856ZZU8IAAQMawN
yQCw2c35p3T7fJaS4vNVkJempPQStff0qKH+ibq6OtRQ/1wz8w5NjY5o6NWYJsYn9WZ8VPV3byj6
+33adjBZw7MuTQ7363FTi3q6n+tpZ58mJ8dU31CvxqfN6ngxovnX/br74KGGJsY0PDSmqYkJjYyM
qbejUa0Do3K6nHLMvlFrY526e3tVmBqrDTtOqm/SJr/LpqZHd1Xb1KrhkXFNT7/Rq5eDamlp1oPa
WjW3dqqr44na+l9pYvSlqh/WqKm2SgcPxql/yiGnY149zx6r/mm3Zt681uPaBr0amVTHs2Y1Nz1V
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
QOxeSI2uAAAAAElFTkSuQmCC</Preview>
  <Form>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
lAD2FvgCAA==</Form>
  <Code><![CDATA[# Write-Log -Level INFO -Message

#$checkedlistboxPermissionsToAssign.Items.Add($scopeDetails)

# Master list to store all items
$global:masterItems = @()

#region Control Helper Functions
function Update-ToolStripComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ToolStripComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ToolStripComboBox control.
	
	.PARAMETER ToolStripComboBox
		The ToolStripComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ToolStripComboBox's Items collection.
	
	.PARAMETER Append
		Adds the item(s) to the ToolStripComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ToolStripComboBox $toolStripComboBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ToolStripComboBox $toolStripComboBox1 "Red" -Append
		Update-ToolStripComboBox $toolStripComboBox1 "White" -Append
		Update-ToolStripComboBox $toolStripComboBox1 "Blue" -Append
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ToolStripComboBox]
		$ToolStripComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ToolStripComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ToolStripComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$ToolStripComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ToolStripComboBox.Items.Add($obj)
		}
		$ToolStripComboBox.EndUpdate()
	}
	else
	{
		$ToolStripComboBox.Items.Add($Items)
	}
}



function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$listBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}

function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ComboBox.DisplayMember = $DisplayMember
	}
	
	if ($ValueMember)
	{
		$ComboBox.ValueMember = $ValueMember
	}
}

#endregion

#region Control Theme Helper Function
<#
	.SYNOPSIS
		Applies a theme to the control and its children.
	
	.PARAMETER Control
		The control to theme. Usually the form itself.
	
	.PARAMETER Theme
		The color theme:
		Light
		Dark

	.PARAMETER CustomColor
		A hashtable that contains the color values.
		Keys:
		WindowColor
		ContainerColor
		BackColor
		ForeColor
		BorderColor
		SelectionForeColor
		SelectionBackColor
		MenuSelectionColor
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -Theme Dark
	
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -CustomColor @{ WindowColor = 'White'; ContainerBackColor = 'Gray'; BackColor... }
	.NOTES
		Created by SAPIEN Technologies, Inc.
#>
function Set-ControlTheme
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.ComponentModel.Component]$Control,
		[ValidateSet('Light', 'Dark')]
		[string]$Theme = 'Dark',
		[System.Collections.Hashtable]$CustomColor
	)
	
	$Font = [System.Drawing.Font]::New('Segoe UI', 9)
	
	#Initialize the colors
	if ($Theme -eq 'Dark')
	{
		$WindowColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ContainerColor = [System.Drawing.Color]::FromArgb(45, 45, 45)
		$BackColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ForeColor = [System.Drawing.Color]::White
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::DimGray
	}
	else
	{
		$WindowColor = [System.Drawing.Color]::White
		$ContainerColor = [System.Drawing.Color]::WhiteSmoke
		$BackColor = [System.Drawing.Color]::Gainsboro
		$ForeColor = [System.Drawing.Color]::Black
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::LightSteelBlue
	}
	
	if ($CustomColor)
	{
		#Check and Validate the custom colors:
		$Color = $CustomColor.WindowColor -as [System.Drawing.Color]
		if ($Color) { $WindowColor = $Color }
		$Color = $CustomColor.ContainerColor -as [System.Drawing.Color]
		if ($Color) { $ContainerColor = $Color }
		$Color = $CustomColor.BackColor -as [System.Drawing.Color]
		if ($Color) { $BackColor = $Color }
		$Color = $CustomColor.ForeColor -as [System.Drawing.Color]
		if ($Color) { $ForeColor = $Color }
		$Color = $CustomColor.BorderColor -as [System.Drawing.Color]
		if ($Color) { $BorderColor = $Color }
		$Color = $CustomColor.SelectionBackColor -as [System.Drawing.Color]
		if ($Color) { $SelectionBackColor = $Color }
		$Color = $CustomColor.SelectionForeColor -as [System.Drawing.Color]
		if ($Color) { $SelectionForeColor = $Color }
		$Color = $CustomColor.MenuSelectionColor -as [System.Drawing.Color]
		if ($Color) { $MenuSelectionColor = $Color }
	}
	
	#Define the custom renderer for the menus
	#region Add-Type definition
	try
	{
		[SAPIENTypes.SAPIENColorTable] | Out-Null
	}
	catch
	{
		if ($PSVersionTable.PSVersion.Major -ge 7)
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing', 'System.Drawing.Primitives'
		}
		else
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing'
		}
		Add-Type -ReferencedAssemblies $Assemblies -TypeDefinition "
using System;
using System.Windows.Forms;
using System.Drawing;
namespace SAPIENTypes
{
    public class SAPIENColorTable : ProfessionalColorTable
    {
        Color ContainerBackColor;
        Color BackColor;
        Color BorderColor;
		Color SelectBackColor;

        public SAPIENColorTable(Color containerColor, Color backColor, Color borderColor, Color selectBackColor)
        {
            ContainerBackColor = containerColor;
            BackColor = backColor;
            BorderColor = borderColor;
			SelectBackColor = selectBackColor;
        } 
		public override Color MenuStripGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuStripGradientEnd { get { return ContainerBackColor; } }
        public override Color ToolStripBorder { get { return BorderColor; } }
        public override Color MenuItemBorder { get { return SelectBackColor; } }
        public override Color MenuItemSelected { get { return SelectBackColor; } }
        public override Color SeparatorDark { get { return BorderColor; } }
        public override Color ToolStripDropDownBackground { get { return BackColor; } }
        public override Color MenuBorder { get { return BorderColor; } }
        public override Color MenuItemSelectedGradientBegin { get { return SelectBackColor; } }
        public override Color MenuItemSelectedGradientEnd { get { return SelectBackColor; } }      
        public override Color MenuItemPressedGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientEnd { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientMiddle { get { return ContainerBackColor; } }
        public override Color ImageMarginGradientBegin { get { return BackColor; } }
        public override Color ImageMarginGradientEnd { get { return BackColor; } }
        public override Color ImageMarginGradientMiddle { get { return BackColor; } }
    }
}"
	}
	#endregion
	
	$colorTable = New-Object SAPIENTypes.SAPIENColorTable -ArgumentList $ContainerColor, $BackColor, $BorderColor, $MenuSelectionColor
	$render = New-Object System.Windows.Forms.ToolStripProfessionalRenderer -ArgumentList $colorTable
	[System.Windows.Forms.ToolStripManager]::Renderer = $render
	
	#Set up our processing queue
	$Queue = New-Object System.Collections.Generic.Queue[System.ComponentModel.Component]
	$Queue.Enqueue($Control)
	
	Add-Type -AssemblyName System.Core
	
	#Only process the controls once.
	$Processed = New-Object System.Collections.Generic.HashSet[System.ComponentModel.Component]
	
	#Apply the colors to the controls
	while ($Queue.Count -gt 0)
	{
		$target = $Queue.Dequeue()
		
		#Skip controls we already processed
		if ($Processed.Contains($target)) { continue }
		$Processed.Add($target)
		
		#Set the text color
		$target.ForeColor = $ForeColor
		
		#region Handle Controls
		if ($target -is [System.Windows.Forms.Form])
		{
			#Set Font
			$target.Font = $Font
			$target.BackColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.SplitContainer])
		{
			$target.BackColor = $BorderColor
		}
		elseif ($target -is [System.Windows.Forms.PropertyGrid])
		{
			$target.BackColor = $BorderColor
			$target.ViewBackColor = $BackColor
			$target.ViewForeColor = $ForeColor
			$target.ViewBorderColor = $BorderColor
			$target.CategoryForeColor = $ForeColor
			$target.CategorySplitterColor = $ContainerColor
			$target.HelpBackColor = $BackColor
			$target.HelpForeColor = $ForeColor
			$target.HelpBorderColor = $BorderColor
			$target.CommandsBackColor = $BackColor
			$target.CommandsBorderColor = $BorderColor
			$target.CommandsForeColor = $ForeColor
			$target.LineColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.ContainerControl] -or
			$target -is [System.Windows.Forms.Panel])
		{
			#Set the BackColor for the container
			$target.BackColor = $ContainerColor
			
		}
		elseif ($target -is [System.Windows.Forms.GroupBox])
		{
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.Button])
		{
			$target.FlatStyle = 'Flat'
			$target.FlatAppearance.BorderColor = $BorderColor
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.CheckBox] -or
			$target -is [System.Windows.Forms.RadioButton] -or
			$target -is [System.Windows.Forms.Label])
		{
			#$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.ComboBox])
		{
			$target.BackColor = $BackColor
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.TextBox])
		{
			$target.BorderStyle = 'FixedSingle'
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.DataGridView])
		{
			$target.GridColor = $BorderColor
			$target.BackgroundColor = $ContainerColor
			$target.DefaultCellStyle.BackColor = $WindowColor
			$target.DefaultCellStyle.SelectionBackColor = $SelectionBackColor
			$target.DefaultCellStyle.SelectionForeColor = $SelectionForeColor
			$target.ColumnHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.ColumnHeadersDefaultCellStyle.ForeColor = $ForeColor
			$target.EnableHeadersVisualStyles = $false
			$target.ColumnHeadersBorderStyle = 'Single'
			$target.RowHeadersBorderStyle = 'Single'
			$target.RowHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.RowHeadersDefaultCellStyle.ForeColor = $ForeColor
			
		}
		elseif ($PSVersionTable.PSVersion.Major -le 5 -and $target -is [System.Windows.Forms.DataGrid])
		{
			$target.CaptionBackColor = $WindowColor
			$target.CaptionForeColor = $ForeColor
			$target.BackgroundColor = $ContainerColor
			$target.BackColor = $WindowColor
			$target.ForeColor = $ForeColor
			$target.HeaderBackColor = $ContainerColor
			$target.HeaderForeColor = $ForeColor
			$target.FlatMode = $true
			$target.BorderStyle = 'FixedSingle'
			$target.GridLineColor = $BorderColor
			$target.AlternatingBackColor = $ContainerColor
			$target.SelectionBackColor = $SelectionBackColor
			$target.SelectionForeColor = $SelectionForeColor
		}
		elseif ($target -is [System.Windows.Forms.ToolStrip])
		{
			
			$target.BackColor = $BackColor
			$target.Renderer = $render
			
			foreach ($item in $target.Items)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ToolStripMenuItem] -or
			$target -is [System.Windows.Forms.ToolStripDropDown] -or
			$target -is [System.Windows.Forms.ToolStripDropDownItem])
		{
			$target.BackColor = $BackColor
			foreach ($item in $target.DropDownItems)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ListBox] -or
			$target -is [System.Windows.Forms.ListView] -or
			$target -is [System.Windows.Forms.TreeView])
		{
			$target.BackColor = $WindowColor
		}
		else
		{
			$target.BackColor = $BackColor
		}
		#endregion
		
		if ($target -is [System.Windows.Forms.Control])
		{
			#Queue all the child controls
			foreach ($child in $target.Controls)
			{
				$Queue.Enqueue($child)
			}
		}
	}
}
#endregion

# Populate the master list initially for access scopes found
function Initialize-MasterItems
{
	$global:masterItems = @()
	foreach ($item in $checkedlistboxPermissionsToAssign.Items)
	{
		$global:masterItems += $item
	}
}

function Get-AssignableApiPermissionScopes
{
	param (
		[string]$ServiceType
	)
	
	try
	{
		# Clear list for existing ithems
		$checkedlistboxPermissionsToAssign.Items.Clear()
		
		# Determine the AppId based on the ServiceType
		switch ($ServiceType)
		{
			"Microsoft Graph" {
				$appId = '00000003-0000-0000-c000-000000000000'
			}
			"Exchange Online" {
				$appId = '00000002-0000-0ff1-ce00-000000000000'
			}
			"SharePoint" {
				$appId = '00000003-0000-0ff1-ce00-000000000000'
			}
			default {
				# Log
				Write-Log -Level INFO -Message "Invalid ServiceType specified. Valid values are 'Microsoft Graph', 'Exchange Online', 'SharePoint'."
				return
			}
		}
		
		# Get the service principal for the specified AppId
		Write-Log -Level INFO -Message "Retrieving service principal for AppId: '$appId'"
		
		# Get needed data
		$servicePrincipal = Get-MgServicePrincipal -Filter "AppId eq '$appId'" -Property "id,appId,displayName,appRoles,oauth2PermissionScopes,resourceSpecificApplicationPermissions"
		
		# Check if returned data
		if ($null -eq $servicePrincipal)
		{
			# Log
			Write-Log -Level INFO -Message "No service principal found with AppId '$appId', Service '$($servicePrincipal.DisplayName)'."
			return
		}
		
		# Log
		Write-Log -Level INFO -Message "Service principal retrieved: AppId '$appId', '$($servicePrincipal.DisplayName)'"
		
		# Extract the permission scopes (AppRoles and Oauth2PermissionScopes)
		$appRoles = $servicePrincipal.AppRoles
		$oauth2PermissionScopes = $servicePrincipal.Oauth2PermissionScopes
		
		# Check if scopes assigned
		if ($appRoles.Count -eq 0 -and $oauth2PermissionScopes.Count -eq 0)
		{
			# Log
			Write-Log -Level INFO -Message "No assignable permission scopes found for service principal with AppId '$appId' service '$($servicePrincipal.DisplayName)'."
			return
		}
		
		# Log
		Write-Log -Level INFO -Message "Assignable permission scopes retrieved for AppId '$appId' service '$($servicePrincipal.DisplayName)'."
		
		# Populate the CheckedListBox with permission scopes
		Write-Log -Level INFO -Message "Adding assignable permission scopes to permission list for AppId '$appId' service '$($servicePrincipal.DisplayName)'..."
		
		foreach ($role in $appRoles)
		{
			$roleDetails = "Role details: '$($role.DisplayName)', Role scope: '$($role.Value)', RoleId: '$($role.Id)'"
			$checkedlistboxPermissionsToAssign.Items.Add($roleDetails)
		}
		
		Write-Log -Level INFO -Message "Added all assignable permission scopes to permission list for AppId '$appId' service '$($servicePrincipal.DisplayName)' to the list for management."
		
		<#
		foreach ($scope in $oauth2PermissionScopes)
		{
			$scopeDetails = "Scope details: $($scope.AdminConsentDisplayName), ScopeValue: $($scope.Value), ScopeId: $($scope.Id)"
			$checkedlistboxPermissionsToAssign.Items.Add($scopeDetails)
		}
		#>
	}
	catch
	{
		# Log
		Write-Log -Level ERROR -Message "Error retrieving permission scopes: $_"
	}
}

function Get-ManagedIdentities
{
	# Clear current data in the CheckedListBox to not keep old items
	$checkedlistboxListOfManagedIdentity.Items.Clear()
	
	# If connected
	if ($global:ConnectedState)
	{
		# Log
		Write-Log -Level INFO -Message "Loading list of Managed Identity from tenant..."
		
		# Get all managed identities
		$global:managedIdentities = Get-MgServicePrincipal -Filter "servicePrincipalType eq 'ManagedIdentity'" -All
		
		# Log
		Write-Log -Level INFO -Message "Loaded updated the list of found Managed Identity´s from tenant."
		
		# Create a custom object with DisplayName and Id, then sort by DisplayName
		$sortedIdentities = $global:managedIdentities | Sort-Object DisplayName | ForEach-Object {
			[PSCustomObject]@{
				DisplayName = $_.DisplayName
				Id		    = $_.Id
			}
		}
		
		# Populate the CheckedListBox with sorted managed identities
		foreach ($identity in $sortedIdentities)
		{
			$checkedlistboxListOfManagedIdentity.Items.Add($identity.DisplayName)
		}
		
		# Store the sorted identities in a global variable for later use
		$global:sortedManagedIdentities = $sortedIdentities
		$global:filteredManagedIdentities = $sortedIdentities
		
		# Log
		Write-Log -Level INFO -Message "List of Managed Identity updated with a total of '$(Get-ManagedIdentityCount)' Managed Identity´s"
	}
	# Else if not connected
	else
	{
		# Log
		Write-Log -Level INFO -Message "Not connected - can´t load list of Managed Identity´s"
	}
}

function Search-ManagedIdentities
{
	param (
		[string]$searchQuery
	)
	
	# Clear
	$textboxselectedIdentityID.Text = ""
	$textboxselectedIdentityName.Text = ""
	
	# Clear current items in the CheckedListBox
	$checkedlistboxListOfManagedIdentity.Items.Clear()
	
	# Filter the managed identities based on the search query
	$global:filteredManagedIdentities = $global:sortedManagedIdentities | Where-Object { $_.DisplayName -like "*$searchQuery*" }
	
	# Populate the CheckedListBox with the filtered managed identities
	foreach ($identity in $global:filteredManagedIdentities)
	{
		$checkedlistboxListOfManagedIdentity.Items.Add($identity.DisplayName)
	}
}

function Update-SelectedIdentity
{
	param (
		[int]$selectedIndex
	)
	$selectedIdentity = $global:filteredManagedIdentities[$selectedIndex]
	$textboxselectedIdentityID.Text = "$($selectedIdentity.Id)"
	$textboxselectedIdentityName.Text = "$($selectedIdentity.DisplayName)"
}

$formManagedIdentityPermi_Load = {
	
	# Example usage:
	if (Is-Administrator)
	{
		Write-Log -Level INFO -Message "The current process is running with administrator privileges."
	}
	else
	{
		Write-Log -Level INFO -Message "The current process is NOT running with administrator privileges."
	}
	
	# Check for log path when app starts up
	CheckLogPath
	
	# Log
	Write-Log -Level INFO -Message "The application $ToolName is started"
	
	# 
	Get-CurrentExecutionFilename
	
	# Get theme mode
	$global:darkModeStateUI = Is-WindowsInDarkMode
	
	#  Set state for theme
	if ($global:darkModeStateUI)
	{
		Set-ControlTheme $formManagedIdentityPermi -Theme Dark
		
		$darkModeSateUI = $true
	}
	else
	{
		Set-ControlTheme $formManagedIdentityPermi -Theme Light
		
		$darkModeSateUI = $false
	}
	
	# Set tool state
	$ConnectedState = $false
	$clearExistingPermissions = $true
	
	# Set form text
	$formManagedIdentityPermi.Text = "$ToolName v. $FormVersion"
	$toolstripstatuslabelMain_CreatedBy.Text = "Created by: $Author"
	
	# Services to add to dropdown list (more to add soon when tested..)
	$ServiceComboBox.Items.Add("Microsoft Graph")
	$ServiceComboBox.Items.Add("Exchange Online")
	$ServiceComboBox.Items.Add("SharePoint")
}

$darkToolStripMenuItem_Click={
	
	# Set theme state
	Set-ControlTheme -Control $formManagedIdentityPermi -Theme Dark
	
	$global:darkModeStateUI = $true
}

$lightToolStripMenuItem_Click = {
	
	# Set theme state
	Set-ControlTheme -Control $formManagedIdentityPermi -Theme Light
	
	$global:darkModeStateUI = $false
}

$buttonConnectMicrosoftGraph_Click = {
	
	# If connected
	if ($labelConnectionStatus.Text -eq "Connected" -and $buttonConnectMicrosoftGraph.Text -eq "Disconnect Microsoft Graph")
	{
		try
		{
			# Disconnect
			Disconnect-MgGraph
			
			# Update states
			$global:ConnectedState = $false
			$labelConnectionStatus.Text = "Not connected"
			$labelConnectionStatus.ForeColor = 'Red'
			$buttonConnectMicrosoftGraph.Text = "Connect Microsoft Graph"
			
			# Log
			Write-Log -Level INFO -Message "Disconnected from Microsoft Graph."
			
			# Clear data
			$combobox.Items.Clear()
		}
		catch
		{
			# Log
			Write-Log -Level ERROR -Message "Error disconnecting from Microsoft Graph: $($_.Exception.Message)"
		}
	}
	else
	{
		try
		{
			# Check ExecutionPolicy
			Check-ExecutionPolicy
			
			# Check installed/loaded modules
			Check-Modules
			
			# Connect
			ConnectToGraph
			
			# If connected, set states
			if ($global:ConnectedState -eq $true)
			{
				$labelConnectionStatus.Text = "Connected"
				$labelConnectionStatus.ForeColor = 'Green'
				
				# Load managed identityes after connected
				Get-managedIdentities
				
				$buttonConnectMicrosoftGraph.Text = "Disconnect Microsoft Graph"
			}
			else
			{
				# If not connected set state
				$global:ConnectedState -eq $false
				
				$labelConnectionStatus.Text = "Not connected"
				$labelConnectionStatus.ForeColor = 'Red'
			}
		}
		catch
		{
			# Log
			Write-Log -Level ERROR -Message "Error connecting to Microsoft Graph: $($_.Exception.Message)"
		}
	}	
}

$combobox_SelectedIndexChanged = {
	
	# Get the selected identity based on ComboBox selected index
	$selectedIdentity = $global:sortedManagedIdentities[$comboBox.SelectedIndex]
	
	# Get roles assigned to the selected identity
	$roles = Get-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $selectedIdentity.Id
	
	# Extract and format role names and AppRoleIds
	$roleDetails = $roles | ForEach-Object { "$($_.ResourceDisplayName) (AppRoleId: $($_.AppRoleId))" } -join ", "
	
	# Update TextBox with selected identity details
	$textboxselectedIdentityID.Text = "$($selectedIdentity.Id)"
	$textboxAssingedRoles.Text = "$roleDetails"
}

$SubmitButton_Click = {
	
	#TODO: Place custom script here
	if ($radiobuttonAddPermissions.Checked -eq $true)
	{
		# Get data to process
		$ObjectID = $textboxselectedIdentityID.Text
		$Service = $ServiceComboBox.Text
		$Permissions = $PermissionsTextBox.Text
		
		# Debugging output
		Write-Log -Level INFO -Message "Managed Identity ObjectID: '$ObjectID'"
		Write-Log -Level INFO -Message "Service: '$Service'"
		Write-Log -Level INFO -Message "Permissions: '$Permissions'"
		
		# Validate inputs
		if (-not $ObjectID -or -not $Service -or -not $Permissions)
		{
			# Log
			Write-Log -Level INFO -Message "All fields are required."
			return
		}
		
		#Update-Log -Message "Calling Add-ServicePrincipalPermission with ManagedIdentityID: '$ObjectID', Permissions: '$Permissions', ServiceType: '$Service'"
		
		# Update permissions for managed idenityes
		if ($clearExistingPermissions)
		{
			Add-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service -clearExistingPermissions $true
		}
		else
		{
			Add-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service -clearExistingPermissions $false
		}
	}
		
	if ($radiobuttonRemovePermissions.Checked -eq $true)
	{
		# Get data to process
		$ObjectID = $textboxselectedIdentityID.Text
		$Service = $ServiceComboBox.Text
		$Permissions = $PermissionsTextBox.Text
		
		# Debugging output
		Write-Log -Level INFO -Message "Managed Identity ObjectID: '$ObjectID'"
		Write-Log -Level INFO -Message "Service: '$Service'"
		Write-Log -Level INFO -Message "Permissions: '$Permissions'"
		
		# Validate inputs
		if (-not $ObjectID -or -not $Service -or -not $Permissions)
		{
			Write-Log -Level INFO -Message "All fields are required."
			return
		}
		
		#Update-Log -Message "Calling Add-ServicePrincipalPermission with ManagedIdentityID: '$ObjectID', Permissions: '$Permissions', ServiceType: '$Service'"
		
		# Remove permissions form managed identity
		Remove-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service				
	}
}

$buttonGetCurrentAssignedPe_Click={
	
	# Get data to process
	$ObjectID = $textboxselectedIdentityID.Text
	$ObjectName = $textboxselectedIdentityName.Text
	
	# Clear the TextBox before adding new data
	$textboxAssingedRoles.Clear()
	
	# Call the function and get the result
	$result = Get-CurrentAppRoleAssignments -ManagedIdentityID $ObjectID -ManagedIdentityName $ObjectName
	
	# Set the TextBox text to the result
	$textboxAssingedRoles.Text = $result
	
	#Update-Log -Message $result
	
	#Get-CurrentAppRoleAssignments -ManagedIdentityID $ObjectID
}

$buttonReloadManagedIdentityList_Click={
	
	# Get data
	Get-managedIdentities
}

$checkboxKeepExistingPermissi_CheckedChanged={
	
	# Set state if set from user to keep existing assigned permissions or not
	if ($checkboxKeepExistingPermissi.Checked -eq $true)
	{
		# Set global state
		$global:clearExistingPermissions = $false
		
		# Log
		Write-Log -Level INFO -Message "Set to keep existing permissions (will NOT delete exisiting)"
	}
	elseif ($checkboxKeepExistingPermissi.Checked -eq $false)
	{
		# ASK IF THE USER WILL INSTALL AD Recycle Bin
		$ConfirmClearExistingPermissions = Show-MsgBox -Prompt "Will you remove existing permissions?`r`n`r`nIt can´t be reverted again!" -Title "Remove existing permissions?" -Icon Exclamation -BoxType YesNo -DefaultButton 2
		
		# Get confirmation
		If ($ConfirmClearExistingPermissions -eq "Yes")
		{
			# If confirmed set state
			$global:clearExistingPermissions = $true
			
			# Log
			Write-Log -Level INFO -Message "Set to reset existing permissions (will DELETE exisiting) - confirmed by user"
		}
		else
		{
			# If not confirmed set state
			$checkboxKeepExistingPermissi.Checked = $true
			
			# Log
			Write-Log -Level INFO -Message "Set to keep current state for reset existing permissions - confirmation to change is cancled by user"
		}		
	}
	else
	{
		# Log
		Write-Log -Level INFO -Message "No change"
	}
}

$microsoftGraphToolStripMenuItem_Click={
	
	# Start webpage
	Start-Process "https://learn.microsoft.com/en-us/graph/permissions-reference"
}

$buttonRemoveAllAssignedPermissions_Click={
	
	# Get data to process
	$ObjectID = $textboxselectedIdentityID.Text
	
	# Validate inputs
	if (-not $ObjectID)
	{
		Write-Log -Level INFO -Message "All fields are required - please select a managed identity"
		return
	}
	
	# ASK IF THE USER WILL REMOVE ALL PERMISSIONS
	$ConfirmRemoveAllExistingPermissions = Show-MsgBox -Prompt "Will you remove existing permissions?`r`n`r`nIt can´t be reverted again!" -Title "Remove all existing permissions?" -Icon Exclamation -BoxType YesNo -DefaultButton 2
	
	# If user comfirmed
	If ($ConfirmRemoveAllExistingPermissions -eq "Yes")
	{
		# Log
		Write-Log -Level INFO -Message "Will remove all existing permissions for Managed Identity with id '$ObjectID'  - confirmed by user"
		
		# Remove all assigned permissions
		Remove-AllServicePrincipalPermissions -ManagedIdentityID $ObjectID
	}
	else
	{
		# Log
		Write-Log -Level INFO -Message "Set to keep current state for reset existing permissions - confirmation to change is cancled by user"
	}
}

$exitToolStripMenuItem_Click={
	
	# Exit application
	$formManagedIdentityPermi.Close()
}

$changelogToolStripMenuItem_Click={
	
	# Open form
	Show-ChangelogForm_psf
}

$openLogFolderToolStripMenuItem_Click = {
	
	# Open logfile for today
	$objShell = New-Object -ComObject "Shell.Application"
	$objShell.Explore($LogPath)
	
	# Log
	Write-Log -Level INFO -Message "User opened log folder: $LogPath"
}

$openLogForTodayToolStripMenuItem_Click = {
	
	#OPEN CURRENT LOG FILE IN FROM FOLDER
	Write-Log -Level INFO -Message "User opened log file for today from: $LogPath"
	
	# Conduct filename
	$logFilePath = Join-Path -Path $LogPath -ChildPath ("$($ToolName)_Log_$($env:computername)" + "_" + (Get-Date -Format "dd/MM/yyyy") + ".log")
	
	# Test if file exists
	if (Test-Path $logFilePath)
	{
		# Open file
		Start-Process $logFilePath
		
		# Log
		Write-Log -Level INFO -Message "User opened log file for today: $logFilePath"
	}
	else
	{
		Show-MsgBox -Prompt "Log file not found at $logFilePath." -Title "Can't locate and open the log for today" -Icon Exclamation -BoxType OKOnly
		
		# Log
		Write-Log -Level INFO -Message "Log file not found at $logFilePath - Can't locate and open the log for today"
	}	
}

$myWebpageToolStripMenuItem_Click = {
	
	# Open webside
	Start-Process "https://sonnes.cloud"
	Write-Log -Level INFO -Message "The user clicked on the link for more information about on the website https://sonnes.cloud"
}

$myBlogToolStripMenuItem_Click = {
	
	# Open blog
	Start-Process "https://blog.sonnes.cloud"
	Write-Log -Level INFO -Message "The user clicked on the link for more information about on the website https://blog.sonnes.cloud"
}

$button_ServiceAccounts_About_Click = {
	
	# Show about box
	$yyyy = Get-Date -Format yyyy
	Show-MsgBox -Title "About $ToolName v. $FormVersion" -Prompt "Created by: $Author`r`n`r`nCopyright $yyyy © All rights reserved`r`n`r`nWebsite: sonnes.cloud`r`nBlog: blog.sonnes.cloud" -Icon Information -BoxType OKOnly
}

$buttonGetAccessScopesForSe_Click = {
	
	#Get-AssignableApiPermissionScopes -ApiDisplayName "Microsoft Graph"
	
	# Get data and get permissions
	Get-AssignableApiPermissionScopes -ServiceType "$($ServiceComboBox.Text)"
	
	# Call this function once to initialize the master list
	Initialize-MasterItems
}

$buttonAddSelectedAccessSco_Click = {
	
	$selectedScopes = @()
	
	# Loop selected scopes - add to tool for process
	foreach ($item in $checkedlistboxPermissionsToAssign.CheckedItems)
	{
		# Extract the scope value from the selected item
		if ($item -match "Role scope: '([^']+)'")
		{
			$selectedScopes += $matches[1]
			
			Write-Log -Level INFO -Message $matches[1]
		}
		<#
		elseif ($item -match "ScopeValue: ([^,]+)")
		{
			$selectedScopes += $matches[1]
			
			Write-Log -Level INFO -Message $matches[1]
		}
		#>
	}
	
	# Log
	Write-Log -Level INFO -Message "Adding access scope selected: '$($selectedScopes -join ', ')' to the list for permissions scopes to edit"
	
	# Format data
	$PermissionsTextBox.Text = $selectedScopes -join ", "
	
	# Write-Log -Level INFO -Message "Adding: $selectedScopes"
	
	# $PermissionsTextBox
}

$textboxSccessScopeToAssignFilter_TextChanged={
	
	# Get data fo filter function
	$filterText = $textboxSccessScopeToAssignFilter.Text
	
	$filteredItems = @()
	
	# Filter elements
	if ($filterText -eq "" -or $null)
	{
		# If the filter text is empty, reset to all items
		$filteredItems = $global:masterItems
		
		#Write-Log -Level ERROR -Message "Filter of access scopes cleared (no filter)"
	}
	else
	{
		# Filter items based on the filter text
		foreach ($item in $global:masterItems)
		{
			if ($item -like "*$filterText*")
			{
				$filteredItems += $item
			}
		}
	}
	
	# Clear the CheckedListBox and add the filtered items
	$checkedlistboxPermissionsToAssign.Items.Clear()
	foreach ($filteredItem in $filteredItems)
	{
		$checkedlistboxPermissionsToAssign.Items.Add($filteredItem)
	}
}
$pictureboxSupportMe_Click={
	
	Start-Process "https://buymeacoffee.com/sonnes"
	Write-Log -Level INFO -Message "The user clicked on the link for more information about on the website https://buymeacoffee.com/sonnes"
	
}

$aboutToolStripMenuItem_Click={
	
	# Open form
	Show-AboutForm_psf
}

$textboxSearch_TextChanged={
	$searchQuery = $textboxSearch.Text
	Search-ManagedIdentities -searchQuery $searchQuery
}

$checkedlistboxListOfManagedIdentity_ItemCheck=[System.Windows.Forms.ItemCheckEventHandler]{
	param (
		[System.Object]$sender,
		[System.Windows.Forms.ItemCheckEventArgs]$e
	)
	# Uncheck all other items
	for ($i = 0; $i -lt $checkedlistboxListOfManagedIdentity.Items.Count; $i++)
	{
		if ($i -ne $e.Index)
		{
			$checkedlistboxListOfManagedIdentity.SetItemChecked($i, $false)
		}
	}
	# Update the selected identity details
	if ($e.NewValue -eq [System.Windows.Forms.CheckState]::Checked)
	{
		Update-SelectedIdentity -selectedIndex $e.Index
	}
	else
	{
		$textboxselectedIdentityID.Clear()
		$textboxselectedIdentityName.Clear()
		$textboxAssingedRoles.Clear()
	}
}

$csvToolStripMenuItem_Click={

}

$downloadLatestReleaseToolStripMenuItem_Click={
	# Call function
	Get-LatestReleaseFromGitHub
}]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>