<File version="3.2">
  <FileID>994b0401-5822-49c5-99cb-717d1f11a31a</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAKy+SURBVHhe7P1XkB1X16aJMaR7zdzrQgpdKkKh
kTSjiJY0PR3q6ZnWqP9W//5z/D56EiRo4H1VoQrlDcp777333nvvvfe+ji/7KHaeKqBwAIIASYBg
YT3AG+dUZp70mevNnWvv/cEHgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIvwSn//q//q9KvvnmcomXj3+Ju7tPiZtIJBKJRKLfldw9fUp8fHxL/uf/8D+W
fPDBB0ov57/6r/43DR7efnSMLjI0t8PA7JZIJBKJRKLfmQZntxmc36GhY5C/+7v/jG28f45Lly6X
dI4u0TgwT03XJDXdIpFIJBKJfq/qnNwkt7jqpw3AY9+AkrElHbU9U9T3TotEIpFI9H6rb4amgTma
Bl9Pjf2z2u8b+mdpHJh7PZ39Vi37BfP+Kanfna1/8/ASjR2DP20APL0eawZA/VitwHk19FuHdfSt
0TOwRvvA4gunE4lEIpHookjFuaL6AfJreimo7XslqWkr2kZpHpynqn2UkoZeShv7XkkljX2UtQxq
y67rnnpu3j+l/Jo+arsmaRqwrn/b6Ap1Lb2vZgDGl/U09s9ZHc8zmqdtYImQwQy+aPclpbubjsEl
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
aLUONZRS6kLa111ivfanBAClrqCYGfB+AIjfz5+HUkpdUbFuO5vh9YcFgFC8A0CpK8jHLqXUnT2/
jvvdA4BSSimll1MGAKWUUuqBMgAopZRSD/SLBIC4EkoppZS6jjrNCXYOPyMA5jc12DlQU0oppdSF
3D1UY21XjelPCYCZDY2sqAdKKaWUupZi4y+24x8dABFRcS9PLJAvQCmllFLXdlMHjEwt/ccB8NDP
v2NqYRX9IzNyMVBKKaXUdR2ZXMLLpo7/OAAIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIeQd/x9q+optyzvIDgAAAABJRU5ErkJggg==</Preview>
  <Form>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
AA==</Form>
  <Code><![CDATA[# Write-Log -Level INFO -Message

#$checkedlistboxPermissionsToAssign.Items.Add($scopeDetails)

# Master list to store all items
$global:masterItems = @()

#region Control Helper Functions
function Update-ToolStripComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ToolStripComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ToolStripComboBox control.
	
	.PARAMETER ToolStripComboBox
		The ToolStripComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ToolStripComboBox's Items collection.
	
	.PARAMETER Append
		Adds the item(s) to the ToolStripComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ToolStripComboBox $toolStripComboBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ToolStripComboBox $toolStripComboBox1 "Red" -Append
		Update-ToolStripComboBox $toolStripComboBox1 "White" -Append
		Update-ToolStripComboBox $toolStripComboBox1 "Blue" -Append
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ToolStripComboBox]
		$ToolStripComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ToolStripComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ToolStripComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$ToolStripComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ToolStripComboBox.Items.Add($obj)
		}
		$ToolStripComboBox.EndUpdate()
	}
	else
	{
		$ToolStripComboBox.Items.Add($Items)
	}
}



function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$listBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}

function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ComboBox.DisplayMember = $DisplayMember
	}
	
	if ($ValueMember)
	{
		$ComboBox.ValueMember = $ValueMember
	}
}

#endregion

#region Control Theme Helper Function
<#
	.SYNOPSIS
		Applies a theme to the control and its children.
	
	.PARAMETER Control
		The control to theme. Usually the form itself.
	
	.PARAMETER Theme
		The color theme:
		Light
		Dark

	.PARAMETER CustomColor
		A hashtable that contains the color values.
		Keys:
		WindowColor
		ContainerColor
		BackColor
		ForeColor
		BorderColor
		SelectionForeColor
		SelectionBackColor
		MenuSelectionColor
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -Theme Dark
	
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -CustomColor @{ WindowColor = 'White'; ContainerBackColor = 'Gray'; BackColor... }
	.NOTES
		Created by SAPIEN Technologies, Inc.
#>
function Set-ControlTheme
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.ComponentModel.Component]$Control,
		[ValidateSet('Light', 'Dark')]
		[string]$Theme = 'Dark',
		[System.Collections.Hashtable]$CustomColor
	)
	
	$Font = [System.Drawing.Font]::New('Segoe UI', 9)
	
	#Initialize the colors
	if ($Theme -eq 'Dark')
	{
		$WindowColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ContainerColor = [System.Drawing.Color]::FromArgb(45, 45, 45)
		$BackColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ForeColor = [System.Drawing.Color]::White
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::DimGray
	}
	else
	{
		$WindowColor = [System.Drawing.Color]::White
		$ContainerColor = [System.Drawing.Color]::WhiteSmoke
		$BackColor = [System.Drawing.Color]::Gainsboro
		$ForeColor = [System.Drawing.Color]::Black
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::LightSteelBlue
	}
	
	if ($CustomColor)
	{
		#Check and Validate the custom colors:
		$Color = $CustomColor.WindowColor -as [System.Drawing.Color]
		if ($Color) { $WindowColor = $Color }
		$Color = $CustomColor.ContainerColor -as [System.Drawing.Color]
		if ($Color) { $ContainerColor = $Color }
		$Color = $CustomColor.BackColor -as [System.Drawing.Color]
		if ($Color) { $BackColor = $Color }
		$Color = $CustomColor.ForeColor -as [System.Drawing.Color]
		if ($Color) { $ForeColor = $Color }
		$Color = $CustomColor.BorderColor -as [System.Drawing.Color]
		if ($Color) { $BorderColor = $Color }
		$Color = $CustomColor.SelectionBackColor -as [System.Drawing.Color]
		if ($Color) { $SelectionBackColor = $Color }
		$Color = $CustomColor.SelectionForeColor -as [System.Drawing.Color]
		if ($Color) { $SelectionForeColor = $Color }
		$Color = $CustomColor.MenuSelectionColor -as [System.Drawing.Color]
		if ($Color) { $MenuSelectionColor = $Color }
	}
	
	#Define the custom renderer for the menus
	#region Add-Type definition
	try
	{
		[SAPIENTypes.SAPIENColorTable] | Out-Null
	}
	catch
	{
		if ($PSVersionTable.PSVersion.Major -ge 7)
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing', 'System.Drawing.Primitives'
		}
		else
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing'
		}
		Add-Type -ReferencedAssemblies $Assemblies -TypeDefinition "
using System;
using System.Windows.Forms;
using System.Drawing;
namespace SAPIENTypes
{
    public class SAPIENColorTable : ProfessionalColorTable
    {
        Color ContainerBackColor;
        Color BackColor;
        Color BorderColor;
		Color SelectBackColor;

        public SAPIENColorTable(Color containerColor, Color backColor, Color borderColor, Color selectBackColor)
        {
            ContainerBackColor = containerColor;
            BackColor = backColor;
            BorderColor = borderColor;
			SelectBackColor = selectBackColor;
        } 
		public override Color MenuStripGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuStripGradientEnd { get { return ContainerBackColor; } }
        public override Color ToolStripBorder { get { return BorderColor; } }
        public override Color MenuItemBorder { get { return SelectBackColor; } }
        public override Color MenuItemSelected { get { return SelectBackColor; } }
        public override Color SeparatorDark { get { return BorderColor; } }
        public override Color ToolStripDropDownBackground { get { return BackColor; } }
        public override Color MenuBorder { get { return BorderColor; } }
        public override Color MenuItemSelectedGradientBegin { get { return SelectBackColor; } }
        public override Color MenuItemSelectedGradientEnd { get { return SelectBackColor; } }      
        public override Color MenuItemPressedGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientEnd { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientMiddle { get { return ContainerBackColor; } }
        public override Color ImageMarginGradientBegin { get { return BackColor; } }
        public override Color ImageMarginGradientEnd { get { return BackColor; } }
        public override Color ImageMarginGradientMiddle { get { return BackColor; } }
    }
}"
	}
	#endregion
	
	$colorTable = New-Object SAPIENTypes.SAPIENColorTable -ArgumentList $ContainerColor, $BackColor, $BorderColor, $MenuSelectionColor
	$render = New-Object System.Windows.Forms.ToolStripProfessionalRenderer -ArgumentList $colorTable
	[System.Windows.Forms.ToolStripManager]::Renderer = $render
	
	#Set up our processing queue
	$Queue = New-Object System.Collections.Generic.Queue[System.ComponentModel.Component]
	$Queue.Enqueue($Control)
	
	Add-Type -AssemblyName System.Core
	
	#Only process the controls once.
	$Processed = New-Object System.Collections.Generic.HashSet[System.ComponentModel.Component]
	
	#Apply the colors to the controls
	while ($Queue.Count -gt 0)
	{
		$target = $Queue.Dequeue()
		
		#Skip controls we already processed
		if ($Processed.Contains($target)) { continue }
		$Processed.Add($target)
		
		#Set the text color
		$target.ForeColor = $ForeColor
		
		#region Handle Controls
		if ($target -is [System.Windows.Forms.Form])
		{
			#Set Font
			$target.Font = $Font
			$target.BackColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.SplitContainer])
		{
			$target.BackColor = $BorderColor
		}
		elseif ($target -is [System.Windows.Forms.PropertyGrid])
		{
			$target.BackColor = $BorderColor
			$target.ViewBackColor = $BackColor
			$target.ViewForeColor = $ForeColor
			$target.ViewBorderColor = $BorderColor
			$target.CategoryForeColor = $ForeColor
			$target.CategorySplitterColor = $ContainerColor
			$target.HelpBackColor = $BackColor
			$target.HelpForeColor = $ForeColor
			$target.HelpBorderColor = $BorderColor
			$target.CommandsBackColor = $BackColor
			$target.CommandsBorderColor = $BorderColor
			$target.CommandsForeColor = $ForeColor
			$target.LineColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.ContainerControl] -or
			$target -is [System.Windows.Forms.Panel])
		{
			#Set the BackColor for the container
			$target.BackColor = $ContainerColor
			
		}
		elseif ($target -is [System.Windows.Forms.GroupBox])
		{
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.Button])
		{
			$target.FlatStyle = 'Flat'
			$target.FlatAppearance.BorderColor = $BorderColor
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.CheckBox] -or
			$target -is [System.Windows.Forms.RadioButton] -or
			$target -is [System.Windows.Forms.Label])
		{
			#$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.ComboBox])
		{
			$target.BackColor = $BackColor
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.TextBox])
		{
			$target.BorderStyle = 'FixedSingle'
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.DataGridView])
		{
			$target.GridColor = $BorderColor
			$target.BackgroundColor = $ContainerColor
			$target.DefaultCellStyle.BackColor = $WindowColor
			$target.DefaultCellStyle.SelectionBackColor = $SelectionBackColor
			$target.DefaultCellStyle.SelectionForeColor = $SelectionForeColor
			$target.ColumnHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.ColumnHeadersDefaultCellStyle.ForeColor = $ForeColor
			$target.EnableHeadersVisualStyles = $false
			$target.ColumnHeadersBorderStyle = 'Single'
			$target.RowHeadersBorderStyle = 'Single'
			$target.RowHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.RowHeadersDefaultCellStyle.ForeColor = $ForeColor
			
		}
		elseif ($PSVersionTable.PSVersion.Major -le 5 -and $target -is [System.Windows.Forms.DataGrid])
		{
			$target.CaptionBackColor = $WindowColor
			$target.CaptionForeColor = $ForeColor
			$target.BackgroundColor = $ContainerColor
			$target.BackColor = $WindowColor
			$target.ForeColor = $ForeColor
			$target.HeaderBackColor = $ContainerColor
			$target.HeaderForeColor = $ForeColor
			$target.FlatMode = $true
			$target.BorderStyle = 'FixedSingle'
			$target.GridLineColor = $BorderColor
			$target.AlternatingBackColor = $ContainerColor
			$target.SelectionBackColor = $SelectionBackColor
			$target.SelectionForeColor = $SelectionForeColor
		}
		elseif ($target -is [System.Windows.Forms.ToolStrip])
		{
			
			$target.BackColor = $BackColor
			$target.Renderer = $render
			
			foreach ($item in $target.Items)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ToolStripMenuItem] -or
			$target -is [System.Windows.Forms.ToolStripDropDown] -or
			$target -is [System.Windows.Forms.ToolStripDropDownItem])
		{
			$target.BackColor = $BackColor
			foreach ($item in $target.DropDownItems)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ListBox] -or
			$target -is [System.Windows.Forms.ListView] -or
			$target -is [System.Windows.Forms.TreeView])
		{
			$target.BackColor = $WindowColor
		}
		else
		{
			$target.BackColor = $BackColor
		}
		#endregion
		
		if ($target -is [System.Windows.Forms.Control])
		{
			#Queue all the child controls
			foreach ($child in $target.Controls)
			{
				$Queue.Enqueue($child)
			}
		}
	}
}
#endregion

# Populate the master list initially for access scopes found
function Initialize-MasterItems
{
	$global:masterItems = @()
	foreach ($item in $checkedlistboxPermissionsToAssign.Items)
	{
		$global:masterItems += $item
	}
}

function Get-AssignableApiPermissionScopes
{
	param (
		[string]$ServiceType
	)
	
	try
	{
		# Clear list for existing ithems
		$checkedlistboxPermissionsToAssign.Items.Clear()
		
		# Determine the AppId based on the ServiceType
		switch ($ServiceType)
		{
			"Microsoft Graph" {
				$appId = '00000003-0000-0000-c000-000000000000'
			}
			"Exchange Online" {
				$appId = '00000002-0000-0ff1-ce00-000000000000'
			}
			"SharePoint" {
				$appId = '00000003-0000-0ff1-ce00-000000000000'
			}
			default {
				# Log
				Write-Log -Level INFO -Message "Invalid ServiceType specified. Valid values are 'Microsoft Graph', 'Exchange Online', 'SharePoint'."
				return
			}
		}
		
		# Get the service principal for the specified AppId
		Write-Log -Level INFO -Message "Retrieving service principal for AppId: '$appId'"
		
		# Get needed data
		$servicePrincipal = Get-MgServicePrincipal -Filter "AppId eq '$appId'" -Property "id,appId,displayName,appRoles,oauth2PermissionScopes,resourceSpecificApplicationPermissions"
		
		# Check if returned data
		if ($null -eq $servicePrincipal)
		{
			# Log
			Write-Log -Level INFO -Message "No service principal found with AppId '$appId', Service '$($servicePrincipal.DisplayName)'."
			return
		}
		
		# Log
		Write-Log -Level INFO -Message "Service principal retrieved: AppId '$appId', '$($servicePrincipal.DisplayName)'"
		
		# Extract the permission scopes (AppRoles and Oauth2PermissionScopes)
		$appRoles = $servicePrincipal.AppRoles
		$oauth2PermissionScopes = $servicePrincipal.Oauth2PermissionScopes
		
		# Check if scopes assigned
		if ($appRoles.Count -eq 0 -and $oauth2PermissionScopes.Count -eq 0)
		{
			# Log
			Write-Log -Level INFO -Message "No assignable permission scopes found for service principal with AppId '$appId' service '$($servicePrincipal.DisplayName)'."
			return
		}
		
		# Log
		Write-Log -Level INFO -Message "Assignable permission scopes retrieved for AppId '$appId' service '$($servicePrincipal.DisplayName)'."
		
		# Populate the CheckedListBox with permission scopes
		Write-Log -Level INFO -Message "Adding assignable permission scopes to permission list for AppId '$appId' service '$($servicePrincipal.DisplayName)'..."
		
		foreach ($role in $appRoles)
		{
			$roleDetails = "Role details: '$($role.DisplayName)', Role scope: '$($role.Value)', RoleId: '$($role.Id)'"
			$checkedlistboxPermissionsToAssign.Items.Add($roleDetails)
		}
		
		Write-Log -Level INFO -Message "Added all assignable permission scopes to permission list for AppId '$appId' service '$($servicePrincipal.DisplayName)' to the list for management."
		
		<#
		foreach ($scope in $oauth2PermissionScopes)
		{
			$scopeDetails = "Scope details: $($scope.AdminConsentDisplayName), ScopeValue: $($scope.Value), ScopeId: $($scope.Id)"
			$checkedlistboxPermissionsToAssign.Items.Add($scopeDetails)
		}
		#>
	}
	catch
	{
		# Log
		Write-Log -Level ERROR -Message "Error retrieving permission scopes: $_"
	}
}

function Get-ManagedIdentities
{
	# Clear current data in the CheckedListBox to not keep old items
	$checkedlistboxListOfManagedIdentity.Items.Clear()
	
	# If connected
	if ($global:ConnectedState)
	{
		# Log
		Write-Log -Level INFO -Message "Loading list of Managed Identity from tenant..."
		
		# Get all managed identities
		$global:managedIdentities = Get-MgServicePrincipal -Filter "servicePrincipalType eq 'ManagedIdentity'" -All
		
		# Log
		Write-Log -Level INFO -Message "Loaded updated the list of found Managed Identity´s from tenant."
		
		# Create a custom object with DisplayName and Id, then sort by DisplayName
		$sortedIdentities = $global:managedIdentities | Sort-Object DisplayName | ForEach-Object {
			[PSCustomObject]@{
				DisplayName = $_.DisplayName
				Id		    = $_.Id
			}
		}
		
		# Populate the CheckedListBox with sorted managed identities
		foreach ($identity in $sortedIdentities)
		{
			$checkedlistboxListOfManagedIdentity.Items.Add($identity.DisplayName)
		}
		
		# Store the sorted identities in a global variable for later use
		$global:sortedManagedIdentities = $sortedIdentities
		$global:filteredManagedIdentities = $sortedIdentities
		
		# Log
		Write-Log -Level INFO -Message "List of Managed Identity updated with a total of '$(Get-ManagedIdentityCount)' Managed Identity´s"
	}
	# Else if not connected
	else
	{
		# Log
		Write-Log -Level INFO -Message "Not connected - can´t load list of Managed Identity´s"
	}
}

function Search-ManagedIdentities
{
	param (
		[string]$searchQuery
	)
	
	# Clear
	$textboxselectedIdentityID.Text = ""
	$textboxselectedIdentityName.Text = ""
	
	# Clear current items in the CheckedListBox
	$checkedlistboxListOfManagedIdentity.Items.Clear()
	
	# Filter the managed identities based on the search query
	$global:filteredManagedIdentities = $global:sortedManagedIdentities | Where-Object { $_.DisplayName -like "*$searchQuery*" }
	
	# Populate the CheckedListBox with the filtered managed identities
	foreach ($identity in $global:filteredManagedIdentities)
	{
		$checkedlistboxListOfManagedIdentity.Items.Add($identity.DisplayName)
	}
}

function Update-SelectedIdentity
{
	param (
		[int]$selectedIndex
	)
	$selectedIdentity = $global:filteredManagedIdentities[$selectedIndex]
	$textboxselectedIdentityID.Text = "$($selectedIdentity.Id)"
	$textboxselectedIdentityName.Text = "$($selectedIdentity.DisplayName)"
}

$formManagedIdentityPermi_Load = {
	
	# Example usage:
	if (Is-Administrator)
	{
		Write-Log -Level INFO -Message "The current process is running with administrator privileges."
	}
	else
	{
		Write-Log -Level INFO -Message "The current process is NOT running with administrator privileges."
	}
	
	# Check for log path when app starts up
	CheckLogPath
	
	# Log
	Write-Log -Level INFO -Message "The application $ToolName is started"
	
	# 
	Get-CurrentExecutionFilename
	
	# Get theme mode
	$global:darkModeStateUI = Is-WindowsInDarkMode
	
	#  Set state for theme
	if ($global:darkModeStateUI)
	{
		Set-ControlTheme $formManagedIdentityPermi -Theme Dark
		
		$darkModeSateUI = $true
	}
	else
	{
		Set-ControlTheme $formManagedIdentityPermi -Theme Light
		
		$darkModeSateUI = $false
	}
	
	# Set tool state
	$ConnectedState = $false
	$clearExistingPermissions = $true
	
	# Set form text
	$formManagedIdentityPermi.Text = "$ToolName v. $FormVersion"
	$toolstripstatuslabelMain_CreatedBy.Text = "Created by: $Author"
	
	# Services to add to dropdown list (more to add soon when tested..)
	$ServiceComboBox.Items.Add("Microsoft Graph")
	$ServiceComboBox.Items.Add("Exchange Online")
	$ServiceComboBox.Items.Add("SharePoint")
}

$darkToolStripMenuItem_Click={
	
	# Set theme state
	Set-ControlTheme -Control $formManagedIdentityPermi -Theme Dark
	
	$global:darkModeStateUI = $true
}

$lightToolStripMenuItem_Click = {
	
	# Set theme state
	Set-ControlTheme -Control $formManagedIdentityPermi -Theme Light
	
	$global:darkModeStateUI = $false
}

$buttonConnectMicrosoftGraph_Click = {
	
	# If connected
	if ($labelConnectionStatus.Text -eq "Connected" -and $buttonConnectMicrosoftGraph.Text -eq "Disconnect Microsoft Graph")
	{
		try
		{
			# Disconnect
			Disconnect-MgGraph
			
			# Update states
			$global:ConnectedState = $false
			$labelConnectionStatus.Text = "Not connected"
			$labelConnectionStatus.ForeColor = 'Red'
			$buttonConnectMicrosoftGraph.Text = "Connect Microsoft Graph"
			
			# Log
			Write-Log -Level INFO -Message "Disconnected from Microsoft Graph."
			
			# Clear data
			$combobox.Items.Clear()
		}
		catch
		{
			# Log
			Write-Log -Level ERROR -Message "Error disconnecting from Microsoft Graph: $($_.Exception.Message)"
		}
	}
	else
	{
		try
		{
			# Check ExecutionPolicy
			Check-ExecutionPolicy
			
			# Check installed/loaded modules
			Check-Modules
			
			# Connect
			ConnectToGraph
			
			# If connected, set states
			if ($global:ConnectedState -eq $true)
			{
				$labelConnectionStatus.Text = "Connected"
				$labelConnectionStatus.ForeColor = 'Green'
				
				# Load managed identityes after connected
				Get-managedIdentities
				
				$buttonConnectMicrosoftGraph.Text = "Disconnect Microsoft Graph"
			}
			else
			{
				# If not connected set state
				$global:ConnectedState -eq $false
				
				$labelConnectionStatus.Text = "Not connected"
				$labelConnectionStatus.ForeColor = 'Red'
			}
		}
		catch
		{
			# Log
			Write-Log -Level ERROR -Message "Error connecting to Microsoft Graph: $($_.Exception.Message)"
		}
	}	
}

$combobox_SelectedIndexChanged = {
	
	# Get the selected identity based on ComboBox selected index
	$selectedIdentity = $global:sortedManagedIdentities[$comboBox.SelectedIndex]
	
	# Get roles assigned to the selected identity
	$roles = Get-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $selectedIdentity.Id
	
	# Extract and format role names and AppRoleIds
	$roleDetails = $roles | ForEach-Object { "$($_.ResourceDisplayName) (AppRoleId: $($_.AppRoleId))" } -join ", "
	
	# Update TextBox with selected identity details
	$textboxselectedIdentityID.Text = "$($selectedIdentity.Id)"
	$textboxAssingedRoles.Text = "$roleDetails"
}

$SubmitButton_Click = {
	
	#TODO: Place custom script here
	if ($radiobuttonAddPermissions.Checked -eq $true)
	{
		# Get data to process
		$ObjectID = $textboxselectedIdentityID.Text
		$Service = $ServiceComboBox.Text
		$Permissions = $PermissionsTextBox.Text
		
		# Debugging output
		Write-Log -Level INFO -Message "Managed Identity ObjectID: '$ObjectID'"
		Write-Log -Level INFO -Message "Service: '$Service'"
		Write-Log -Level INFO -Message "Permissions: '$Permissions'"
		
		# Validate inputs
		if (-not $ObjectID -or -not $Service -or -not $Permissions)
		{
			# Log
			Write-Log -Level INFO -Message "All fields are required."
			return
		}
		
		#Update-Log -Message "Calling Add-ServicePrincipalPermission with ManagedIdentityID: '$ObjectID', Permissions: '$Permissions', ServiceType: '$Service'"
		
		# Update permissions for managed idenityes
		if ($clearExistingPermissions)
		{
			Add-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service -clearExistingPermissions $true
		}
		else
		{
			Add-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service -clearExistingPermissions $false
		}
	}
		
	if ($radiobuttonRemovePermissions.Checked -eq $true)
	{
		# Get data to process
		$ObjectID = $textboxselectedIdentityID.Text
		$Service = $ServiceComboBox.Text
		$Permissions = $PermissionsTextBox.Text
		
		# Debugging output
		Write-Log -Level INFO -Message "Managed Identity ObjectID: '$ObjectID'"
		Write-Log -Level INFO -Message "Service: '$Service'"
		Write-Log -Level INFO -Message "Permissions: '$Permissions'"
		
		# Validate inputs
		if (-not $ObjectID -or -not $Service -or -not $Permissions)
		{
			Write-Log -Level INFO -Message "All fields are required."
			return
		}
		
		#Update-Log -Message "Calling Add-ServicePrincipalPermission with ManagedIdentityID: '$ObjectID', Permissions: '$Permissions', ServiceType: '$Service'"
		
		# Remove permissions form managed identity
		Remove-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service				
	}
}

$buttonGetCurrentAssignedPe_Click={
	
	# Get data to process
	$ObjectID = $textboxselectedIdentityID.Text
	$ObjectName = $textboxselectedIdentityName.Text
	
	# Clear the TextBox before adding new data
	$textboxAssingedRoles.Clear()
	
	# Call the function and get the result
	$result = Get-CurrentAppRoleAssignments -ManagedIdentityID $ObjectID -ManagedIdentityName $ObjectName
	
	# Set the TextBox text to the result
	$textboxAssingedRoles.Text = $result
	
	#Update-Log -Message $result
	
	#Get-CurrentAppRoleAssignments -ManagedIdentityID $ObjectID
}

$buttonReloadManagedIdentityList_Click={
	
	# Get data
	Get-managedIdentities
}

$checkboxKeepExistingPermissi_CheckedChanged={
	
	# Set state if set from user to keep existing assigned permissions or not
	if ($checkboxKeepExistingPermissi.Checked -eq $true)
	{
		# Set global state
		$global:clearExistingPermissions = $false
		
		# Log
		Write-Log -Level INFO -Message "Set to keep existing permissions (will NOT delete exisiting)"
	}
	elseif ($checkboxKeepExistingPermissi.Checked -eq $false)
	{
		# ASK IF THE USER WILL INSTALL AD Recycle Bin
		$ConfirmClearExistingPermissions = Show-MsgBox -Prompt "Will you remove existing permissions?`r`n`r`nIt can´t be reverted again!" -Title "Remove existing permissions?" -Icon Exclamation -BoxType YesNo -DefaultButton 2
		
		# Get confirmation
		If ($ConfirmClearExistingPermissions -eq "Yes")
		{
			# If confirmed set state
			$global:clearExistingPermissions = $true
			
			# Log
			Write-Log -Level INFO -Message "Set to reset existing permissions (will DELETE exisiting) - confirmed by user"
		}
		else
		{
			# If not confirmed set state
			$checkboxKeepExistingPermissi.Checked = $true
			
			# Log
			Write-Log -Level INFO -Message "Set to keep current state for reset existing permissions - confirmation to change is cancled by user"
		}		
	}
	else
	{
		# Log
		Write-Log -Level INFO -Message "No change"
	}
}

$microsoftGraphToolStripMenuItem_Click={
	
	# Start webpage
	Start-Process "https://learn.microsoft.com/en-us/graph/permissions-reference"
}

$buttonRemoveAllAssignedPermissions_Click={
	
	# Get data to process
	$ObjectID = $textboxselectedIdentityID.Text
	
	# Validate inputs
	if (-not $ObjectID)
	{
		Write-Log -Level INFO -Message "All fields are required - please select a managed identity"
		return
	}
	
	# ASK IF THE USER WILL REMOVE ALL PERMISSIONS
	$ConfirmRemoveAllExistingPermissions = Show-MsgBox -Prompt "Will you remove existing permissions?`r`n`r`nIt can´t be reverted again!" -Title "Remove all existing permissions?" -Icon Exclamation -BoxType YesNo -DefaultButton 2
	
	# If user comfirmed
	If ($ConfirmRemoveAllExistingPermissions -eq "Yes")
	{
		# Log
		Write-Log -Level INFO -Message "Will remove all existing permissions for Managed Identity with id '$ObjectID'  - confirmed by user"
		
		# Remove all assigned permissions
		Remove-AllServicePrincipalPermissions -ManagedIdentityID $ObjectID
	}
	else
	{
		# Log
		Write-Log -Level INFO -Message "Set to keep current state for reset existing permissions - confirmation to change is cancled by user"
	}	
}

$exitToolStripMenuItem_Click={
	
	# Exit application
	$formManagedIdentityPermi.Close()
}

$changelogToolStripMenuItem_Click={
	
	# Open form
	Show-ChangelogForm_psf
}

$openLogFolderToolStripMenuItem_Click = {
	
	# Open logfile for today
	$objShell = New-Object -ComObject "Shell.Application"
	$objShell.Explore($LogPath)
	
	# Log
	Write-Log -Level INFO -Message "User opened log folder: $LogPath"
}

$openLogForTodayToolStripMenuItem_Click = {
	
	#OPEN CURRENT LOG FILE IN FROM FOLDER
	Write-Log -Level INFO -Message "User opened log file for today from: $LogPath"
	
	# Conduct filename
	$logFilePath = Join-Path -Path $LogPath -ChildPath ("$($ToolName)_Log_$($env:computername)" + "_" + (Get-Date -Format "dd/MM/yyyy") + ".log")
	
	# Test if file exists
	if (Test-Path $logFilePath)
	{
		# Open file
		Start-Process $logFilePath
		
		# Log
		Write-Log -Level INFO -Message "User opened log file for today: $logFilePath"
	}
	else
	{
		Show-MsgBox -Prompt "Log file not found at $logFilePath." -Title "Can't locate and open the log for today" -Icon Exclamation -BoxType OKOnly
		
		# Log
		Write-Log -Level INFO -Message "Log file not found at $logFilePath - Can't locate and open the log for today"
	}	
}

$myWebpageToolStripMenuItem_Click = {
	
	# Open webside
	Start-Process "https://sonnes.cloud"
	Write-Log -Level INFO -Message "The user clicked on the link for more information about on the website https://sonnes.cloud"
}

$myBlogToolStripMenuItem_Click = {
	
	# Open blog
	Start-Process "https://blog.sonnes.cloud"
	Write-Log -Level INFO -Message "The user clicked on the link for more information about on the website https://blog.sonnes.cloud"
}

$button_ServiceAccounts_About_Click = {
	
	# Show about box
	$yyyy = Get-Date -Format yyyy
	Show-MsgBox -Title "About $ToolName v. $FormVersion" -Prompt "Created by: $Author`r`n`r`nCopyright $yyyy © All rights reserved`r`n`r`nWebsite: sonnes.cloud`r`nBlog: blog.sonnes.cloud" -Icon Information -BoxType OKOnly
}

$buttonGetAccessScopesForSe_Click = {
	
	#Get-AssignableApiPermissionScopes -ApiDisplayName "Microsoft Graph"
	
	# Get data and get permissions
	Get-AssignableApiPermissionScopes -ServiceType "$($ServiceComboBox.Text)"
	
	# Call this function once to initialize the master list
	Initialize-MasterItems
}

$buttonAddSelectedAccessSco_Click = {
	
	$selectedScopes = @()
	
	# Loop selected scopes - add to tool for process
	foreach ($item in $checkedlistboxPermissionsToAssign.CheckedItems)
	{
		# Extract the scope value from the selected item
		if ($item -match "Role scope: '([^']+)'")
		{
			$selectedScopes += $matches[1]
			
			Write-Log -Level INFO -Message $matches[1]
		}
		<#
		elseif ($item -match "ScopeValue: ([^,]+)")
		{
			$selectedScopes += $matches[1]
			
			Write-Log -Level INFO -Message $matches[1]
		}
		#>
	}
	
	# Log
	Write-Log -Level INFO -Message "Adding access scope selected: '$($selectedScopes -join ', ')' to the list for permissions scopes to edit"
	
	# Format data
	$PermissionsTextBox.Text = $selectedScopes -join ", "
	
	# Write-Log -Level INFO -Message "Adding: $selectedScopes"
	
	# $PermissionsTextBox
}

$textboxSccessScopeToAssignFilter_TextChanged={
	
	# Get data fo filter function
	$filterText = $textboxSccessScopeToAssignFilter.Text
	
	$filteredItems = @()
	
	# Filter elements
	if ($filterText -eq "" -or $null)
	{
		# If the filter text is empty, reset to all items
		$filteredItems = $global:masterItems
		
		#Write-Log -Level ERROR -Message "Filter of access scopes cleared (no filter)"
	}
	else
	{
		# Filter items based on the filter text
		foreach ($item in $global:masterItems)
		{
			if ($item -like "*$filterText*")
			{
				$filteredItems += $item
			}
		}
	}
	
	# Clear the CheckedListBox and add the filtered items
	$checkedlistboxPermissionsToAssign.Items.Clear()
	foreach ($filteredItem in $filteredItems)
	{
		$checkedlistboxPermissionsToAssign.Items.Add($filteredItem)
	}
}
$pictureboxSupportMe_Click={
	
	Start-Process "https://buymeacoffee.com/sonnes"
	Write-Log -Level INFO -Message "The user clicked on the link for more information about on the website https://buymeacoffee.com/sonnes"
	
}

$aboutToolStripMenuItem_Click={
	
	# Open form
	Show-AboutForm_psf
}

$textboxSearch_TextChanged={
	$searchQuery = $textboxSearch.Text
	Search-ManagedIdentities -searchQuery $searchQuery
}

$checkedlistboxListOfManagedIdentity_ItemCheck=[System.Windows.Forms.ItemCheckEventHandler]{
	param (
		[System.Object]$sender,
		[System.Windows.Forms.ItemCheckEventArgs]$e
	)
	# Uncheck all other items
	for ($i = 0; $i -lt $checkedlistboxListOfManagedIdentity.Items.Count; $i++)
	{
		if ($i -ne $e.Index)
		{
			$checkedlistboxListOfManagedIdentity.SetItemChecked($i, $false)
		}
	}
	# Update the selected identity details
	if ($e.NewValue -eq [System.Windows.Forms.CheckState]::Checked)
	{
		Update-SelectedIdentity -selectedIndex $e.Index
	}
	else
	{
		$textboxselectedIdentityID.Clear()
		$textboxselectedIdentityName.Clear()
		$textboxAssingedRoles.Clear()
	}
}

$csvToolStripMenuItem_Click={

}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>