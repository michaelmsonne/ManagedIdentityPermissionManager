<File version="3.2">
  <FileID>994b0401-5822-49c5-99cb-717d1f11a31a</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAJ9BSURBVHhe7P1XbCRb2q6JtQwESAJmBtKlLnSl
GwkSRtCMgDPyc3TOQMfO/Oc37f7u3r17d29vyntf9GTRe+89WfTee++9955MwzR0j7AimVWsrNq1
s/Yum/U9wAsmIyLDZcRab6z41rd+9StBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEIRfwv3/4r/4z0u/+urrUh+/wFJPT79SD5FIJBKJRB+UPL39Sv38/Ev/
u3/1/y391a9+pfRy/vP//D9r9PINoHNsieH5XQbntkUikUgkEn1gGprbYWhhl8bOIf79v/8PONb3
z/HFF1+Xdo0t0zS4QG33FLU9IpFIJBKJPlR1TW2RX1L90wbgkX9Q6fiynrreaRr6ZkQikUgk+rjV
P0vz4DzNQ6+mpoE57fuNA3M0Dc6/muzfVdt+wbp/Sup79v1vGVmmqXPopw2At88jzQCoL6sdOKvG
Adu0zv51egfX6RhceuFyIpFIJBK5ilQ9V9wwSEFtH4V1/U5JLVvZPkbL0ALVHWOUNvZR1tTvlEqb
+ilvHdK2Xd8z/dy6f0oFtf3UdU/RPGjb//axVepb+5wzABMrBpoG5m2O5xkt0D64TNhQFn/t8Cet
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
AARBcDXEAAiCE4gBEATB1RADIAhOIAZAEARXQwyAIDiBGABBEFwNMQCC4ARiAARBcDXEAAiCE4gB
EATB1RADIAhOIAZAEARXQwyAIDiBGABBEFwNMQCC4ARiAARBcDXEAAiCE4gBEATB1RADIAhOIAZA
EARXQwyAIDiBGABBEFwNMQCC4ARiAARBcDXEAAiCE4gBEATB1RADIAhOIAZAEARXQwyAIDiBGABB
EFwNMQCC4ARiAARBcDXEAAiCE4gBEATB1RADIAhOIAZAEARXQwyAIDiBGABBEFwNMQCC4ARiAARB
cDXEAAiCE4gBEATB1RADIAhOIAZAEARXQwyAIDiBGABBEFwNMQCC4ARiAARBcDXEAAiCE4gBEATB
1RADIAhOIAZAEARXQwyAIDiBGABBEFwNMQCC4ARiAARBcDXEAAiCE4gBEATB1RADIAhOIAZAEARX
QwyAIDiBGABBEFwNMQCC4ARiAARBcDXEAAiCE4gBEATB1RADIAhOIAZAEARXQwyAIDiBGABBEFwN
MQCC4ARiAARBcDXEAAiCE4gBEATB1RADIAhOIAZAEARXQwyAIDiBGABBEFwNMQCC4ARiAARBcDXE
AAiCE4gBEATB1RADIAhOIAZAEARXQwyAIDiBGABBEFwNMQCC4ARiAARBcDXEAAiCE4gBEATB1RAD
IAhOIAZAEARXQwyAIDiBGABBEFwNMQCC4ARiAARBcDXEAAiCE4gBEATB1RADIAhOIAZAEARXQwyA
IDiBGABBEFwNMQCC4ARiAARBcDXEAAiCE4gBEATB1RADIAhOIAZAEARXQwyAIDiBGABBEFwNMQCC
4ARiAARBcDXEAAiCE4gBEATB1RADIAhOIAZAEARXQwyAIDiBGABBEFwNMQCC4ARiAARBcDXEAAiC
E4gBEATB1RADIAhOIAZAEARXQwyAIDiBGABBEFwNMQCC4ARiAARBcDXEAAiCE4gBEATB1RADIAhO
IAZAEARXQwyAIDiBGABBEFwNMQCC4ARiAARBcDXEAAiCE4gBEATB1RADIAhOIAZAEARXQwyAIDiB
GABBEFwNMQCC4ARiAARBcDXEAAiCE4gBEATB1RADIAhOIAZAEARXQwyAIDiBGABBEFwNMQCC4ARi
AARBcDXEAAiCE4gBEATB1RADIAhOIAZAEARXQwyAIDiBGABBEFwNMQCC4ARiAARBcDXEAAiCE4gB
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
P4ttZgHAMMxxTbgAEO9bYoDv6uqCRqOBTqc72lPMAoD5rIR/P1tbW1hbW8P6+vqJitgm8R/j3W1m
AcAwzHFNuAAI9wCI9zfxXicGf3H7V1UAnMRPlScx4o9H/DGdxHzYa/K5BUC4p4RhGOZriRhTxZFi
w7MAwu/db2//CgqA8HfL4skZ5mtKuCHwrxUA4nDU8wvL0rkcRPMkwzDM15LQIO+W3r8+vE3EarVJ
71//tgIgXJmIvQBiBRjma4r4u/z1AsCFF2sbWFhckfYEMAzDfF15jpWPrgtlcXEFL16EvhIQ73f/
tgLgw93MDPO15NcKAKkIODxRVehkVAzDMMclofcu8b72bykAGOY4RMwMeLcAED9/eB+GYZjjGPHe
Fp7h9S8rAETEHgCGOQ7h3y7DMCc5H77H/dMLAIZhGIZhvs6wAGAYhmGY/8CwAGAYhmGY/8D8QwoA
sRCGYRiGYY5PPC4HDNYvKABWd1wwWJwMwzAMwxyjGK1ObBudWP57CoAVvUuKqB4YhmEYhjleEYO/
GMc/uwDIlxdddxxAegDDMAzDMMc7Ox5gdmn9twuAeFnS7aUXW3gwuyJVDAzDMAzDHN/MLq7j+sjt
3y4AiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIje+n/4I2RoEv1tGAAAAABJ
RU5ErkJggg==</Preview>
  <Form>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</Form>
  <Code><![CDATA[# Write-Log -Level INFO -Message

#$checkedlistboxPermissionsToAssign.Items.Add($scopeDetails)

# Master list to store all items
$global:masterItems = @()

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$listBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}

function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ComboBox.DisplayMember = $DisplayMember
	}
	
	if ($ValueMember)
	{
		$ComboBox.ValueMember = $ValueMember
	}
}

#endregion

#region Control Theme Helper Function
<#
	.SYNOPSIS
		Applies a theme to the control and its children.
	
	.PARAMETER Control
		The control to theme. Usually the form itself.
	
	.PARAMETER Theme
		The color theme:
		Light
		Dark

	.PARAMETER CustomColor
		A hashtable that contains the color values.
		Keys:
		WindowColor
		ContainerColor
		BackColor
		ForeColor
		BorderColor
		SelectionForeColor
		SelectionBackColor
		MenuSelectionColor
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -Theme Dark
	
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -CustomColor @{ WindowColor = 'White'; ContainerBackColor = 'Gray'; BackColor... }
	.NOTES
		Created by SAPIEN Technologies, Inc.
#>
function Set-ControlTheme
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.ComponentModel.Component]$Control,
		[ValidateSet('Light', 'Dark')]
		[string]$Theme = 'Dark',
		[System.Collections.Hashtable]$CustomColor
	)
	
	$Font = [System.Drawing.Font]::New('Segoe UI', 9)
	
	#Initialize the colors
	if ($Theme -eq 'Dark')
	{
		$WindowColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ContainerColor = [System.Drawing.Color]::FromArgb(45, 45, 45)
		$BackColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ForeColor = [System.Drawing.Color]::White
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::DimGray
	}
	else
	{
		$WindowColor = [System.Drawing.Color]::White
		$ContainerColor = [System.Drawing.Color]::WhiteSmoke
		$BackColor = [System.Drawing.Color]::Gainsboro
		$ForeColor = [System.Drawing.Color]::Black
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::LightSteelBlue
	}
	
	if ($CustomColor)
	{
		#Check and Validate the custom colors:
		$Color = $CustomColor.WindowColor -as [System.Drawing.Color]
		if ($Color) { $WindowColor = $Color }
		$Color = $CustomColor.ContainerColor -as [System.Drawing.Color]
		if ($Color) { $ContainerColor = $Color }
		$Color = $CustomColor.BackColor -as [System.Drawing.Color]
		if ($Color) { $BackColor = $Color }
		$Color = $CustomColor.ForeColor -as [System.Drawing.Color]
		if ($Color) { $ForeColor = $Color }
		$Color = $CustomColor.BorderColor -as [System.Drawing.Color]
		if ($Color) { $BorderColor = $Color }
		$Color = $CustomColor.SelectionBackColor -as [System.Drawing.Color]
		if ($Color) { $SelectionBackColor = $Color }
		$Color = $CustomColor.SelectionForeColor -as [System.Drawing.Color]
		if ($Color) { $SelectionForeColor = $Color }
		$Color = $CustomColor.MenuSelectionColor -as [System.Drawing.Color]
		if ($Color) { $MenuSelectionColor = $Color }
	}
	
	#Define the custom renderer for the menus
	#region Add-Type definition
	try
	{
		[SAPIENTypes.SAPIENColorTable] | Out-Null
	}
	catch
	{
		if ($PSVersionTable.PSVersion.Major -ge 7)
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing', 'System.Drawing.Primitives'
		}
		else
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing'
		}
		Add-Type -ReferencedAssemblies $Assemblies -TypeDefinition "
using System;
using System.Windows.Forms;
using System.Drawing;
namespace SAPIENTypes
{
    public class SAPIENColorTable : ProfessionalColorTable
    {
        Color ContainerBackColor;
        Color BackColor;
        Color BorderColor;
		Color SelectBackColor;

        public SAPIENColorTable(Color containerColor, Color backColor, Color borderColor, Color selectBackColor)
        {
            ContainerBackColor = containerColor;
            BackColor = backColor;
            BorderColor = borderColor;
			SelectBackColor = selectBackColor;
        } 
		public override Color MenuStripGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuStripGradientEnd { get { return ContainerBackColor; } }
        public override Color ToolStripBorder { get { return BorderColor; } }
        public override Color MenuItemBorder { get { return SelectBackColor; } }
        public override Color MenuItemSelected { get { return SelectBackColor; } }
        public override Color SeparatorDark { get { return BorderColor; } }
        public override Color ToolStripDropDownBackground { get { return BackColor; } }
        public override Color MenuBorder { get { return BorderColor; } }
        public override Color MenuItemSelectedGradientBegin { get { return SelectBackColor; } }
        public override Color MenuItemSelectedGradientEnd { get { return SelectBackColor; } }      
        public override Color MenuItemPressedGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientEnd { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientMiddle { get { return ContainerBackColor; } }
        public override Color ImageMarginGradientBegin { get { return BackColor; } }
        public override Color ImageMarginGradientEnd { get { return BackColor; } }
        public override Color ImageMarginGradientMiddle { get { return BackColor; } }
    }
}"
	}
	#endregion
	
	$colorTable = New-Object SAPIENTypes.SAPIENColorTable -ArgumentList $ContainerColor, $BackColor, $BorderColor, $MenuSelectionColor
	$render = New-Object System.Windows.Forms.ToolStripProfessionalRenderer -ArgumentList $colorTable
	[System.Windows.Forms.ToolStripManager]::Renderer = $render
	
	#Set up our processing queue
	$Queue = New-Object System.Collections.Generic.Queue[System.ComponentModel.Component]
	$Queue.Enqueue($Control)
	
	Add-Type -AssemblyName System.Core
	
	#Only process the controls once.
	$Processed = New-Object System.Collections.Generic.HashSet[System.ComponentModel.Component]
	
	#Apply the colors to the controls
	while ($Queue.Count -gt 0)
	{
		$target = $Queue.Dequeue()
		
		#Skip controls we already processed
		if ($Processed.Contains($target)) { continue }
		$Processed.Add($target)
		
		#Set the text color
		$target.ForeColor = $ForeColor
		
		#region Handle Controls
		if ($target -is [System.Windows.Forms.Form])
		{
			#Set Font
			$target.Font = $Font
			$target.BackColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.SplitContainer])
		{
			$target.BackColor = $BorderColor
		}
		elseif ($target -is [System.Windows.Forms.PropertyGrid])
		{
			$target.BackColor = $BorderColor
			$target.ViewBackColor = $BackColor
			$target.ViewForeColor = $ForeColor
			$target.ViewBorderColor = $BorderColor
			$target.CategoryForeColor = $ForeColor
			$target.CategorySplitterColor = $ContainerColor
			$target.HelpBackColor = $BackColor
			$target.HelpForeColor = $ForeColor
			$target.HelpBorderColor = $BorderColor
			$target.CommandsBackColor = $BackColor
			$target.CommandsBorderColor = $BorderColor
			$target.CommandsForeColor = $ForeColor
			$target.LineColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.ContainerControl] -or
			$target -is [System.Windows.Forms.Panel])
		{
			#Set the BackColor for the container
			$target.BackColor = $ContainerColor
			
		}
		elseif ($target -is [System.Windows.Forms.GroupBox])
		{
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.Button])
		{
			$target.FlatStyle = 'Flat'
			$target.FlatAppearance.BorderColor = $BorderColor
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.CheckBox] -or
			$target -is [System.Windows.Forms.RadioButton] -or
			$target -is [System.Windows.Forms.Label])
		{
			#$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.ComboBox])
		{
			$target.BackColor = $BackColor
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.TextBox])
		{
			$target.BorderStyle = 'FixedSingle'
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.DataGridView])
		{
			$target.GridColor = $BorderColor
			$target.BackgroundColor = $ContainerColor
			$target.DefaultCellStyle.BackColor = $WindowColor
			$target.DefaultCellStyle.SelectionBackColor = $SelectionBackColor
			$target.DefaultCellStyle.SelectionForeColor = $SelectionForeColor
			$target.ColumnHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.ColumnHeadersDefaultCellStyle.ForeColor = $ForeColor
			$target.EnableHeadersVisualStyles = $false
			$target.ColumnHeadersBorderStyle = 'Single'
			$target.RowHeadersBorderStyle = 'Single'
			$target.RowHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.RowHeadersDefaultCellStyle.ForeColor = $ForeColor
			
		}
		elseif ($PSVersionTable.PSVersion.Major -le 5 -and $target -is [System.Windows.Forms.DataGrid])
		{
			$target.CaptionBackColor = $WindowColor
			$target.CaptionForeColor = $ForeColor
			$target.BackgroundColor = $ContainerColor
			$target.BackColor = $WindowColor
			$target.ForeColor = $ForeColor
			$target.HeaderBackColor = $ContainerColor
			$target.HeaderForeColor = $ForeColor
			$target.FlatMode = $true
			$target.BorderStyle = 'FixedSingle'
			$target.GridLineColor = $BorderColor
			$target.AlternatingBackColor = $ContainerColor
			$target.SelectionBackColor = $SelectionBackColor
			$target.SelectionForeColor = $SelectionForeColor
		}
		elseif ($target -is [System.Windows.Forms.ToolStrip])
		{
			
			$target.BackColor = $BackColor
			$target.Renderer = $render
			
			foreach ($item in $target.Items)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ToolStripMenuItem] -or
			$target -is [System.Windows.Forms.ToolStripDropDown] -or
			$target -is [System.Windows.Forms.ToolStripDropDownItem])
		{
			$target.BackColor = $BackColor
			foreach ($item in $target.DropDownItems)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ListBox] -or
			$target -is [System.Windows.Forms.ListView] -or
			$target -is [System.Windows.Forms.TreeView])
		{
			$target.BackColor = $WindowColor
		}
		else
		{
			$target.BackColor = $BackColor
		}
		#endregion
		
		if ($target -is [System.Windows.Forms.Control])
		{
			#Queue all the child controls
			foreach ($child in $target.Controls)
			{
				$Queue.Enqueue($child)
			}
		}
	}
}
#endregion

# Populate the master list initially for access scopes found
function Initialize-MasterItems
{
	$global:masterItems = @()
	foreach ($item in $checkedlistboxPermissionsToAssign.Items)
	{
		$global:masterItems += $item
	}
}

function Get-AssignableApiPermissionScopes
{
	param (
		[string]$ServiceType
	)
	
	try
	{
		# Clear list for existing ithems
		$checkedlistboxPermissionsToAssign.Items.Clear()
		
		# Determine the AppId based on the ServiceType
		switch ($ServiceType)
		{
			"Microsoft Graph" {
				$appId = '00000003-0000-0000-c000-000000000000'
			}
			"Exchange Online" {
				$appId = '00000002-0000-0ff1-ce00-000000000000'
			}
			"SharePoint" {
				$appId = '00000003-0000-0ff1-ce00-000000000000'
			}
			default {
				# Log
				Write-Log -Level INFO -Message "Invalid ServiceType specified. Valid values are 'Microsoft Graph', 'Exchange Online', 'SharePoint'."
				return
			}
		}
		
		# Get the service principal for the specified AppId
		Write-Log -Level INFO -Message "Retrieving service principal for AppId: '$appId'"
		
		# Get needed data
		$servicePrincipal = Get-MgServicePrincipal -Filter "AppId eq '$appId'" -Property "id,appId,displayName,appRoles,oauth2PermissionScopes,resourceSpecificApplicationPermissions"
		
		# Check if returned data
		if ($null -eq $servicePrincipal)
		{
			# Log
			Write-Log -Level INFO -Message "No service principal found with AppId '$appId', Service '$($servicePrincipal.DisplayName)'."
			return
		}
		
		# Log
		Write-Log -Level INFO -Message "Service principal retrieved: AppId '$appId', '$($servicePrincipal.DisplayName)'"
		
		# Extract the permission scopes (AppRoles and Oauth2PermissionScopes)
		$appRoles = $servicePrincipal.AppRoles
		$oauth2PermissionScopes = $servicePrincipal.Oauth2PermissionScopes
		
		# Check if scopes assigned
		if ($appRoles.Count -eq 0 -and $oauth2PermissionScopes.Count -eq 0)
		{
			# Log
			Write-Log -Level INFO -Message "No assignable permission scopes found for service principal with AppId '$appId' service '$($servicePrincipal.DisplayName)'."
			return
		}
		
		# Log
		Write-Log -Level INFO -Message "Assignable permission scopes retrieved for AppId '$appId' service '$($servicePrincipal.DisplayName)'."
		
		# Populate the CheckedListBox with permission scopes
		Write-Log -Level INFO -Message "Adding assignable permission scopes to permission list for AppId '$appId' service '$($servicePrincipal.DisplayName)'..."
		
		foreach ($role in $appRoles)
		{
			$roleDetails = "Role details: '$($role.DisplayName)', Role scope: '$($role.Value)', RoleId: '$($role.Id)'"
			$checkedlistboxPermissionsToAssign.Items.Add($roleDetails)
		}
		
		Write-Log -Level INFO -Message "Added all assignable permission scopes to permission list for AppId '$appId' service '$($servicePrincipal.DisplayName)' to the list for management."
		
		<#
		foreach ($scope in $oauth2PermissionScopes)
		{
			$scopeDetails = "Scope details: $($scope.AdminConsentDisplayName), ScopeValue: $($scope.Value), ScopeId: $($scope.Id)"
			$checkedlistboxPermissionsToAssign.Items.Add($scopeDetails)
		}
		#>
	}
	catch
	{
		# Log
		Write-Log -Level ERROR -Message "Error retrieving permission scopes: $_"
	}
}

function Get-ManagedIdentities
{
	# Get all managed identities
	
	# Ckecl current data in list to not keep old
	$comboBox.Items.Clear()
	
	# If connected
	if ($global:ConnectedState)
	{
		# Log
		Write-Log -Level INFO -Message "Loading list of Managed Identity from tenant..."
		
		# Get all data
		$global:managedIdentities = Get-MgServicePrincipal -Filter "servicePrincipalType eq 'ManagedIdentity'"
		
		# Log
		Write-Log -Level INFO -Message "Loaded list Managed Identity from tenant."
		
		# Populate the ComboBox with managed identities
		foreach ($identity in $managedIdentities)
		{
			$comboBox.Items.Add($identity.DisplayName)
		}
		
		# Log
		Write-Log -Level INFO -Message "List of Managed Identity updated with a total of '$(Get-ManagedIdentityCount)' Managed Identity´s"
	}
	# Else if not connected
	else
	{
		# Log
		Write-Log -Level INFO -Message "Not connected - can´t load list of Managed Identity´s"
	}
}

$formManagedIdentityPermi_Load={
	#TODO: Initialize Form Controls here
	
	CheckLogPath
	
	Write-Log -Level INFO -Message "The application $ToolName is started"
	
	$global:darkModeStateUI = Is-WindowsInDarkMode
	
	if ($global:darkModeStateUI)
	{
		Set-ControlTheme $formManagedIdentityPermi -Theme Dark
		
		$darkModeSateUI = $true
	}
	else
	{
		Set-ControlTheme $formManagedIdentityPermi -Theme Light
		
		$darkModeSateUI = $false
	}
	
	$ConnectedState = $false
	$clearExistingPermissions = $true
	#$darkModeSateUI = $true
	
	#$formServiceAccountsVXxxC.Text = "Service Accounts v. $FormVersion - Created by: $Author - Company: $AuthorCompany"
	$formManagedIdentityPermi.Text = "$ToolName v. $FormVersion"
	
	$toolstripstatuslabelMain_CreatedBy.Text = "Created by: $Author"
	#$toolstripstatuslabelMain_CreatedBy.Text = "Created by: $Author"
	
	# Services to add to dropdown list
	$ServiceComboBox.Items.Add("Microsoft Graph")
	$ServiceComboBox.Items.Add("Exchange Online")
	$ServiceComboBox.Items.Add("SharePoint")
}

$darkToolStripMenuItem_Click={
	#TODO: Place custom script here
	Set-ControlTheme -Control $formManagedIdentityPermi -Theme Dark
	
	$global:darkModeStateUI = $true
}

$lightToolStripMenuItem_Click={
	Set-ControlTheme -Control $formManagedIdentityPermi -Theme Light
	
	$global:darkModeStateUI = $false
}

$buttonConnectMicrosoftGraph_Click = {
	
	# If connected
	if ($labelConnectionStatus.Text -eq "Connected" -and $buttonConnectMicrosoftGraph.Text -eq "Disconnect Microsoft Graph")
	{
		try
		{
			# Disconnect
			Disconnect-MgGraph
			
			# Update states
			$global:ConnectedState = $false
			$labelConnectionStatus.Text = "Not connected"
			$labelConnectionStatus.ForeColor = 'Red'
			$buttonConnectMicrosoftGraph.Text = "Connect Microsoft Graph"
			
			# Log
			Write-Log -Level INFO -Message "Disconnected from Microsoft Graph."
			
			# Clear data
			$combobox.Items.Clear()
		}
		catch
		{
			# Log
			Write-Log -Level ERROR -Message "Error disconnecting from Microsoft Graph: $($_.Exception.Message)"
		}
	}
	else
	{
		try
		{
			# Check installed/loaded modules
			Check-Modules
			
			# Connect
			ConnectToGraph
			
			# If connected, set states
			if ($global:ConnectedState = $true)
			{
				$labelConnectionStatus.Text = "Connected"
				$labelConnectionStatus.ForeColor = 'Green'
				
				# Load managed identityes after connected
				Get-managedIdentities
				
				$buttonConnectMicrosoftGraph.Text = "Disconnect Microsoft Graph"
			}
			else
			{
				# If not connected set state
				$global:ConnectedState = $false
				
				$labelConnectionStatus.Text = "Not connected"
				$labelConnectionStatus.ForeColor = 'Red'
			}
		}
		catch
		{
			# Log
			Write-Log -Level ERROR -Message "Error connecting to Microsoft Graph: $($_.Exception.Message)"
		}
	}	
}

$combobox_SelectedIndexChanged = {
	
	# Get the selected identity based on ComboBox selected index
	$selectedIdentity = $global:managedIdentities[$comboBox.SelectedIndex]
	
	# Get roles assigned to the selected identity
	$roles = Get-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $textboxselectedIdentityID.Text
	
	# Extract and format role names and AppRoleIds
	$roleDetails = $roles | ForEach-Object { "$($_.ResourceDisplayName) (AppRoleId: $($_.AppRoleId))" } -join ", "
	
	# Update TextBox with selected identity details
	$textboxselectedIdentityID.Text = "$($selectedIdentity.Id)"
	$textboxAssingedRoles.Text = "$roleDetails"
}

$SubmitButton_Click = {
	
	#TODO: Place custom script here
	if ($radiobuttonAddPermissions.Checked -eq $true)
	{
		$ObjectID = $textboxselectedIdentityID.Text
		$Service = $ServiceComboBox.Text
		$Permissions = $PermissionsTextBox.Text
		
		# Debugging output
		Write-Log -Level INFO -Message "Managed Identity ObjectID: '$ObjectID'"
		Write-Log -Level INFO -Message "Service: '$Service'"
		Write-Log -Level INFO -Message "Permissions: '$Permissions'"
		
		# Validate inputs
		if (-not $ObjectID -or -not $Service -or -not $Permissions)
		{
			# Log
			Write-Log -Level INFO -Message "All fields are required."
			return
		}
		
		#Update-Log -Message "Calling Add-ServicePrincipalPermission with ManagedIdentityID: '$ObjectID', Permissions: '$Permissions', ServiceType: '$Service'"
		
		# Update permissions for managed idenityes
		if ($clearExistingPermissions)
		{
			Add-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service -clearExistingPermissions $true
		}
		else
		{
			Add-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service -clearExistingPermissions $false
		}
	}
		
	if ($radiobuttonRemovePermissions.Checked -eq $true)
	{
		$ObjectID = $textboxselectedIdentityID.Text
		$Service = $ServiceComboBox.Text
		$Permissions = $PermissionsTextBox.Text
		
		# Debugging output
		Write-Log -Level INFO -Message "Managed Identity ObjectID: '$ObjectID'"
		Write-Log -Level INFO -Message "Service: '$Service'"
		Write-Log -Level INFO -Message "Permissions: '$Permissions'"
		
		# Validate inputs
		if (-not $ObjectID -or -not $Service -or -not $Permissions)
		{
			Write-Log -Level INFO -Message "All fields are required."
			return
		}
		
		#Update-Log -Message "Calling Add-ServicePrincipalPermission with ManagedIdentityID: '$ObjectID', Permissions: '$Permissions', ServiceType: '$Service'"
		
		# Remove permissions form managed identity
		Remove-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service				
	}
}

$buttonGetCurrentAssignedPe_Click={
	#TODO: Place custom script here
	$ObjectID = $textboxselectedIdentityID.Text
	
	# Clear the TextBox before adding new data
	$textboxAssingedRoles.Clear()
	
	# Call the function and get the result
	$result = Get-CurrentAppRoleAssignments -ManagedIdentityID $ObjectID
	
	# Set the TextBox text to the result
	$textboxAssingedRoles.Text = $result
	
	#Update-Log -Message $result
	
	#Get-CurrentAppRoleAssignments -ManagedIdentityID $ObjectID
}

$buttonReloadManagedIdentityList_Click={
	#TODO: Place custom script here
	Get-managedIdentities
}

$checkboxKeepExistingPermissi_CheckedChanged={
	
	# Set state if set from user to keep existing assigned permissions or not
	if ($checkboxKeepExistingPermissi.Checked -eq $true)
	{
		# Set global state
		$global:clearExistingPermissions = $false
		
		# Log
		Write-Log -Level INFO -Message "Set to keep existing permissions (will NOT delete exisiting)"
	}
	elseif ($checkboxKeepExistingPermissi.Checked -eq $false)
	{
		# ASK IF THE USER WILL INSTALL AD Recycle Bin
		$ConfirmClearExistingPermissions = Show-MsgBox -Prompt "Will you remove existing permissions?`r`n`r`nIt can´t be reverted again!" -Title "Remove existing permissions?" -Icon Exclamation -BoxType YesNo -DefaultButton 2
		
		# Get confirmation
		If ($ConfirmClearExistingPermissions -eq "Yes")
		{
			# If confirmed set state
			$global:clearExistingPermissions = $true
			
			# Log
			Write-Log -Level INFO -Message "Set to reset existing permissions (will DELETE exisiting) - confirmed by user"
		}
		else
		{
			# If not confirmed set state
			$checkboxKeepExistingPermissi.Checked = $true
			
			# Log
			Write-Log -Level INFO -Message "Set to keep current state for reset existing permissions - confirmation to change is cancled by user"
		}		
	}
	else
	{
		# Log
		Write-Log -Level INFO -Message "No change"
	}
}

$microsoftGraphToolStripMenuItem_Click={
	
	# Start webpage
	Start-Process "https://learn.microsoft.com/en-us/graph/permissions-reference"
}

$buttonRemoveAllAssignedPermissions_Click={
	
	# Get data
	$ObjectID = $textboxselectedIdentityID.Text
	
	# Validate inputs
	if (-not $ObjectID)
	{
		Write-Log -Level INFO -Message "All fields are required - please select a managed identity"
		return
	}
	
	# ASK IF THE USER WILL REMOVE ALL PERMISSIONS
	$ConfirmRemoveAllExistingPermissions = Show-MsgBox -Prompt "Will you remove existing permissions?`r`n`r`nIt can´t be reverted again!" -Title "Remove all existing permissions?" -Icon Exclamation -BoxType YesNo -DefaultButton 2
	
	# If user comfirmed
	If ($ConfirmRemoveAllExistingPermissions -eq "Yes")
	{
		# Log
		Write-Log -Level INFO -Message "Will remove all existing permissions for Managed Identity with id '$ObjectID'  - confirmed by user"
		
		# Remove all assigned permissions
		Remove-AllServicePrincipalPermissions -ManagedIdentityID $ObjectID
	}
	else
	{
		# Log
		Write-Log -Level INFO -Message "Set to keep current state for reset existing permissions - confirmation to change is cancled by user"
	}	
}

$exitToolStripMenuItem_Click={
	
	# Exit application
	$formManagedIdentityPermi.Close()
}

$changelogToolStripMenuItem_Click={
	#TODO: Place custom script here
	Show-ChangelogForm_psf
}

$openLogFolderToolStripMenuItem_Click = {
	
	# Open logfile for today
	$objShell = New-Object -ComObject "Shell.Application"
	$objShell.Explore($LogPath)
	Write-Log -Level INFO -Message "User opened log folder: $LogPath"
}

$openLogForTodayToolStripMenuItem_Click = {
	
	#OPEN CURRENT LOG FILE IN FROM FOLDER
	Write-Log -Level INFO -Message "User opened log file for today from: $LogPath"
	
	$logFilePath = Join-Path -Path $LogPath -ChildPath ("$($ToolName)_Log_$($env:computername)" + "_" + (Get-Date -Format "dd/MM/yyyy") + ".log")
	if (Test-Path $logFilePath)
	{
		Start-Process $logFilePath
		Write-Log -Level INFO -Message "User opened log file for today: $logFilePath"
	}
	else
	{
		Show-MsgBox -Prompt "Log file not found at $logFilePath." -Title "Can't locate and open the log for today" -Icon Exclamation -BoxType OKOnly
		Write-Log -Level INFO -Message "Log file not found at $logFilePath - Can't locate and open the log for today"
	}	
}

$myWebpageToolStripMenuItem_Click = {
	
	# Open webside
	Start-Process "https://sonnes.cloud"
	Write-Log -Level INFO -Message "The user clicked on the link for more information about on the website https://sonnes.cloud"	
}

$myBlogToolStripMenuItem_Click = {
	
	# Open blog
	Start-Process "https://blog.sonnes.cloud"
	Write-Log -Level INFO -Message "The user clicked on the link for more information about on the website https://blog.sonnes.cloud"
}

$button_ServiceAccounts_About_Click = {
	
	# Show about
	$yyyy = Get-Date -Format yyyy
	Show-MsgBox -Title "About $ToolName v. $FormVersion" -Prompt "Created by: $Author`r`n`r`nCopyright $yyyy © All rights reserved`r`n`r`nWebsite: sonnes.cloud`r`nBlog: blog.sonnes.cloud" -Icon Information -BoxType OKOnly
}

$buttonGetAccessScopesForSe_Click = {
	#Get-AssignableApiPermissionScopes -ApiDisplayName "Microsoft Graph"
	
	Get-AssignableApiPermissionScopes -ServiceType "$($ServiceComboBox.Text)"
	
	# Call this function once to initialize the master list
	Initialize-MasterItems
}

$buttonAddSelectedAccessSco_Click={
	$selectedScopes = @()
	foreach ($item in $checkedlistboxPermissionsToAssign.CheckedItems)
	{
		# Extract the scope value from the selected item
		if ($item -match "Role scope: '([^']+)'")
		{
			$selectedScopes += $matches[1]
			
			Write-Log -Level INFO -Message $matches[1]
		}
		<#
		elseif ($item -match "ScopeValue: ([^,]+)")
		{
			$selectedScopes += $matches[1]
			
			Write-Log -Level INFO -Message $matches[1]
		}
		#>
	}
	
	Write-Log -Level INFO -Message "Adding access scope selected: '$($selectedScopes -join ', ')' to the list for permissions scopes to edit"
	$PermissionsTextBox.Text = $selectedScopes -join ", "
	
	# Write-Log -Level INFO -Message "Adding: $selectedScopes"
	
	# $PermissionsTextBox
}

$textboxSccessScopeToAssignFilter_TextChanged={
	
	$filterText = $textboxSccessScopeToAssignFilter.Text
	$filteredItems = @()
	
	if ($filterText -eq "" -or $null)
	{
		# If the filter text is empty, reset to all items
		$filteredItems = $global:masterItems
		
		#Write-Log -Level ERROR -Message "Filter of access scopes cleared (no filter)"
	}
	else
	{
		# Filter items based on the filter text
		foreach ($item in $global:masterItems)
		{
			if ($item -like "*$filterText*")
			{
				$filteredItems += $item
			}
		}
	}
	
	# Clear the CheckedListBox and add the filtered items
	$checkedlistboxPermissionsToAssign.Items.Clear()
	foreach ($filteredItem in $filteredItems)
	{
		$checkedlistboxPermissionsToAssign.Items.Add($filteredItem)
	}
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>