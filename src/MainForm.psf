<File version="3.2">
  <FileID>994b0401-5822-49c5-99cb-717d1f11a31a</FileID>
  <Preview>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
sWodmLJOGZh1ITpZc+Bqyv3m38JHDQDV+RkqawmOOFRbkKpr8dE6dvKULkdG6eLpMzp1OlLxcYmK
OHpAn339jSIio5R2/5Gunzmh07EZerY2rXOnzyv14R1diTqvrOoOSQHFX7yoiIgInT5+WmcjopRw
PV45admKOHZGp8+cU1ziNSXcStShH3br8qV43b13XcdO7NfuXft08HSUVp49V8bd+xqZXVR+xh0d
OnBcKSlpunjsgP78l326cuWmElNidfDQGZ0/c1G5ZeZ9X552eCUAmNEPBzy6FHFZ0dExOn3qrBJu
XNGBgzu163CUAs9WlZUcpxvxd3Q7LkbR1y7o5JnjOnb0rC5HnNPuPccVeeGKzh05qj/86Xfac+S0
4uMSdCfmqnbtO6XYyOP6zZ/+rGNnzuv6tTM6ejlJ80sEAMT31ewMQ0dCpnVufmpEmal3lZ5boJLC
DFV7elWWdl3/968/U2pWjn7/m/+gQwkP1d7WqZHRMQ32dili/1f6+50nNLaw0T/gDe+D6CQ3l/uQ
HzUAjHc3KjbmlnIeFyr+WpSS797SvoNn5OkZVOLFk0rJrlFrdb5++PJbnb8crZjoaKU9yFJ28k0l
pOTpmQJ6kJSkW0k3FHf9mjJKWqXnPt1PuqN7t24qNi5e+/cd07WYBBVl5Sk29o5yn6TrRmKcbiQm
6+qJY9pz4LDu3EtS5MVLuv8oS3eS72t+aU2dVYW6f/+Rblw+r893nlHF01JF7j6sP37+tSIu39Tt
pBidjX6ojpY6pT+p/skAMNJVp7sP85SRfFW//t2XSrp9XRERp3T+ym35VwJ6eCNa9+9m6ubVy4qL
j9bhQ4f0MLdaBQ/jtffUDbW1VGv3F19p/6FjunzlqmKuJSg37YEuXbqmi8cO6cipCEVGXlRMVIQi
rt6wWhUIAIjv56s7wjnNL/i09uyZ1lZXtbKyprWVgAZ6utXW06+piQk1t7RqesGv1ZWAdRnrot+n
9tZW9Y2MW6OYhq8f0YluWQAw5+5D5+8H25pUXFYv7/y4amprNDm7YJ33nhwb1fSsuR7dr/npMdU2
NmtpJaDGylJ5OrrU19On9efPNdrfq/GxflXV1Ghp3Zy+X9XU9Jy1bt/clMYm5zQ+0K7S8mpre9YD
c6qurtScd1HtDY2anp9TW1OVeoYn5Pd7NdjbqVn/ivV6T12FyutbNDQyqSX/otrq6lRVUazo6Fi1
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
HjusW/eSFX8rWX1eaXm0UYf2HdCu779W9J0iNVXm6oc9R5RfmKXdP/6gHXvOqaa+VtkFTVqZ79ed
2zd082a0TpqA8yhVeVV90tqEzp44q8S4WJ07fkpf/uFPOhIRpQfxcfrjH7/UvhMX9OjRPSXn1Jj2
AiVeOaVjh/Zr5w8/6mTkbQXbIbYnBADcLjoqAJgKpKY4X3XNbUq+HqnTRy/rxL4j2nfqqrJz8pWd
laPU27d19cJp3cktVXc7LQBOw1TwpgIOYXsA8C1qpLtZGU+CR7qlaTcVcfmqku6nKyMzVxnpWcrL
zVVCXJxSku7p3NFjSrxxWxGHD+rc5XjdSYpW5JVLikl8oFaPR+n3UnXp6FHF3clQT9eA1QIwNjoi
T32tykprVVtbqfs37ij65HkdP39FV2NuqrqpR+N9nbr34KbiUh4o/W6Kricm6t6jXPUNDqk4L0sp
iVd09nKUmlt7lJ36QH3TS+qre6L9e07qWsxtPbx3R1GXTulSdKyuxyWovLxcUefPK/HuHSUlXNSt
tCzlpCXp62++U+rTJo12NKuk1vRNWFXajQTFXruqjOJypV6O1bGzUbp9N0UXzhxVVkmD+ptrlVfR
pPXlSR368XvFpORpddN3ut0gAOB20VEBILTMdNpaXFyyhtAdGx21Lvkz5/rNY2b59NSEJmdmNTs9
rZnZl5cAmk6A5goAcA4mAIQ6AYYHgFd4/nzTsuD9cMMfe5cAECy0wbJj7pu5IEbHxjRvjem/aWwB
cwnYwrwmJ6esyXzMrZkoyrcwq/GJKeuHYv0wvF5rcql5U3anpjU5NaX+voFNHySImZcinOdrKwr1
zQushHcEeKZnz59r2bcg/+Lm6ndNq2sbHf7CXvNsdVn+ZbMsuNLBpgodv3pdI+b1YZ36nj9b21j0
3BqrwrC6Gnyf56HegGBhxhAhAOB20HEBwOxYQ48ZzQ79xU56087aev6mDQ+tq6qqSv39/RoYGECb
7evrU3V1tXV1h/l+XgaA59bpgeayXMXG39DNlGwFNuqgtsY6jc6FesG/SntTo8bnlq3X/rwAECwf
ofL1xjIVVt42Pyd0P7Sezc+ZmZlWS0ub1XPchIaJSRMKpjVl+gZMBWemnDTLJs32BZeZ55jHQ8st
Nx6bnpm1nNhYl7Wejedat1boCN5OTc++eJ+pqWlNz8zJ71vUrPlNbbyvWU/ovUOvfbm+2Y33fvnc
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
LQsAJnF09/RZP67Orh7EVzRp1Bx5bdYsNwFgbm6eAIAf1c0tAIODw2pr73qtPCJ+cr5l39rR2W3V
x2Z/+tEDwPj4eFiT2hziOxgsjKGdMwEAP5amjI2NjVn7q1DZe708IrrFYLmfnp626ufNv4UPFgBC
Pyyz8zatAOYW8ecaKjucl8WPqQmY4WUP0e2acr/5d/BBA0BwhcFOCIi/xPAdNuKHNLy8IW4XX/0d
fOAAgIiIiM73FwWAsakF+bzBlSAiIuKno9f7ngGgbdirrlGvese81goQERHx07J9xKuudw0Aly5H
pc6synqBSQ2d4xu3iIiI+Ok4HrDq8r7Z5/L0Tfz1AHD06ImcgfF5Ky0gIiLip62nd0LVDe1/PQAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAc/n/AcdOXefaFv3hAAAAAElFTkSuQmCC</Preview>
  <Form>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</Form>
  <Code><![CDATA[
$formManagedIdentityPermi_Load={
	#TODO: Initialize Form Controls here
	Set-ControlTheme $formManagedIdentityPermi -Theme Dark
	
	$ConnectedState = $false
	$clearExistingPermissions = $true
}

$darkToolStripMenuItem_Click={
	#TODO: Place custom script here
	Set-ControlTheme -Control $formManagedIdentityPermi -Theme Dark
}

$lightToolStripMenuItem_Click={
	Set-ControlTheme -Control $formManagedIdentityPermi -Theme Light
}


#region Control Theme Helper Function
<#
	.SYNOPSIS
		Applies a theme to the control and its children.
	
	.PARAMETER Control
		The control to theme. Usually the form itself.
	
	.PARAMETER Theme
		The color theme:
		Light
		Dark

	.PARAMETER CustomColor
		A hashtable that contains the color values.
		Keys:
		WindowColor
		ContainerColor
		BackColor
		ForeColor
		BorderColor
		SelectionForeColor
		SelectionBackColor
		MenuSelectionColor
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -Theme Dark
	
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -CustomColor @{ WindowColor = 'White'; ContainerBackColor = 'Gray'; BackColor... }
	.NOTES
		Created by SAPIEN Technologies, Inc.
#>
function Set-ControlTheme
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.ComponentModel.Component]$Control,
		[ValidateSet('Light', 'Dark')]
		[string]$Theme = 'Dark',
		[System.Collections.Hashtable]$CustomColor
	)
	
	$Font = [System.Drawing.Font]::New('Segoe UI', 9)
	
	#Initialize the colors
	if ($Theme -eq 'Dark')
	{
		$WindowColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ContainerColor = [System.Drawing.Color]::FromArgb(45, 45, 45)
		$BackColor = [System.Drawing.Color]::FromArgb(32, 32, 32)
		$ForeColor = [System.Drawing.Color]::White
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::DimGray
	}
	else
	{
		$WindowColor = [System.Drawing.Color]::White
		$ContainerColor = [System.Drawing.Color]::WhiteSmoke
		$BackColor = [System.Drawing.Color]::Gainsboro
		$ForeColor = [System.Drawing.Color]::Black
		$BorderColor = [System.Drawing.Color]::DimGray
		$SelectionBackColor = [System.Drawing.SystemColors]::Highlight
		$SelectionForeColor = [System.Drawing.Color]::White
		$MenuSelectionColor = [System.Drawing.Color]::LightSteelBlue
	}
	
	if ($CustomColor)
	{
		#Check and Validate the custom colors:
		$Color = $CustomColor.WindowColor -as [System.Drawing.Color]
		if ($Color) { $WindowColor = $Color }
		$Color = $CustomColor.ContainerColor -as [System.Drawing.Color]
		if ($Color) { $ContainerColor = $Color }
		$Color = $CustomColor.BackColor -as [System.Drawing.Color]
		if ($Color) { $BackColor = $Color }
		$Color = $CustomColor.ForeColor -as [System.Drawing.Color]
		if ($Color) { $ForeColor = $Color }
		$Color = $CustomColor.BorderColor -as [System.Drawing.Color]
		if ($Color) { $BorderColor = $Color }
		$Color = $CustomColor.SelectionBackColor -as [System.Drawing.Color]
		if ($Color) { $SelectionBackColor = $Color }
		$Color = $CustomColor.SelectionForeColor -as [System.Drawing.Color]
		if ($Color) { $SelectionForeColor = $Color }
		$Color = $CustomColor.MenuSelectionColor -as [System.Drawing.Color]
		if ($Color) { $MenuSelectionColor = $Color }
	}
	
	#Define the custom renderer for the menus
	#region Add-Type definition
	try
	{
		[SAPIENTypes.SAPIENColorTable] | Out-Null
	}
	catch
	{
		if ($PSVersionTable.PSVersion.Major -ge 7)
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing', 'System.Drawing.Primitives'
		}
		else
		{
			$Assemblies = 'System.Windows.Forms', 'System.Drawing'
		}
		Add-Type -ReferencedAssemblies $Assemblies -TypeDefinition "
using System;
using System.Windows.Forms;
using System.Drawing;
namespace SAPIENTypes
{
    public class SAPIENColorTable : ProfessionalColorTable
    {
        Color ContainerBackColor;
        Color BackColor;
        Color BorderColor;
		Color SelectBackColor;

        public SAPIENColorTable(Color containerColor, Color backColor, Color borderColor, Color selectBackColor)
        {
            ContainerBackColor = containerColor;
            BackColor = backColor;
            BorderColor = borderColor;
			SelectBackColor = selectBackColor;
        } 
		public override Color MenuStripGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuStripGradientEnd { get { return ContainerBackColor; } }
        public override Color ToolStripBorder { get { return BorderColor; } }
        public override Color MenuItemBorder { get { return SelectBackColor; } }
        public override Color MenuItemSelected { get { return SelectBackColor; } }
        public override Color SeparatorDark { get { return BorderColor; } }
        public override Color ToolStripDropDownBackground { get { return BackColor; } }
        public override Color MenuBorder { get { return BorderColor; } }
        public override Color MenuItemSelectedGradientBegin { get { return SelectBackColor; } }
        public override Color MenuItemSelectedGradientEnd { get { return SelectBackColor; } }      
        public override Color MenuItemPressedGradientBegin { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientEnd { get { return ContainerBackColor; } }
        public override Color MenuItemPressedGradientMiddle { get { return ContainerBackColor; } }
        public override Color ImageMarginGradientBegin { get { return BackColor; } }
        public override Color ImageMarginGradientEnd { get { return BackColor; } }
        public override Color ImageMarginGradientMiddle { get { return BackColor; } }
    }
}"
	}
	#endregion
	
	$colorTable = New-Object SAPIENTypes.SAPIENColorTable -ArgumentList $ContainerColor, $BackColor, $BorderColor, $MenuSelectionColor
	$render = New-Object System.Windows.Forms.ToolStripProfessionalRenderer -ArgumentList $colorTable
	[System.Windows.Forms.ToolStripManager]::Renderer = $render
	
	#Set up our processing queue
	$Queue = New-Object System.Collections.Generic.Queue[System.ComponentModel.Component]
	$Queue.Enqueue($Control)
	
	Add-Type -AssemblyName System.Core
	
	#Only process the controls once.
	$Processed = New-Object System.Collections.Generic.HashSet[System.ComponentModel.Component]
	
	#Apply the colors to the controls
	while ($Queue.Count -gt 0)
	{
		$target = $Queue.Dequeue()
		
		#Skip controls we already processed
		if ($Processed.Contains($target)) { continue }
		$Processed.Add($target)
		
		#Set the text color
		$target.ForeColor = $ForeColor
		
		#region Handle Controls
		if ($target -is [System.Windows.Forms.Form])
		{
			#Set Font
			$target.Font = $Font
			$target.BackColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.SplitContainer])
		{
			$target.BackColor = $BorderColor
		}
		elseif ($target -is [System.Windows.Forms.PropertyGrid])
		{
			$target.BackColor = $BorderColor
			$target.ViewBackColor = $BackColor
			$target.ViewForeColor = $ForeColor
			$target.ViewBorderColor = $BorderColor
			$target.CategoryForeColor = $ForeColor
			$target.CategorySplitterColor = $ContainerColor
			$target.HelpBackColor = $BackColor
			$target.HelpForeColor = $ForeColor
			$target.HelpBorderColor = $BorderColor
			$target.CommandsBackColor = $BackColor
			$target.CommandsBorderColor = $BorderColor
			$target.CommandsForeColor = $ForeColor
			$target.LineColor = $ContainerColor
		}
		elseif ($target -is [System.Windows.Forms.ContainerControl] -or
			$target -is [System.Windows.Forms.Panel])
		{
			#Set the BackColor for the container
			$target.BackColor = $ContainerColor
			
		}
		elseif ($target -is [System.Windows.Forms.GroupBox])
		{
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.Button])
		{
			$target.FlatStyle = 'Flat'
			$target.FlatAppearance.BorderColor = $BorderColor
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.CheckBox] -or
			$target -is [System.Windows.Forms.RadioButton] -or
			$target -is [System.Windows.Forms.Label])
		{
			#$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.ComboBox])
		{
			$target.BackColor = $BackColor
			$target.FlatStyle = 'Flat'
		}
		elseif ($target -is [System.Windows.Forms.TextBox])
		{
			$target.BorderStyle = 'FixedSingle'
			$target.BackColor = $BackColor
		}
		elseif ($target -is [System.Windows.Forms.DataGridView])
		{
			$target.GridColor = $BorderColor
			$target.BackgroundColor = $ContainerColor
			$target.DefaultCellStyle.BackColor = $WindowColor
			$target.DefaultCellStyle.SelectionBackColor = $SelectionBackColor
			$target.DefaultCellStyle.SelectionForeColor = $SelectionForeColor
			$target.ColumnHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.ColumnHeadersDefaultCellStyle.ForeColor = $ForeColor
			$target.EnableHeadersVisualStyles = $false
			$target.ColumnHeadersBorderStyle = 'Single'
			$target.RowHeadersBorderStyle = 'Single'
			$target.RowHeadersDefaultCellStyle.BackColor = $ContainerColor
			$target.RowHeadersDefaultCellStyle.ForeColor = $ForeColor
			
		}
		elseif ($PSVersionTable.PSVersion.Major -le 5 -and $target -is [System.Windows.Forms.DataGrid])
		{
			$target.CaptionBackColor = $WindowColor
			$target.CaptionForeColor = $ForeColor
			$target.BackgroundColor = $ContainerColor
			$target.BackColor = $WindowColor
			$target.ForeColor = $ForeColor
			$target.HeaderBackColor = $ContainerColor
			$target.HeaderForeColor = $ForeColor
			$target.FlatMode = $true
			$target.BorderStyle = 'FixedSingle'
			$target.GridLineColor = $BorderColor
			$target.AlternatingBackColor = $ContainerColor
			$target.SelectionBackColor = $SelectionBackColor
			$target.SelectionForeColor = $SelectionForeColor
		}
		elseif ($target -is [System.Windows.Forms.ToolStrip])
		{
			
			$target.BackColor = $BackColor
			$target.Renderer = $render
			
			foreach ($item in $target.Items)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ToolStripMenuItem] -or
			$target -is [System.Windows.Forms.ToolStripDropDown] -or
			$target -is [System.Windows.Forms.ToolStripDropDownItem])
		{
			$target.BackColor = $BackColor
			foreach ($item in $target.DropDownItems)
			{
				$Queue.Enqueue($item)
			}
		}
		elseif ($target -is [System.Windows.Forms.ListBox] -or
			$target -is [System.Windows.Forms.ListView] -or
			$target -is [System.Windows.Forms.TreeView])
		{
			$target.BackColor = $WindowColor
		}
		else
		{
			$target.BackColor = $BackColor
		}
		#endregion
		
		if ($target -is [System.Windows.Forms.Control])
		{
			#Queue all the child controls
			foreach ($child in $target.Controls)
			{
				$Queue.Enqueue($child)
			}
		}
	}
}
#endregion

function Get-ManagedIdentities
{
	# Get managed identities
	
	$comboBox.Items.Clear()
	
	if ($ConnectedState = $true)
	{
		Update-Log -Message "Loading list of Managed Identity from tenant..."
		
		$global:managedIdentities = Get-MgServicePrincipal -Filter "servicePrincipalType eq 'ManagedIdentity'"
		
		Update-Log -Message "Loaded list Managed Identity from tenant."
		
		# Populate the ComboBox with managed identities
		foreach ($identity in $managedIdentities)
		{
			$comboBox.Items.Add($identity.DisplayName)
		}
		Update-Log -Message "List of Managed Identity updated with a total of '$(Get-ManagedIdentityCount)' Managed Identity´s"
	}
	if ($ConnectedState = $false)
	{
		Update-Log -Message "Not connected - can´t load list of Managed Identity´s"
	}
	
}

$buttonConnectMicrosoftGraph_Click = {
	
	if ($labelConnectionStatus.Text -eq "Connected" -and $buttonConnectMicrosoftGraph.Text -eq "Disconnect Microsoft Graph")
	{
		try
		{
			Disconnect-MgGraph
			$ConnectedState = $false
			$labelConnectionStatus.Text = "Not connected"
			$labelConnectionStatus.ForeColor = 'Red'
			$buttonConnectMicrosoftGraph.Text = "Connect Microsoft Graph"
			Update-Log -Message "Disconnected from Microsoft Graph."
			
			$combobox.Items.Clear()
		}
		catch
		{
			Update-Log -Message "Error disconnecting from Microsoft Graph: $_"
		}
	}
	else
	{
		try
		{			
			Check-Modules
					
			ConnectToGraph
			
			if ($ConnectedState = $true)
			{
				$labelConnectionStatus.Text = "Connected"
				$labelConnectionStatus.ForeColor = 'Green'
				
				Get-managedIdentities
				
				$buttonConnectMicrosoftGraph.Text = "Disconnect Microsoft Graph"
			}
			else
			{
				$ConnectedState = $false
				
				$labelConnectionStatus.Text = "Not connected"
				$labelConnectionStatus.ForeColor = 'Red'
			}
		}
		catch
		{
			Update-Log -Message "Error connecting to Microsoft Graph: $_"
		}
	}	
}

$combobox_SelectedIndexChanged={
	# Get the selected identity based on ComboBox selected index
	$selectedIdentity = $global:managedIdentities[$comboBox.SelectedIndex]
	
	# Get roles assigned to the selected identity
	$roles = Get-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $textboxselectedIdentityID.Text
	
	# Extract and format role names and AppRoleIds
	$roleDetails = $roles | ForEach-Object { "$($_.ResourceDisplayName) (AppRoleId: $($_.AppRoleId))" } -join ", "
	
	# Update TextBox with selected identity details
	$textboxselectedIdentityID.Text = "$($selectedIdentity.Id)"
	$textboxAssingedRoles.Text = "$roleDetails"
}

$SubmitButton_Click = {
	
	#TODO: Place custom script here
	if ($radiobuttonAddPermissions.Checked = $true)
	{
		$ObjectID = $textboxselectedIdentityID.Text
		$Service = $ServiceComboBox.Text
		$Permissions = $PermissionsTextBox.Text
		
		# Debugging output
		Update-Log -Message "Managed Identity ObjectID: '$ObjectID'"
		Update-Log -Message "Service: '$Service'"
		Update-Log -Message "Permissions: '$Permissions'"
		
		# Validate inputs
		if (-not $ObjectID -or -not $Service -or -not $Permissions)
		{
			Update-Log -Message "All fields are required."
			return
		}
		
		#Update-Log -Message "Calling Add-ServicePrincipalPermission with ManagedIdentityID: '$ObjectID', Permissions: '$Permissions', ServiceType: '$Service'"
		
		if ($clearExistingPermissions)
		{
			Add-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service -clearExistingPermissions $true
		}
		else
		{
			Add-ServicePrincipalPermission -ManagedIdentityID $ObjectID -Permissions "$Permissions" -ServiceType $Service -clearExistingPermissions $false
		}
	}
}

$buttonGetCurrentPermission_Click={
	#TODO: Place custom script here
	$ObjectID = $textboxselectedIdentityID.Text
	
	# Clear the TextBox before adding new data
	$textboxAssingedRoles.Clear()
	
	# Call the function and get the result
	$result = Get-CurrentAppRoleAssignments -ManagedIdentityID $ObjectID
	
	# Set the TextBox text to the result
	$textboxAssingedRoles.Text = $result
	
	#Update-Log -Message $result
	
	#Get-CurrentAppRoleAssignments -ManagedIdentityID $ObjectID
}

$buttonReloadManagedIdentityList_Click={
	#TODO: Place custom script here
	Get-managedIdentities
}

$checkboxKeepExistingPermissi_CheckedChanged={
	
	# TODO: Place custom script here
	if ($checkboxKeepExistingPermissi.Checked -eq $true)
	{
		$global:clearExistingPermissions = $false
		Update-Log -Message "Set to keep existing permissions (will NOT delete exisiting)"
	}
	elseif ($checkboxKeepExistingPermissi.Checked -eq $false)
	{
		$global:clearExistingPermissions = $true
		Update-Log -Message "Set to reset existing permissions (will DELETE exisiting)"
	}
	else
	{
		Update-Log -Message "No change"
	}
}]]></Code>
  <Mode>0</Mode>
  <Assemblies />
</File>